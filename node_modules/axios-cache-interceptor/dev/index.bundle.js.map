{"version":3,"file":"index.bundle.js","sources":["../src/header/headers.ts","../src/header/interpreter.ts","../src/interceptors/util.ts","../src/interceptors/request.ts","../src/util/cache-predicate.ts","../src/util/update-cache.ts","../src/interceptors/response.ts","../src/storage/build.ts","../src/storage/memory.ts","../src/util/key-generator.ts","../src/index.ts","../src/storage/web-api.ts","../src/cache/create.ts"],"sourcesContent":["export const Header = Object.freeze({\n  /**\n   * ```txt\n   * If-Modified-Since: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since\n   */\n  IfModifiedSince: 'if-modified-since',\n\n  /**\n   * ```txt\n   * Last-Modified: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Last-Modified\n   */\n  LastModified: 'last-modified',\n\n  /**\n   * ```txt\n   * If-None-Match: \"<etag_value>\"\n   * If-None-Match: \"<etag_value>\", \"<etag_value>\", â€¦\n   * If-None-Match: *\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match\n   */\n  IfNoneMatch: 'if-none-match',\n\n  /**\n   * ```txt\n   * Cache-Control: max-age=604800\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n   */\n  CacheControl: 'cache-control',\n\n  /**\n   * ```txt\n   * Pragma: no - cache;\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Pragma\n   */\n  Pragma: 'pragma',\n\n  /**\n   * ```txt\n   * ETag: W / '<etag_value>';\n   * ETag: '<etag_value>';\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag\n   */\n  ETag: 'etag',\n\n  /**\n   * ```txt\n   * Expires: <http-date>\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expires\n   */\n  Expires: 'expires',\n\n  /**\n   * ```txt\n   * Age: <delta-seconds>\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Age\n   */\n  Age: 'age',\n\n  /**\n   * Used internally as metadata to mark the cache item as revalidatable and enabling\n   * stale cache state Contains a string of ASCII characters that can be used as ETag for\n   * `If-Match` header Provided by user using `cache.etag` value.\n   *\n   * ```txt\n   * X-Axios-Cache-Etag: \"<etag_value>\"\n   * ```\n   */\n  XAxiosCacheEtag: 'x-axios-cache-etag',\n\n  /**\n   * Used internally as metadata to mark the cache item as revalidatable and enabling\n   * stale cache state may contain `'use-cache-timestamp'` if `cache.modifiedSince` is\n   * `true`, otherwise will contain a date from `cache.modifiedSince`. If a date is\n   * provided, it can be used for `If-Modified-Since` header, otherwise the cache\n   * timestamp can be used for `If-Modified-Since` header.\n   *\n   * ```txt\n   * X-Axios-Cache-Last-Modified: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n   * X-Axios-Cache-Last-Modified: use-cache-timestamp\n   * ```\n   */\n  XAxiosCacheLastModified: 'x-axios-cache-last-modified',\n\n  /**\n   * Used internally as metadata to mark the cache item able to be used if the server\n   * returns an error. The stale-if-error response directive indicates that the cache can\n   * reuse a stale response when any error occurs.\n   *\n   * ```txt\n   * XAxiosCacheStaleIfError: <seconds>\n   * ```\n   */\n  XAxiosCacheStaleIfError: 'x-axios-cache-stale-if-error'\n});\n","import { parse } from 'cache-parser';\nimport { Header } from './headers.js';\nimport type { HeaderInterpreter } from './types.js';\n\nexport const defaultHeaderInterpreter: HeaderInterpreter = (headers) => {\n  if (!headers) return 'not enough headers';\n\n  const cacheControl: unknown = headers[Header.CacheControl];\n\n  if (cacheControl) {\n    const { noCache, noStore, maxAge, maxStale, immutable, staleWhileRevalidate } = parse(\n      String(cacheControl)\n    );\n\n    // Header told that this response should not be cached.\n    if (noCache || noStore) {\n      return 'dont cache';\n    }\n\n    if (immutable) {\n      // 1 year is sufficient, as Infinity may cause problems with certain storages.\n      // It might not be the best way, but a year is better than none. Facebook shows\n      // that a browser session stays at the most 1 month.\n      return {\n        cache: 1000 * 60 * 60 * 24 * 365\n      };\n    }\n\n    if (maxAge !== undefined) {\n      const age: unknown = headers[Header.Age];\n\n      return {\n        cache: age\n          ? // If age is present, we must subtract it from maxAge\n            (maxAge - Number(age)) * 1000\n          : maxAge * 1000,\n        // Already out of date, must be requested again\n        stale:\n          // I couldn't find any documentation about who should be used, as they\n          // are not meant to overlap each other. But, as we cannot request in the\n          // background, as the stale-while-revalidate says, and we just increase\n          // its staleTtl when its present, max-stale is being preferred over\n          // stale-while-revalidate.\n          maxStale !== undefined\n            ? maxStale * 1000\n            : staleWhileRevalidate !== undefined\n              ? staleWhileRevalidate * 1000\n              : undefined\n      };\n    }\n  }\n\n  const expires: unknown = headers[Header.Expires];\n\n  if (expires) {\n    const milliseconds = Date.parse(String(expires)) - Date.now();\n    return milliseconds >= 0 ? { cache: milliseconds } : 'dont cache';\n  }\n\n  return 'not enough headers';\n};\n","import type { Method } from 'axios';\nimport type { CacheAxiosResponse, CacheRequestConfig } from '../cache/axios.js';\nimport type { CacheProperties } from '../cache/cache.js';\nimport { Header } from '../header/headers.js';\nimport type { CachedResponse, StaleStorageValue } from '../storage/types.js';\n\n/**\n * Creates a new validateStatus function that will use the one already used and also\n * accept status code 304.\n */\nexport function createValidateStatus(\n  oldValidate?: CacheRequestConfig['validateStatus']\n): (status: number) => boolean {\n  return oldValidate\n    ? (status) => oldValidate(status) || status === 304\n    : (status) => (status >= 200 && status < 300) || status === 304;\n}\n\n/** Checks if the given method is in the methods array */\nexport function isMethodIn(\n  requestMethod: Method | string = 'get',\n  methodList: Method[] = []\n): boolean {\n  requestMethod = requestMethod.toLowerCase() as Lowercase<Method>;\n  return methodList.some((method) => method === requestMethod);\n}\n\nexport interface ConfigWithCache<D> extends CacheRequestConfig<unknown, D> {\n  cache: Partial<CacheProperties<unknown, D>>;\n}\n\n/**\n * This function updates the cache when the request is stale. So, the next request to the\n * server will be made with proper header / settings.\n */\nexport function updateStaleRequest<D>(cache: StaleStorageValue, config: ConfigWithCache<D>): void {\n  config.headers ||= {};\n\n  const { etag, modifiedSince } = config.cache;\n\n  if (etag) {\n    const etagValue = etag === true ? (cache.data?.headers[Header.ETag] as unknown) : etag;\n\n    if (etagValue) {\n      config.headers[Header.IfNoneMatch] = etagValue;\n    }\n  }\n\n  if (modifiedSince) {\n    config.headers[Header.IfModifiedSince] =\n      modifiedSince === true\n        ? // If last-modified is not present, use the createdAt timestamp\n          (cache.data.headers[Header.LastModified] as unknown) ||\n          new Date(cache.createdAt).toUTCString()\n        : modifiedSince.toUTCString();\n  }\n}\n\n/**\n * Creates the new date to the cache by the provided response. Also handles possible 304\n * Not Modified by updating response properties.\n */\nexport function createCacheResponse<R, D>(\n  response: CacheAxiosResponse<R, D>,\n  previousCache?: CachedResponse\n): CachedResponse {\n  if (response.status === 304 && previousCache) {\n    // Set the cache information into the response object\n    response.cached = true;\n    response.data = previousCache.data as R;\n    response.status = previousCache.status;\n    response.statusText = previousCache.statusText;\n\n    // Update possible new headers\n    response.headers = {\n      ...previousCache.headers,\n      ...response.headers\n    };\n\n    // return the old cache\n    return previousCache;\n  }\n\n  // New Response\n  return {\n    data: response.data,\n    status: response.status,\n    statusText: response.statusText,\n    headers: response.headers\n  };\n}\n","import { deferred } from 'fast-defer';\nimport type { AxiosCacheInstance, CacheAxiosResponse } from '../cache/axios.js';\nimport { Header } from '../header/headers.js';\nimport type { CachedResponse, CachedStorageValue, LoadingStorageValue } from '../storage/types.js';\nimport type { RequestInterceptor } from './build.js';\nimport {\n  type ConfigWithCache,\n  createValidateStatus,\n  isMethodIn,\n  updateStaleRequest\n} from './util.js';\n\nexport function defaultRequestInterceptor(axios: AxiosCacheInstance) {\n  const onFulfilled: RequestInterceptor['onFulfilled'] = async (config) => {\n    config.id = axios.generateKey(config);\n\n    if (config.cache === false) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: config.id,\n          msg: 'Ignoring cache because config.cache === false',\n          data: config\n        });\n      }\n\n      return config;\n    }\n\n    // merge defaults with per request configuration\n    config.cache = { ...axios.defaults.cache, ...config.cache };\n\n    if (\n      typeof config.cache.cachePredicate === 'object' &&\n      config.cache.cachePredicate.ignoreUrls &&\n      config.url\n    ) {\n      for (const url of config.cache.cachePredicate.ignoreUrls) {\n        if (\n          url instanceof RegExp\n            ? // Handles stateful regexes\n              // biome-ignore lint: reduces the number of checks\n              ((url.lastIndex = 0), url.test(config.url))\n            : config.url.includes(url)\n        ) {\n          if (__ACI_DEV__) {\n            axios.debug({\n              id: config.id,\n              msg: `Ignored because url (${config.url}) matches ignoreUrls (${config.cache.cachePredicate.ignoreUrls})`,\n              data: {\n                url: config.url,\n                cachePredicate: config.cache.cachePredicate\n              }\n            });\n          }\n\n          return config;\n        }\n      }\n    }\n\n    // Applies sufficient headers to prevent other cache systems to work along with this one\n    //\n    // Its currently used before isMethodIn because if the isMethodIn returns false, the request\n    // shouldn't be cached an therefore neither in the browser.\n    if (config.cache.cacheTakeover) {\n      config.headers[Header.CacheControl] ??= 'no-cache';\n      config.headers[Header.Pragma] ??= 'no-cache';\n      config.headers[Header.Expires] ??= '0';\n    }\n\n    if (!isMethodIn(config.method, config.cache.methods)) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: config.id,\n          msg: `Ignored because method (${config.method}) is not in cache.methods (${config.cache.methods})`\n        });\n      }\n\n      return config;\n    }\n\n    // Assumes that the storage handled staled responses\n    let cache = await axios.storage.get(config.id, config);\n    const overrideCache = config.cache.override;\n\n    // Not cached, continue the request, and mark it as fetching\n    // biome-ignore lint/suspicious/noConfusingLabels: required to break condition in simultaneous accesses\n    ignoreAndRequest: if (cache.state === 'empty' || cache.state === 'stale' || overrideCache) {\n      // This checks for simultaneous access to a new key. The js event loop jumps on the\n      // first await statement, so the second (asynchronous call) request may have already\n      // started executing.\n      if (axios.waiting[config.id] && !overrideCache) {\n        cache = (await axios.storage.get(config.id, config)) as\n          | CachedStorageValue\n          | LoadingStorageValue;\n\n        // @ts-expect-error This check is required when a request has it own cache deleted manually, lets\n        // say by a `axios.storage.delete(key)` and has a concurrent loading request.\n        // Because in this case, the cache will be empty and may still has a pending key\n        // on waiting map.\n        if (cache.state !== 'empty') {\n          if (__ACI_DEV__) {\n            axios.debug({\n              id: config.id,\n              msg: 'Waiting list had an deferred for this key, waiting for it to finish'\n            });\n          }\n\n          break ignoreAndRequest;\n        }\n      }\n\n      // Create a deferred to resolve other requests for the same key when it's completed\n      axios.waiting[config.id] = deferred();\n\n      // Adds a default reject handler to catch when the request gets aborted without\n      // others waiting for it.\n      axios.waiting[config.id]!.catch(() => undefined);\n\n      await axios.storage.set(\n        config.id,\n        {\n          state: 'loading',\n          previous: overrideCache\n            ? // Simply determine if the request is stale or not\n              // based if it had previous data or not\n              cache.data\n              ? 'stale'\n              : 'empty'\n            : // Typescript doesn't know that cache.state here can only be 'empty' or 'stale'\n              (cache.state as 'stale'),\n\n          data: cache.data as any,\n\n          // If the cache is empty and asked to override it, use the current timestamp\n          createdAt: overrideCache && !cache.createdAt ? Date.now() : (cache.createdAt as any)\n        },\n        config\n      );\n\n      if (cache.state === 'stale') {\n        updateStaleRequest(cache, config as ConfigWithCache<unknown>);\n\n        if (__ACI_DEV__) {\n          axios.debug({\n            id: config.id,\n            msg: 'Updated stale request'\n          });\n        }\n      }\n\n      config.validateStatus = createValidateStatus(config.validateStatus);\n\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: config.id,\n          msg: 'Sending request, waiting for response',\n          data: {\n            overrideCache,\n            state: cache.state\n          }\n        });\n      }\n\n      // Hydrates any UI temporarily, if cache is available\n      if (cache.state === 'stale' || cache.data) {\n        await config.cache.hydrate?.(cache);\n      }\n\n      return config;\n    }\n\n    let cachedResponse: CachedResponse;\n\n    if (cache.state === 'loading') {\n      const deferred = axios.waiting[config.id];\n\n      // The deferred may not exists when the process is using a persistent\n      // storage and cancelled  in the middle of a request, this would result in\n      // a pending loading state in the storage but no current promises to resolve\n      if (!deferred) {\n        // Hydrates any UI temporarily, if cache is available\n        if (cache.data) {\n          await config.cache.hydrate?.(cache);\n        }\n\n        return config;\n      }\n\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: config.id,\n          msg: 'Detected concurrent request, waiting for it to finish'\n        });\n      }\n\n      try {\n        cachedResponse = await deferred;\n      } catch (err) {\n        if (__ACI_DEV__) {\n          axios.debug({\n            id: config.id,\n            msg: 'Deferred rejected, requesting again',\n            data: err\n          });\n        }\n\n        // Hydrates any UI temporarily, if cache is available\n        /* c8 ignore next 3 */\n        if (cache.data) {\n          await config.cache.hydrate?.(cache);\n        }\n\n        // The deferred is rejected when the request that we are waiting rejects its cache.\n        // In this case, we need to redo the request all over again.\n        return onFulfilled(config);\n      }\n    } else {\n      cachedResponse = cache.data;\n    }\n\n    // The cached data is already transformed after receiving the response from the server.\n    // Reapplying the transformation on the transformed data will have an unintended effect.\n    // Since the cached data is already in the desired format, there is no need to apply the transformation function again.\n    config.transformResponse = undefined;\n\n    // Even though the response interceptor receives this one from here,\n    // it has been configured to ignore cached responses = true\n    config.adapter = function cachedAdapter(): Promise<CacheAxiosResponse> {\n      return Promise.resolve({\n        config,\n        data: cachedResponse.data,\n        headers: cachedResponse.headers,\n        status: cachedResponse.status,\n        statusText: cachedResponse.statusText,\n        cached: true,\n\n        id: config.id!\n      });\n    };\n\n    if (__ACI_DEV__) {\n      axios.debug({\n        id: config.id,\n        msg: 'Returning cached response'\n      });\n    }\n\n    return config;\n  };\n\n  return {\n    onFulfilled,\n    apply: () => axios.interceptors.request.use(onFulfilled)\n  };\n}\n","import type { CacheAxiosResponse } from '../cache/axios.js';\n\nimport type { CachePredicate, CachePredicateObject } from './types.js';\n\n/** Tests an response against a {@link CachePredicateObject}. */\nexport async function testCachePredicate<R = unknown, D = unknown>(\n  response: CacheAxiosResponse<R, D>,\n  predicate: CachePredicate<R, D>\n): Promise<boolean> {\n  if (typeof predicate === 'function') {\n    return predicate(response);\n  }\n\n  const { statusCheck, responseMatch, containsHeaders } = predicate;\n\n  if (\n    (statusCheck && !(await statusCheck(response.status))) ||\n    (responseMatch && !(await responseMatch(response)))\n  ) {\n    return false;\n  }\n\n  if (containsHeaders) {\n    for (const [header, predicate] of Object.entries(containsHeaders)) {\n      if (\n        !(await predicate(\n          // Avoid bugs in case the header is not in lower case\n          response.headers[header.toLowerCase()] ?? response.headers[header]\n        ))\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import type { CacheAxiosResponse } from '../cache/axios.js';\nimport type { AxiosStorage } from '../storage/types.js';\nimport type { CacheUpdater } from './types.js';\n\n/** Function to update all caches, from CacheProperties.update, with the new data. */\nexport async function updateCache<R, D>(\n  storage: AxiosStorage,\n  data: CacheAxiosResponse<R, D>,\n  cacheUpdater: CacheUpdater<R, D>\n): Promise<void> {\n  // Global cache update function.\n  if (typeof cacheUpdater === 'function') {\n    return cacheUpdater(data);\n  }\n\n  for (const [cacheKey, updater] of Object.entries(cacheUpdater)) {\n    if (updater === 'delete') {\n      await storage.remove(cacheKey, data.config);\n      continue;\n    }\n\n    const value = await storage.get(cacheKey, data.config);\n\n    if (value.state === 'loading') {\n      continue;\n    }\n\n    const newValue = await updater(value, data);\n\n    if (newValue === 'delete') {\n      await storage.remove(cacheKey, data.config);\n      continue;\n    }\n\n    if (newValue !== 'ignore') {\n      await storage.set(cacheKey, newValue, data.config);\n    }\n  }\n}\n","import type { AxiosResponseHeaders } from 'axios';\nimport { parse } from 'cache-parser';\nimport type { AxiosCacheInstance, CacheAxiosResponse, CacheRequestConfig } from '../cache/axios.js';\nimport type { CacheProperties } from '../cache/cache.js';\nimport { Header } from '../header/headers.js';\nimport type { CachedStorageValue } from '../storage/types.js';\nimport { testCachePredicate } from '../util/cache-predicate.js';\nimport { updateCache } from '../util/update-cache.js';\nimport type { ResponseInterceptor } from './build.js';\nimport { createCacheResponse, isMethodIn } from './util.js';\n\nexport function defaultResponseInterceptor(axios: AxiosCacheInstance): ResponseInterceptor {\n  /**\n   * Rejects cache for an response response.\n   *\n   * Also update the waiting list for this key by rejecting it.\n   */\n  const rejectResponse = async (responseId: string, config: CacheRequestConfig) => {\n    // Updates the cache to empty to prevent infinite loading state\n    await axios.storage.remove(responseId, config);\n\n    // Rejects the deferred, if present\n    axios.waiting[responseId]?.reject();\n\n    delete axios.waiting[responseId];\n  };\n\n  const onFulfilled: ResponseInterceptor['onFulfilled'] = async (response) => {\n    // When response.config is not present, the response is indeed a error.\n    if (!response?.config) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          msg: 'Response interceptor received an unknown response.',\n          data: response\n        });\n      }\n\n      // Re-throws the error\n      throw response;\n    }\n\n    response.id = response.config.id!;\n    response.cached ??= false;\n\n    const config = response.config;\n    // Request interceptor merges defaults with per request configuration\n    const cacheConfig = config.cache as CacheProperties;\n\n    // Response is already cached\n    if (response.cached) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: 'Returned cached response'\n        });\n      }\n\n      return response;\n    }\n\n    // Skip cache: either false or weird behavior\n    // config.cache should always exists, at least from global config merge.\n    if (!cacheConfig) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: 'Response with config.cache falsy',\n          data: response\n        });\n      }\n\n      response.cached = false;\n      return response;\n    }\n\n    // Update other entries before updating himself\n    if (cacheConfig.update) {\n      await updateCache(axios.storage, response, cacheConfig.update);\n    }\n\n    if (!isMethodIn(config.method, cacheConfig.methods)) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: `Ignored because method (${config.method}) is not in cache.methods (${cacheConfig.methods})`,\n          data: { config, cacheConfig }\n        });\n      }\n\n      return response;\n    }\n\n    const cache = await axios.storage.get(response.id, config);\n\n    if (\n      // If the request interceptor had a problem or it wasn't cached\n      cache.state !== 'loading'\n    ) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: \"Response not cached and storage isn't loading\",\n          data: { cache, response }\n        });\n      }\n\n      return response;\n    }\n\n    // Config told that this response should be cached.\n    if (\n      // For 'loading' values (previous: stale), this check already ran in the past.\n      !cache.data &&\n      !(await testCachePredicate(response, cacheConfig.cachePredicate))\n    ) {\n      await rejectResponse(response.id, config);\n\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: 'Cache predicate rejected this response'\n        });\n      }\n\n      return response;\n    }\n\n    // Avoid remnant headers from remote server to break implementation\n    for (const header of Object.keys(response.headers)) {\n      if (header.startsWith('x-axios-cache')) {\n        delete response.headers[header];\n      }\n    }\n\n    if (cacheConfig.etag && cacheConfig.etag !== true) {\n      response.headers[Header.XAxiosCacheEtag] = cacheConfig.etag;\n    }\n\n    if (cacheConfig.modifiedSince) {\n      response.headers[Header.XAxiosCacheLastModified] =\n        cacheConfig.modifiedSince === true\n          ? 'use-cache-timestamp'\n          : cacheConfig.modifiedSince.toUTCString();\n    }\n\n    let ttl = cacheConfig.ttl || -1; // always set from global config\n    let staleTtl: number | undefined;\n\n    if (cacheConfig.interpretHeader) {\n      const expirationTime = axios.headerInterpreter(response.headers);\n\n      // Cache should not be used\n      if (expirationTime === 'dont cache') {\n        await rejectResponse(response.id, config);\n\n        if (__ACI_DEV__) {\n          axios.debug({\n            id: response.id,\n            msg: `Cache header interpreted as 'dont cache'`,\n            data: { cache, response, expirationTime }\n          });\n        }\n\n        return response;\n      }\n\n      if (expirationTime !== 'not enough headers') {\n        if (typeof expirationTime === 'number') {\n          ttl = expirationTime;\n        } else {\n          ttl = expirationTime.cache;\n          staleTtl = expirationTime.stale;\n        }\n      }\n    }\n\n    const data = createCacheResponse(response, cache.data);\n\n    if (typeof ttl === 'function') {\n      ttl = await ttl(response);\n    }\n\n    if (cacheConfig.staleIfError) {\n      response.headers[Header.XAxiosCacheStaleIfError] = String(ttl);\n    }\n\n    if (__ACI_DEV__) {\n      axios.debug({\n        id: response.id,\n        msg: 'Useful response configuration found',\n        data: { cacheConfig, cacheResponse: data }\n      });\n    }\n\n    const newCache: CachedStorageValue = {\n      state: 'cached',\n      ttl,\n      staleTtl,\n      createdAt: Date.now(),\n      data\n    };\n\n    // Resolve all other requests waiting for this response\n    const waiting = axios.waiting[response.id];\n\n    if (waiting) {\n      waiting.resolve(newCache.data);\n      delete axios.waiting[response.id];\n\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: 'Found waiting deferred(s) and resolved them'\n        });\n      }\n    }\n\n    // Define this key as cache on the storage\n    await axios.storage.set(response.id, newCache, config);\n\n    if (__ACI_DEV__) {\n      axios.debug({\n        id: response.id,\n        msg: 'Response cached',\n        data: { cache: newCache, response }\n      });\n    }\n\n    // Return the response with cached as false, because it was not cached at all\n    return response;\n  };\n\n  const onRejected: ResponseInterceptor['onRejected'] = async (error) => {\n    // When response.config is not present, the response is indeed a error.\n    if (!error.isAxiosError || !error.config) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          msg: 'FATAL: Received an non axios error in the rejected response interceptor, ignoring.',\n          data: error\n        });\n      }\n\n      // We should probably re-request the response to avoid an infinite loading state here\n      // but, since this is an unknown error, we cannot figure out what request ID to use.\n      // And the only solution is to let the storage actively reject the current loading state.\n      throw error;\n    }\n\n    const config = error.config as CacheRequestConfig & { headers: AxiosResponseHeaders };\n    const id = config.id;\n    const cacheConfig = config.cache as CacheProperties;\n    const response = error.response as CacheAxiosResponse | undefined;\n\n    // config.cache should always exist, at least from global config merge.\n    if (!cacheConfig || !id) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          msg: 'Web request returned an error but cache handling is not enabled',\n          data: { error }\n        });\n      }\n\n      throw error;\n    }\n\n    if (!isMethodIn(config.method, cacheConfig.methods)) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id,\n          msg: `Ignored because method (${config.method}) is not in cache.methods (${cacheConfig.methods})`,\n          data: { config, cacheConfig }\n        });\n      }\n\n      // Rejects all other requests waiting for this response\n      await rejectResponse(id, config);\n\n      throw error;\n    }\n\n    const cache = await axios.storage.get(id, config);\n\n    if (\n      // This will only not be loading if the interceptor broke\n      cache.state !== 'loading' ||\n      cache.previous !== 'stale'\n    ) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id,\n          msg: 'Caught an error in the request interceptor',\n          data: { cache, error, config }\n        });\n      }\n\n      // Rejects all other requests waiting for this response\n      await rejectResponse(id, config);\n\n      throw error;\n    }\n\n    if (cacheConfig.staleIfError) {\n      const cacheControl = String(response?.headers[Header.CacheControl]);\n      const staleHeader = cacheControl && parse(cacheControl).staleIfError;\n\n      const staleIfError =\n        typeof cacheConfig.staleIfError === 'function'\n          ? await cacheConfig.staleIfError(response, cache, error)\n          : cacheConfig.staleIfError === true && staleHeader\n            ? staleHeader * 1000 //staleIfError is in seconds\n            : cacheConfig.staleIfError;\n\n      if (__ACI_DEV__) {\n        axios.debug({\n          id,\n          msg: 'Found cache if stale config for rejected response',\n          data: { error, config, staleIfError }\n        });\n      }\n\n      if (\n        staleIfError === true ||\n        // staleIfError is the number of seconds that stale is allowed to be used\n        (typeof staleIfError === 'number' && cache.createdAt + staleIfError > Date.now())\n      ) {\n        // Resolve all other requests waiting for this response\n        axios.waiting[id]?.resolve(cache.data);\n        delete axios.waiting[id];\n\n        // re-mark the cache as stale\n        await axios.storage.set(\n          id,\n          {\n            state: 'stale',\n            createdAt: Date.now(),\n            data: cache.data\n          },\n          config\n        );\n\n        if (__ACI_DEV__) {\n          axios.debug({\n            id,\n            msg: 'staleIfError resolved this response with cached data',\n            data: { error, config, cache }\n          });\n        }\n\n        return {\n          cached: true,\n          config,\n          id,\n          data: cache.data.data,\n          headers: cache.data.headers,\n          status: cache.data.status,\n          statusText: cache.data.statusText\n        };\n      }\n    }\n\n    if (__ACI_DEV__) {\n      axios.debug({\n        id,\n        msg: 'Received an unknown error that could not be handled',\n        data: { error, config }\n      });\n    }\n\n    // Rejects all other requests waiting for this response\n    await rejectResponse(id, config);\n\n    throw error;\n  };\n\n  return {\n    onFulfilled,\n    onRejected,\n    apply: () => axios.interceptors.response.use(onFulfilled, onRejected)\n  };\n}\n","import type { CacheRequestConfig } from '../cache/axios.js';\nimport { Header } from '../header/headers.js';\nimport type { MaybePromise } from '../util/types.js';\nimport type { AxiosStorage, CachedStorageValue, StaleStorageValue, StorageValue } from './types.js';\n\n/** Returns true if the provided object was created from {@link buildStorage} function. */\nexport const isStorage = (obj: unknown): obj is AxiosStorage =>\n  !!obj && !!(obj as Record<string, boolean>)['is-storage'];\n\nfunction hasUniqueIdentifierHeader(value: CachedStorageValue | StaleStorageValue): boolean {\n  const headers = value.data.headers;\n\n  return (\n    Header.ETag in headers ||\n    Header.LastModified in headers ||\n    Header.XAxiosCacheEtag in headers ||\n    Header.XAxiosCacheLastModified in headers\n  );\n}\n\n/** Returns true if this has sufficient properties to stale instead of expire. */\nexport function canStale(value: CachedStorageValue): boolean {\n  // Must revalidate is a special case and should not be staled\n  if (\n    String(value.data.headers[Header.CacheControl])\n      // We could use cache-control's parse function, but this is way faster and simpler\n      .includes('must-revalidate')\n  ) {\n    return false;\n  }\n\n  if (hasUniqueIdentifierHeader(value)) {\n    return true;\n  }\n\n  return (\n    value.state === 'cached' &&\n    value.staleTtl !== undefined &&\n    // Only allow stale values after the ttl is already in the past and the staleTtl is in the future.\n    // In cases that just createdAt + ttl > Date.now(), isn't enough because the staleTtl could be <= 0.\n    // This logic only returns true when Date.now() is between the (createdAt + ttl) and (createdAt + ttl + staleTtl).\n    // Following the example below:\n    // |--createdAt--:--ttl--:---staleTtl--->\n    // [        past        ][now is in here]\n    Math.abs(Date.now() - (value.createdAt + value.ttl)) <= value.staleTtl\n  );\n}\n\n/**\n * Checks if the provided cache is expired. You should also check if the cache\n * {@link canStale}\n */\nexport function isExpired(value: CachedStorageValue | StaleStorageValue): boolean {\n  return value.ttl !== undefined && value.createdAt + value.ttl <= Date.now();\n}\n\nexport interface BuildStorage extends Omit<AxiosStorage, 'get'> {\n  /**\n   * Returns the value for the given key. This method does not have to make checks for\n   * cache invalidation or anything. It just returns what was previous saved, if present.\n   *\n   * @param key The key to look for\n   * @param currentRequest The current {@link CacheRequestConfig}, if any\n   * @see https://axios-cache-interceptor.js.org/guide/storages#buildstorage\n   */\n  find: (\n    key: string,\n    currentRequest?: CacheRequestConfig\n  ) => MaybePromise<StorageValue | undefined>;\n}\n\n/**\n * All integrated storages are wrappers around the `buildStorage` function. External\n * libraries use it and if you want to build your own, `buildStorage` is the way to go!\n *\n * The exported `buildStorage` function abstracts the storage interface and requires a\n * super simple object to build the storage.\n *\n * **Note**: You can only create an custom storage with this function.\n *\n * @example\n *\n * ```js\n * const myStorage = buildStorage({\n *   find: () => {...},\n *   set: () => {...},\n *   remove: () => {...}\n * });\n *\n * const axios = setupCache(axios, { storage: myStorage });\n * ```\n *\n * @see https://axios-cache-interceptor.js.org/guide/storages#buildstorage\n */\nexport function buildStorage({ set, find, remove }: BuildStorage): AxiosStorage {\n  return {\n    //@ts-expect-error - we don't want to expose this\n    'is-storage': 1,\n    set,\n    remove,\n    get: async (key, config) => {\n      let value = await find(key, config);\n\n      if (!value) {\n        return { state: 'empty' };\n      }\n\n      if (value.state === 'empty' || value.state === 'loading') {\n        return value;\n      }\n\n      // Handle cached values\n      if (value.state === 'cached') {\n        if (!isExpired(value)) {\n          return value;\n        }\n\n        // Tries to stale expired value\n        if (!canStale(value)) {\n          await remove(key, config);\n          return { state: 'empty' };\n        }\n\n        value = {\n          state: 'stale',\n          createdAt: value.createdAt,\n          data: value.data,\n          ttl: value.staleTtl !== undefined ? value.staleTtl + value.ttl : undefined\n        };\n\n        await set(key, value, config);\n      }\n\n      // A second check in case the new stale value was created already expired.\n      if (!isExpired(value)) {\n        return value;\n      }\n\n      if (hasUniqueIdentifierHeader(value)) {\n        return value;\n      }\n\n      await remove(key, config);\n      return { state: 'empty' };\n    }\n  };\n}\n","import { buildStorage, canStale, isExpired } from './build.js';\nimport type { AxiosStorage, NotEmptyStorageValue, StorageValue } from './types.js';\n\n/**\n * Modern function to natively deep clone.\n *\n * @link https://caniuse.com/mdn-api_structuredclone (07/03/2022 -> 59.4%)\n */\ndeclare const structuredClone: (<T>(value: T) => T) | undefined;\n\n/**\n * Creates a simple in-memory storage. This means that if you need to persist data between\n * page or server reloads, this will not help.\n *\n * This is the storage used by default.\n *\n * If you need to modify it's data, you can do by the `data` property.\n *\n * @example\n *\n * ```js\n * const memoryStorage = buildMemoryStorage();\n *\n * setupCache(axios, { storage: memoryStorage });\n *\n * // Simple example to force delete the request cache\n *\n * const { id } = axios.get('url');\n *\n * delete memoryStorage.data[id];\n * ```\n *\n * @param {boolean | 'double'} cloneData Use `true` if the data returned by `find()`\n *   should be cloned to avoid mutating the original data outside the `set()` method. Use\n *   `'double'` to also clone before saving value in storage using `set()`. Disabled is\n *   default\n * @param {number | false} cleanupInterval The interval in milliseconds to run a\n *   setInterval job of cleaning old entries. If false, the job will not be created.\n *   Disabled is default\n * @param {number | false} maxEntries The maximum number of entries to keep in the\n *   storage. Its hard to determine the size of the entries, so a smart FIFO order is used\n *   to determine eviction. If false, no check will be done and you may grow up memory\n *   usage. Disabled is default\n */\nexport function buildMemoryStorage(\n  cloneData: boolean | 'double' = false,\n  cleanupInterval: number | false = false,\n  maxEntries: number | false = false\n) {\n  const storage = buildStorage({\n    set: (key, value) => {\n      if (maxEntries) {\n        let keys = Object.keys(storage.data);\n\n        // Tries to cleanup first\n        if (keys.length >= maxEntries) {\n          storage.cleanup();\n\n          // Recalculates the keys\n          keys = Object.keys(storage.data);\n\n          // Keeps deleting until there's space\n          while (keys.length >= maxEntries) {\n            // There's always at least one key here, otherwise it would not be\n            // in the loop.\n\n            delete storage.data[keys.shift()!];\n          }\n        }\n      }\n\n      storage.data[key] =\n        // Clone the value before storing to prevent future mutations\n        // from affecting cached data.\n        cloneData === 'double'\n          ? /* c8 ignore next 3 */\n            typeof structuredClone === 'function'\n            ? structuredClone(value)\n            : (JSON.parse(JSON.stringify(value)) as NotEmptyStorageValue)\n          : value;\n    },\n\n    remove: (key) => {\n      delete storage.data[key];\n    },\n\n    find: (key) => {\n      const value = storage.data[key];\n\n      /* c8 ignore next 7 */\n      if (cloneData && value !== undefined) {\n        if (typeof structuredClone === 'function') {\n          return structuredClone(value);\n        }\n\n        return JSON.parse(JSON.stringify(value)) as StorageValue;\n      }\n\n      return value;\n    }\n  }) as MemoryStorage;\n\n  storage.data = Object.create(null) as Record<string, StorageValue>;\n\n  // When this program gets running for more than the specified interval, there's a good\n  // chance of it being a long-running process or at least have a lot of entries. Therefore,\n  // \"faster\" loop is more important than code readability.\n  storage.cleanup = () => {\n    const keys = Object.keys(storage.data);\n\n    let i = -1;\n    let value: StorageValue;\n    let key: string;\n\n    // Looping forward, as older entries are more likely to be expired\n    // than newer ones.\n    while (++i < keys.length) {\n      key = keys[i]!;\n      value = storage.data[key]!;\n\n      if (value.state === 'empty') {\n        // this storage returns void.\n\n        storage.remove(key);\n        continue;\n      }\n\n      // If the value is expired and can't be stale, remove it\n      if (value.state === 'cached' && isExpired(value) && !canStale(value)) {\n        // this storage returns void.\n\n        storage.remove(key);\n      }\n    }\n  };\n\n  if (cleanupInterval) {\n    storage.cleaner = setInterval(storage.cleanup, cleanupInterval);\n  }\n\n  return storage;\n}\n\nexport interface MemoryStorage extends AxiosStorage {\n  data: Record<string, StorageValue>;\n  /** The job responsible to cleaning old entries */\n  cleaner: ReturnType<typeof setInterval>;\n  /** Tries to remove any invalid entry from the memory */\n  cleanup: () => void;\n}\n","import type { Method } from 'axios';\nimport { hash } from 'object-code';\nimport type { CacheRequestConfig } from '../cache/axios.js';\nimport type { KeyGenerator } from './types.js';\n\n// Remove first and last '/' char, if present\nconst SLASHES_REGEX = /^\\/|\\/$/g;\n\n/**\n * Builds an generator that receives a {@link CacheRequestConfig} and returns a value\n * hashed by {@link hash}.\n *\n * The value is hashed into a signed integer when the returned value from the provided\n * generator is not a `string` or a `number`.\n *\n * You can return any type of data structure.\n *\n * @example\n *\n * ```js\n * // This generator will return a hash code.\n * // The code will only be the same if url, method and data are the same.\n * const generator = buildKeyGenerator(({ url, method, data }) => ({\n *   url,\n *   method,\n *   data\n * }));\n * ```\n */\nexport function buildKeyGenerator<R = unknown, D = unknown>(\n  generator: (request: CacheRequestConfig<R, D>) => unknown\n): KeyGenerator<R, D> {\n  return (request) => {\n    if (request.id) {\n      return request.id;\n    }\n\n    const key = generator(request);\n\n    if (typeof key === 'string' || typeof key === 'number') {\n      return `${key}`;\n    }\n\n    return `${hash(key)}`;\n  };\n}\n\nexport const defaultKeyGenerator = buildKeyGenerator(({ baseURL, url, method, params, data }) => {\n  // Remove trailing slashes to avoid generating different keys for the \"same\" final url.\n  if (baseURL !== undefined) {\n    baseURL = baseURL.replace(SLASHES_REGEX, '');\n  } else {\n    // just to have a consistent hash\n    baseURL = '';\n  }\n\n  if (url !== undefined) {\n    url = url.replace(SLASHES_REGEX, '');\n  } else {\n    // just to have a consistent hash\n    url = '';\n  }\n\n  if (method !== undefined) {\n    method = method.toLowerCase() as Method;\n  } else {\n    // just to have a consistent hash\n    method = 'get';\n  }\n\n  return {\n    url: baseURL + (baseURL && url ? '/' : '') + url,\n    params: params,\n    method: method,\n    data: data\n  };\n});\n","export * from './cache/axios.js';\nexport * from './cache/cache.js';\nexport * from './cache/create.js';\nexport * from './header/headers.js';\nexport * from './header/interpreter.js';\nexport * from './header/types.js';\nexport * from './interceptors/build.js';\nexport * from './interceptors/request.js';\nexport * from './interceptors/response.js';\nexport * from './interceptors/util.js';\nexport * from './storage/build.js';\nexport * from './storage/memory.js';\nexport * from './storage/types.js';\nexport * from './storage/web-api.js';\nexport * from './util/cache-predicate.js';\nexport * from './util/key-generator.js';\nexport * from './util/types.js';\nexport * from './util/update-cache.js';\n\n/** @internal */\ndeclare global {\n  /**\n   * **This declaration is erased at compile time.**\n   *\n   * Use to write code that will only be executed at development time.\n   *\n   * @internal\n   */\n  const __ACI_DEV__: boolean;\n}\n\nif (__ACI_DEV__) {\n  console.error(\n    'You are using a development build. Make sure to use the correct build in production\\nhttps://axios-cache-interceptor.js.org/guide/getting-started\\n\\n'\n  );\n}\n","import { buildStorage, canStale, isExpired } from './build.js';\nimport type { StorageValue } from './types.js';\n\n/**\n * Creates a simple storage. You can persist his data by using `sessionStorage` or\n * `localStorage` with it.\n *\n * **ImplNote**: Without polyfill, this storage only works on browser environments.\n *\n * @example\n *\n * ```js\n * const fromLocalStorage = buildWebStorage(localStorage);\n * const fromSessionStorage = buildWebStorage(sessionStorage);\n *\n * const myStorage = new Storage();\n * const fromMyStorage = buildWebStorage(myStorage);\n * ```\n *\n * @param storage The type of web storage to use. localStorage or sessionStorage.\n * @param prefix The prefix to index the storage. Useful to prevent collision between\n *   multiple places using the same storage.\n */\nexport function buildWebStorage(storage: Storage, prefix = 'axios-cache-') {\n  return buildStorage({\n    find: (key) => {\n      const json = storage.getItem(prefix + key);\n      return json ? (JSON.parse(json) as StorageValue) : undefined;\n    },\n\n    remove: (key) => {\n      storage.removeItem(prefix + key);\n    },\n\n    set: (key, value) => {\n      const save = () => storage.setItem(prefix + key, JSON.stringify(value));\n\n      try {\n        return save();\n      } catch (error) {\n        const allValues: [string, StorageValue][] = Object.entries(\n          storage as Record<string, string>\n        )\n          .filter((item) => item[0].startsWith(prefix))\n          .map((item) => [item[0], JSON.parse(item[1]) as StorageValue]);\n\n        // Remove all expired values\n        for (const value of allValues) {\n          if (value[1].state === 'cached' && isExpired(value[1]) && !canStale(value[1])) {\n            storage.removeItem(value[0]);\n          }\n        }\n\n        // Try save again after removing expired values\n        try {\n          return save();\n        } catch {\n          // Storage still full, try removing the oldest value until it can be saved\n\n          // Descending sort by createdAt\n          const sortedItems = allValues.sort(\n            (a, b) => (a[1].createdAt || 0) - (b[1].createdAt || 0)\n          );\n\n          for (const item of sortedItems) {\n            storage.removeItem(item[0]);\n\n            try {\n              return save();\n            } catch {\n              // This key didn't free all the required space\n            }\n          }\n        }\n\n        // Clear the cache for the specified key\n        storage.removeItem(prefix + key);\n      }\n    }\n  });\n}\n","import type { AxiosInstance } from 'axios';\nimport { defaultHeaderInterpreter } from '../header/interpreter.js';\nimport { defaultRequestInterceptor } from '../interceptors/request.js';\nimport { defaultResponseInterceptor } from '../interceptors/response.js';\nimport { isStorage } from '../storage/build.js';\nimport { buildMemoryStorage } from '../storage/memory.js';\nimport { defaultKeyGenerator } from '../util/key-generator.js';\nimport type { AxiosCacheInstance } from './axios.js';\nimport type { CacheInstance, CacheProperties } from './cache.js';\n\nexport interface CacheOptions extends Partial<CacheInstance>, Partial<CacheProperties> {}\n\n/**\n * Apply the caching interceptors for a already created axios instance.\n *\n * ```ts\n * const axios = setupCache(axios, OPTIONS);\n * ```\n *\n * The `setupCache` function receives global options and all [request\n * specifics](https://axios-cache-interceptor.js.org/config/request-specifics) ones too.\n * This way, you can customize the defaults for all requests.\n *\n * @param axios The already created axios instance\n * @param config The config for the caching interceptors\n * @returns The same instance with extended typescript types.\n * @see https://axios-cache-interceptor.js.org/config\n */\nexport function setupCache(axios: AxiosInstance, options: CacheOptions = {}): AxiosCacheInstance {\n  const axiosCache = axios as AxiosCacheInstance;\n\n  if (axiosCache.defaults.cache) {\n    throw new Error('setupCache() should be called only once');\n  }\n\n  axiosCache.storage = options.storage || buildMemoryStorage();\n\n  if (!isStorage(axiosCache.storage)) {\n    throw new Error('Use buildStorage() function');\n  }\n\n  axiosCache.waiting = options.waiting || {};\n\n  axiosCache.generateKey = options.generateKey || defaultKeyGenerator;\n\n  axiosCache.headerInterpreter = options.headerInterpreter || defaultHeaderInterpreter;\n\n  axiosCache.requestInterceptor =\n    options.requestInterceptor || defaultRequestInterceptor(axiosCache);\n\n  axiosCache.responseInterceptor =\n    options.responseInterceptor || defaultResponseInterceptor(axiosCache);\n\n  axiosCache.debug = options.debug || function noop() {};\n\n  // CacheRequestConfig values\n  axiosCache.defaults.cache = {\n    update: options.update || {},\n\n    ttl: options.ttl ?? 1000 * 60 * 5,\n\n    // Although RFC 7231 also marks POST as cacheable, most users don't know that\n    // and may have problems about why their \"create X\" route not working.\n    methods: options.methods || ['get', 'head'],\n\n    cachePredicate: options.cachePredicate || {\n      // All cacheable status codes defined in RFC 7231\n      statusCheck: (status) => [200, 203, 300, 301, 302, 404, 405, 410, 414, 501].includes(status)\n    },\n\n    etag: options.etag ?? true,\n\n    // This option is going to be ignored by servers when ETag is enabled\n    // Checks strict equality to false to avoid undefined-ish values\n    modifiedSince: options.modifiedSince ?? options.etag === false,\n\n    interpretHeader: options.interpretHeader ?? true,\n\n    cacheTakeover: options.cacheTakeover ?? true,\n\n    staleIfError: options.staleIfError ?? true,\n\n    override: options.override ?? false,\n\n    hydrate: options.hydrate ?? undefined\n  };\n\n  // Apply interceptors\n  axiosCache.requestInterceptor.apply();\n  axiosCache.responseInterceptor.apply();\n\n  return axiosCache;\n}\n"],"names":["Header","Object","freeze","IfModifiedSince","LastModified","IfNoneMatch","CacheControl","Pragma","ETag","Expires","Age","XAxiosCacheEtag","XAxiosCacheLastModified","XAxiosCacheStaleIfError","defaultHeaderInterpreter","headers","cacheControl","_parse","parse","String","maxAge","maxStale","staleWhileRevalidate","noCache","noStore","immutable","cache","undefined","age","Number","stale","expires","milliseconds","Date","now","createValidateStatus","oldValidate","status","isMethodIn","requestMethod","methodList","toLowerCase","some","method","updateStaleRequest","config","_config$cache","etag","modifiedSince","_cache$data","etagValue","data","createdAt","toUTCString","createCacheResponse","response","previousCache","cached","statusText","_extends","defaultRequestInterceptor","axios","onFulfilled","id","generateKey","debug","msg","Promise","resolve","defaults","cachePredicate","ignoreUrls","url","_step","_iterator","_createForOfIteratorHelperLoose","done","value","RegExp","lastIndex","test","includes","_config$headers","_Header$CacheControl","_config$headers2","_Header$Pragma","_config$headers3","_Header$Expires","cacheTakeover","_config$headers$_Head","methods","storage","get","then","_exit","_temp14","_result2","_exit2","cachedResponse","_temp12","_result5","transformResponse","adapter","_temp11","state","_temp10","_result3","deferred","_deferred","_catch","err","_temp8","_onFulfilled","_temp7","hydrate","waiting","_temp9","_temp6","_temp5","overrideCache","override","_temp13","_temp4","set","previous","_temp2","validateStatus","_temp","_temp3","_axios$storage$get","e","reject","apply","interceptors","request","use","_Pact","prototype","onRejected","result","callback","_settle","this","v","o","_this","testCachePredicate","predicate","_statusCheck","_responseMatch","_exit3","statusCheck","responseMatch","containsHeaders","_forOf","entries","_ref","_response$headers$hea","header","_predicate","s","updateCache","cacheUpdater","cacheKey","updater","newValue","remove","defaultResponseInterceptor","rejectResponse","responseId","_axios$waiting$respon","_response$cached","cacheConfig","_testCachePredicate","_result","staleIfError","ttl","cacheResponse","newCache","staleTtl","_ttl","_i","_Object$keys","keys","length","startsWith","interpretHeader","expirationTime","headerInterpreter","update","error","_temp19","_result4","_temp17","_exit6","_temp15","_result6","_axios$waiting$id","staleHeader","_temp16","_exit4","isAxiosError","_temp18","isStorage","obj","hasUniqueIdentifierHeader","canStale","Math","abs","isExpired","buildStorage","find","key","buildMemoryStorage","cloneData","cleanupInterval","maxEntries","cleanup","shift","structuredClone","JSON","stringify","create","i","cleaner","setInterval","SLASHES_REGEX","buildKeyGenerator","generator","hash","defaultKeyGenerator","baseURL","params","replace","console","prefix","json","getItem","removeItem","save","setItem","allValues","filter","item","map","_unused","_step2","_iterator2","sort","a","b","_unused2","options","_options$ttl","_options$etag","_options$modifiedSinc","_options$interpretHea","_options$cacheTakeove","_options$staleIfError","_options$override","_options$hydrate","axiosCache","Error","requestInterceptor","responseInterceptor"],"mappings":"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"}