{
    "version": "https://jsonfeed.org/version/1",
    "title": "Website Management Indonesia â€¢ All posts by \"chest location\" tag",
    "description": "External source WMI Github Laboratory",
    "home_page_url": "https://www.webmanajemen.com",
    "items": [
        {
            "id": "https://www.webmanajemen.com/The%20Legend%20Of%20Neverland/Chest/Winged%20Hairband.html",
            "url": "https://www.webmanajemen.com/The%20Legend%20Of%20Neverland/Chest/Winged%20Hairband.html",
            "title": "Winged Hairband",
            "date_published": "2021-08-30T17:00:00.000Z",
            "content_html": "<h2 id=\"requirement\"><a class=\"markdownIt-Anchor\" href=\"#requirement\"></a> Requirement</h2>\n<ul>\n<li>\n<p>Blueprint (Buy to Npc in Sophila)<br />\n<img src=\"./Winged%20Hairband/blueprint.webp\" alt=\"Blueprint\" /></p>\n</li>\n<li>\n<p>Feather Decoration Chest Location</p>\n<p>Goto <code>Fog Swamp F1</code></p>\n<p><img src=\"./Winged%20Hairband/fs1-map.webp\" alt=\"Feather Decoration Chest Location\" /><br />\n<img src=\"https://user-images.githubusercontent.com/12471057/132348027-6c32d2a3-9b9e-41e1-98b5-ba62507272c1.png\" alt=\"Feather Decoration Chest Detail Location\" /></p>\n</li>\n<li>\n<p>Mysterious Yarn Chest Location</p>\n<p>Goto <code>Fog Swamp F2</code>, near house of NPC named Robin.</p>\n<p><img src=\"./Winged%20Hairband/fs2-map.webp\" alt=\"Mysterious Yarn Chest Location\" /><br />\n<img src=\"https://user-images.githubusercontent.com/12471057/132348675-22ebc85c-7ea4-411c-88a3-b9f7515dd710.png\" alt=\"Mysterious Yarn Chest Detail Location\" /></p>\n</li>\n<li>\n<p>Vitalization Dust Chest Location</p>\n<p>Goto <code>Fog Swamp F3</code>, large purple and dark green trees, with early trees appearing bright blue and forming a circle.</p>\n<p><img src=\"./Winged%20Hairband/fs3-map.webp\" alt=\"Vitalization Dust Location\" /><br />\n<img src=\"./Winged%20Hairband/fs3-detail.png\" alt=\"Vitalization Dust Chest Detail Location\" /></p>\n</li>\n</ul>\n<h2 id=\"video-tutorial\"><a class=\"markdownIt-Anchor\" href=\"#video-tutorial\"></a> Video tutorial</h2>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/psOnlBSRBjA\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/yRbP_fSP3xY\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div>\n<div id=\"hexo-adsense-hidden\" style=\"display:none\"><div hexo-adsense=\"ads-content\">\n<ins class=\"adsbygoogle\"\n     style=\"display:block; text-align:center;\"\n     data-ad-layout=\"in-article\"\n     data-ad-format=\"fluid\"\n     data-ad-client=\"ca-pub-1165447249910969\"\n     data-ad-slot=\"8418182273\"></ins>\n<script>\n     \n</script>\n</div><div hexo-adsense=\"ads-content\">\n<ins class=\"adsbygoogle\"\n     style=\"display:block; text-align:center;\"\n     data-ad-layout=\"in-article\"\n     data-ad-format=\"fluid\"\n     data-ad-client=\"ca-pub-1165447249910969\"\n     data-ad-slot=\"7823254087\"></ins>\n<script>\n     \n</script>\n</div></div><style>*[hexo-adsense=\"ads-content\"] {\n  display: block;\n  background: #fff url(//i.imgur.com/mBbv90p.png) no-repeat top right;\n  color: #303030;\n  /*min-height: 18px;\n  min-width: 81px;*/\n  min-width: 250px;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n}\n</style><script>/**\n * Browser processor\n */\n\nconst isBrowser = new Function(\"try {return this===window;}catch(e){ return false;}\");\n\n/**\n * @type {import(\"../lib/config\")}\n */\nconst hexoAdsenseConfig = JSON.parse(document.getElementById(\"hexo-adsense-config\").textContent);\n//console.log(hexoAdsenseConfig);\n\n/**\n * Insert after element\n * @param {HTMLElement} newElement\n * @param {HTMLElement} oldElement\n */\nfunction insertAfter(newElement, oldElement) {\n  if (oldElement && newElement) {\n    let parent = oldElement.parentNode;\n    if (parent.lastChild == oldElement) {\n      parent.appendChild(newElement);\n    } else {\n      parent.insertBefore(newElement, oldElement.nextSibling);\n    }\n  } else {\n    console.error(\"cannot insert element\");\n  }\n}\n\n/**\n * Replace elements with new\n * @param {HTMLElement} newElement\n * @param {HTMLElement} oldElement\n */\nfunction replaceWith(newElement, oldElement) {\n  if (!oldElement.parentNode) {\n    console.log(oldElement, \"parent null\");\n    let d = document.createElement(\"div\");\n    d.appendChild(oldElement);\n  } else {\n    //console.log(oldElement.parentNode.tagName);\n    oldElement.parentNode.replaceChild(newElement, oldElement);\n  }\n  /*\n  try {\n    oldElement.parentNode.replaceChild(newElement, oldElement);\n  } catch (e) {}\n  */\n}\n\nlet createElementFromHTML = function (htmlString) {\n  if (htmlString instanceof HTMLElement) {\n    return htmlString;\n  }\n  var div = document.createElement(\"div\");\n  div.innerHTML = htmlString.trim();\n\n  // Change this to div.childNodes to support multiple top-level nodes\n  return div.firstChild;\n};\n\nfunction oldMethod() {\n  let article = document.getElementsByTagName(\"article\");\n  let adscont = document.getElementById(\"hexo-adsense-ads-content\");\n  if (adscont && adscont.length) {\n    if (article && article.length) {\n      let linebreak = article.item(0).getElementsByTagName(\"br\");\n      if (linebreak.length > 0) {\n        return replaceWith(adscont, linebreak.item(0));\n      }\n\n      let headings = article.item(0).querySelectorAll(\"h2,h3,h4,h5\");\n      if (headings && headings.length > 0) {\n        return insertAfter(adscont, headings.item(0));\n      }\n    }\n  }\n}\n\n/**\n * random number between min and max\n */\nfunction ranumb(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction newMethod() {\n  const adshide = document.getElementById(\"hexo-adsense-hidden\");\n  let adscont = adshide.querySelectorAll('[hexo-adsense=\"ads-content\"]');\n  const article = document.querySelectorAll(\"article\");\n  if (article.length > 0 && adscont.length > 0) {\n    /**\n     * @type {HTMLElement}\n     */\n    let ads;\n    if (article.length == 1) {\n      console.log(\"webpage is post\");\n      let targetArticle = article.item(0);\n\n      // prioritize hexo-adsense-fill before auto ads on other elements\n      const ads_fill = targetArticle.querySelectorAll(\"*[hexo-adsense-fill]\");\n      if (ads_fill.length > 0) {\n        for (let index = 0; index < ads_fill.length; index++) {\n          const toFill = ads_fill[index];\n          if (typeof adscont[index] !== \"undefined\") {\n            toFill.appendChild(adscont[index]);\n          }\n        }\n      }\n\n      // the rest of the ads will show automatically after headers elements\n      adscont = adshide.querySelectorAll('[hexo-adsense=\"ads-content\"]');\n      //console.log(adscont.length, \"ads left\");\n      if (adscont.length > 0) {\n        const headers = targetArticle.querySelectorAll(\"h1,h2,h3,h4,h5,h6\");\n        if (headers.length > 0) {\n          // generate index of headers\n          let headers_index = Array.apply(null, { length: headers.length }).map(Number.call, Number);\n          //console.log(headers_index);\n          for (let index = 0; index < adscont.length; index++) {\n            ads = adscont[index];\n            const rheaders = shuffleArr2(headers_index);\n            // pick a random index\n            const rheader = rheaders.next().value;\n            if (typeof rheader === \"number\") {\n              const header = headers.item(rheader);\n              insertAfter(createElementFromHTML(ads), header);\n            }\n          }\n        }\n      }\n\n      // the rest of the ads will show automatically to linebreak elements\n      adscont = adshide.querySelectorAll('[hexo-adsense=\"ads-content\"]');\n      if (adscont.length > 0) {\n        const linebreaks = targetArticle.querySelectorAll(\"br,hr\");\n        if (linebreaks.length > 0) {\n          // generate index of linebreaks\n          let linebreaks_index = Array.apply(null, { length: linebreaks.length }).map(Number.call, Number);\n          //console.log(linebreaks_index);\n          // randomize linebreaks index\n          const rlinebreaks = shuffleArr2(linebreaks_index);\n          for (let index = 0; index < adscont.length; index++) {\n            ads = adscont[index];\n            // pick a random index\n            const rlinebreak = rlinebreaks.next().value;\n            if (typeof rlinebreak == \"number\") {\n              const linebreak = linebreaks.item(rlinebreak);\n              if ([\"blockquote\", \"img\", \"a\"].includes(linebreak.parentNode.tagName.toLowerCase())) {\n                index--;\n                continue;\n              }\n              //console.log(linebreak.tagName);\n              replaceWith(createElementFromHTML(ads), linebreak);\n            }\n          }\n        }\n      }\n    } else {\n      console.log(\"webpage is not post\");\n      // generate index of articles\n      let articles_index = Array.apply(null, { length: article.length }).map(Number.call, Number);\n      // randomize linebreaks index\n      const rArticles = shuffleArr2(articles_index);\n      for (let index = 0; index < adscont.length; index++) {\n        ads = adscont[index];\n        // pick a random index\n        const rArticle = rArticles.next().value;\n        if (typeof rArticle == \"number\") {\n          //console.log(\"adsense display to article index\", rArticle);\n          const pickArticle = article.item(rArticle);\n          pickArticle.appendChild(createElementFromHTML(ads));\n        }\n      }\n    }\n\n    // summon adsbygoogle.push()\n    adsensePush();\n  }\n}\n\nfunction eventMethod() {\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    // we look for the jump break\n    var _moreElm = document.querySelector(\"a[name=more]\");\n\n    // here is your adsense code\n    var _adsenseCode = \" [replace this with code from the last step] \";\n\n    // This inserts the ad inside of the blog post\n    _moreElm.insertAdjacentHTML(\"afterend\", '<div class=\"adsense-after-break\">' + _adsenseCode + \"</div>\");\n\n    // Initialize the ads here\n    (adsbygoogle = window.adsbygoogle || []).push({});\n  });\n}\n\n/**\n * Shuffle Array\n * @param {any[]} array\n * @see {@link https://stackoverflow.com/a/18806417}\n * @returns\n */\nfunction shuffleArr(array) {\n  var i = array.length,\n    j = 0,\n    temp;\n\n  while (i--) {\n    j = Math.floor(Math.random() * (i + 1));\n\n    // swap randomly chosen element with current element\n    temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  return array;\n}\n\n/**\n * Next generation of non-repeated randomizer\n * @see {@link shuffleArr}\n * @param {any[]} array\n */\nfunction* shuffleArr2(array) {\n  var i = array.length;\n\n  while (i--) {\n    yield array.splice(Math.floor(Math.random() * (i + 1)), 1)[0];\n  }\n}\n\nfunction adsensePush() {\n  for (let index = 0; index < document.querySelectorAll('[hexo-adsense=\"ads-content\"]').length; index++) {\n    (adsbygoogle = window.adsbygoogle || []).push({\n      google_ad_client: hexoAdsenseConfig.pub,\n    });\n  }\n}\n\nif (!isBrowser()) {\n  module.exports = {\n    replaceWith,\n    insertAfter,\n  };\n} else {\n  window.__tcfapi = (command, parameter, callback) => {\n    if (command === \"checkConsent\") {\n      callback(true);\n    }\n    if (command === \"addEventListener\") {\n      callback({ eventStatus: \"tcloaded\", gdprApplies: false }, true);\n    }\n  };\n\n  if (typeof document.addEventListener == \"function\") {\n    document.addEventListener(\"DOMContentLoaded\", newMethod);\n  } else if (typeof window.attachEvent == \"function\") {\n    window.attachEvent(\"onload\", newMethod);\n  } else {\n    window.onload = newMethod;\n  }\n}\n</script>",
            "tags": [
                "Chest Location"
            ]
        },
        {
            "id": "https://www.webmanajemen.com/The%20Legend%20Of%20Neverland/Chest/Colorful%20Auspicious%20Nimbus%20Cloud.html",
            "url": "https://www.webmanajemen.com/The%20Legend%20Of%20Neverland/Chest/Colorful%20Auspicious%20Nimbus%20Cloud.html",
            "title": "Colorful Auspicious Nimbus Cloud",
            "date_published": "2021-08-20T17:00:00.000Z",
            "content_html": "<h2 id=\"requirement\"><a class=\"markdownIt-Anchor\" href=\"#requirement\"></a> Requirement</h2>\n<ul>\n<li>Blueprint (To buy this blueprint, you have to go to an NPC named the <code>Wonder Creator</code> in <code>Sophila</code>.)<br />\n<img src=\"Colorful%20Auspicious%20Nimbus%20Cloud/Colorful%20Auspicious%20Nimbus%20Cloud.png\" alt=\"\" /></li>\n</ul>\n<h3 id=\"colorful-auspicious-nimbus-cloud-material-chest-locations\"><a class=\"markdownIt-Anchor\" href=\"#colorful-auspicious-nimbus-cloud-material-chest-locations\"></a> Colorful Auspicious Nimbus Cloud Material Chest Locations</h3>\n<ul>\n<li>Magic Wool chest location</li>\n</ul>\n<p>Twilight Rainforest F1. there has hidden teleporter, you must enter that teleporter and youâ€™ll found the chest<br />\n<img src=\"Colorful%20Auspicious%20Nimbus%20Cloud/tr1-map.png\" alt=\"\" /><br />\n<img src=\"Colorful%20Auspicious%20Nimbus%20Cloud/tr1-chest.png\" alt=\"\" /><br />\n<img src=\"Colorful%20Auspicious%20Nimbus%20Cloud/tr1-teleporter.png\" alt=\"\" /></p>\n<ul>\n<li>Miraculous Dye chest location</li>\n</ul>\n<p><em>Twilight Rainforest F2. Behind map teleporter</em><br />\n<img src=\"Colorful%20Auspicious%20Nimbus%20Cloud/tr2-map.png\" alt=\"map\" /><br />\n<img src=\"Colorful%20Auspicious%20Nimbus%20Cloud/tr2-overview.png\" alt=\"overview\" /><br />\n<img src=\"Colorful%20Auspicious%20Nimbus%20Cloud/tr2-detail.png\" alt=\"detail\" /></p>\n<ul>\n<li>Weightless Dust chest location</li>\n</ul>\n<p><em>Twilight Rainforest F3. Behind bush and tree</em><br />\n<img src=\"Colorful%20Auspicious%20Nimbus%20Cloud/tr3-map.png\" alt=\"map\" /><br />\n<img src=\"Colorful%20Auspicious%20Nimbus%20Cloud/tr3-overview.png\" alt=\"overview\" /><br />\n<img src=\"Colorful%20Auspicious%20Nimbus%20Cloud/tr3-detail.png\" alt=\"detail\" /></p>\n<p><em>Colorful Auspicious Nimbus Cloud Video Tutorial</em></p>\n<div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/hVhzL_q1IOs\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div><div id=\"hexo-adsense-hidden\" style=\"display:none\"><div hexo-adsense=\"ads-content\">\n<ins class=\"adsbygoogle\"\n     style=\"display:block; text-align:center;\"\n     data-ad-layout=\"in-article\"\n     data-ad-format=\"fluid\"\n     data-ad-client=\"ca-pub-1165447249910969\"\n     data-ad-slot=\"8418182273\"></ins>\n<script>\n     \n</script>\n</div><div hexo-adsense=\"ads-content\">\n<ins class=\"adsbygoogle\"\n     style=\"display:block; text-align:center;\"\n     data-ad-layout=\"in-article\"\n     data-ad-format=\"fluid\"\n     data-ad-client=\"ca-pub-1165447249910969\"\n     data-ad-slot=\"7823254087\"></ins>\n<script>\n     \n</script>\n</div></div><style>*[hexo-adsense=\"ads-content\"] {\n  display: block;\n  background: #fff url(//i.imgur.com/mBbv90p.png) no-repeat top right;\n  color: #303030;\n  /*min-height: 18px;\n  min-width: 81px;*/\n  min-width: 250px;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n}\n</style><script>/**\n * Browser processor\n */\n\nconst isBrowser = new Function(\"try {return this===window;}catch(e){ return false;}\");\n\n/**\n * @type {import(\"../lib/config\")}\n */\nconst hexoAdsenseConfig = JSON.parse(document.getElementById(\"hexo-adsense-config\").textContent);\n//console.log(hexoAdsenseConfig);\n\n/**\n * Insert after element\n * @param {HTMLElement} newElement\n * @param {HTMLElement} oldElement\n */\nfunction insertAfter(newElement, oldElement) {\n  if (oldElement && newElement) {\n    let parent = oldElement.parentNode;\n    if (parent.lastChild == oldElement) {\n      parent.appendChild(newElement);\n    } else {\n      parent.insertBefore(newElement, oldElement.nextSibling);\n    }\n  } else {\n    console.error(\"cannot insert element\");\n  }\n}\n\n/**\n * Replace elements with new\n * @param {HTMLElement} newElement\n * @param {HTMLElement} oldElement\n */\nfunction replaceWith(newElement, oldElement) {\n  if (!oldElement.parentNode) {\n    console.log(oldElement, \"parent null\");\n    let d = document.createElement(\"div\");\n    d.appendChild(oldElement);\n  } else {\n    //console.log(oldElement.parentNode.tagName);\n    oldElement.parentNode.replaceChild(newElement, oldElement);\n  }\n  /*\n  try {\n    oldElement.parentNode.replaceChild(newElement, oldElement);\n  } catch (e) {}\n  */\n}\n\nlet createElementFromHTML = function (htmlString) {\n  if (htmlString instanceof HTMLElement) {\n    return htmlString;\n  }\n  var div = document.createElement(\"div\");\n  div.innerHTML = htmlString.trim();\n\n  // Change this to div.childNodes to support multiple top-level nodes\n  return div.firstChild;\n};\n\nfunction oldMethod() {\n  let article = document.getElementsByTagName(\"article\");\n  let adscont = document.getElementById(\"hexo-adsense-ads-content\");\n  if (adscont && adscont.length) {\n    if (article && article.length) {\n      let linebreak = article.item(0).getElementsByTagName(\"br\");\n      if (linebreak.length > 0) {\n        return replaceWith(adscont, linebreak.item(0));\n      }\n\n      let headings = article.item(0).querySelectorAll(\"h2,h3,h4,h5\");\n      if (headings && headings.length > 0) {\n        return insertAfter(adscont, headings.item(0));\n      }\n    }\n  }\n}\n\n/**\n * random number between min and max\n */\nfunction ranumb(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction newMethod() {\n  const adshide = document.getElementById(\"hexo-adsense-hidden\");\n  let adscont = adshide.querySelectorAll('[hexo-adsense=\"ads-content\"]');\n  const article = document.querySelectorAll(\"article\");\n  if (article.length > 0 && adscont.length > 0) {\n    /**\n     * @type {HTMLElement}\n     */\n    let ads;\n    if (article.length == 1) {\n      console.log(\"webpage is post\");\n      let targetArticle = article.item(0);\n\n      // prioritize hexo-adsense-fill before auto ads on other elements\n      const ads_fill = targetArticle.querySelectorAll(\"*[hexo-adsense-fill]\");\n      if (ads_fill.length > 0) {\n        for (let index = 0; index < ads_fill.length; index++) {\n          const toFill = ads_fill[index];\n          if (typeof adscont[index] !== \"undefined\") {\n            toFill.appendChild(adscont[index]);\n          }\n        }\n      }\n\n      // the rest of the ads will show automatically after headers elements\n      adscont = adshide.querySelectorAll('[hexo-adsense=\"ads-content\"]');\n      //console.log(adscont.length, \"ads left\");\n      if (adscont.length > 0) {\n        const headers = targetArticle.querySelectorAll(\"h1,h2,h3,h4,h5,h6\");\n        if (headers.length > 0) {\n          // generate index of headers\n          let headers_index = Array.apply(null, { length: headers.length }).map(Number.call, Number);\n          //console.log(headers_index);\n          for (let index = 0; index < adscont.length; index++) {\n            ads = adscont[index];\n            const rheaders = shuffleArr2(headers_index);\n            // pick a random index\n            const rheader = rheaders.next().value;\n            if (typeof rheader === \"number\") {\n              const header = headers.item(rheader);\n              insertAfter(createElementFromHTML(ads), header);\n            }\n          }\n        }\n      }\n\n      // the rest of the ads will show automatically to linebreak elements\n      adscont = adshide.querySelectorAll('[hexo-adsense=\"ads-content\"]');\n      if (adscont.length > 0) {\n        const linebreaks = targetArticle.querySelectorAll(\"br,hr\");\n        if (linebreaks.length > 0) {\n          // generate index of linebreaks\n          let linebreaks_index = Array.apply(null, { length: linebreaks.length }).map(Number.call, Number);\n          //console.log(linebreaks_index);\n          // randomize linebreaks index\n          const rlinebreaks = shuffleArr2(linebreaks_index);\n          for (let index = 0; index < adscont.length; index++) {\n            ads = adscont[index];\n            // pick a random index\n            const rlinebreak = rlinebreaks.next().value;\n            if (typeof rlinebreak == \"number\") {\n              const linebreak = linebreaks.item(rlinebreak);\n              if ([\"blockquote\", \"img\", \"a\"].includes(linebreak.parentNode.tagName.toLowerCase())) {\n                index--;\n                continue;\n              }\n              //console.log(linebreak.tagName);\n              replaceWith(createElementFromHTML(ads), linebreak);\n            }\n          }\n        }\n      }\n    } else {\n      console.log(\"webpage is not post\");\n      // generate index of articles\n      let articles_index = Array.apply(null, { length: article.length }).map(Number.call, Number);\n      // randomize linebreaks index\n      const rArticles = shuffleArr2(articles_index);\n      for (let index = 0; index < adscont.length; index++) {\n        ads = adscont[index];\n        // pick a random index\n        const rArticle = rArticles.next().value;\n        if (typeof rArticle == \"number\") {\n          //console.log(\"adsense display to article index\", rArticle);\n          const pickArticle = article.item(rArticle);\n          pickArticle.appendChild(createElementFromHTML(ads));\n        }\n      }\n    }\n\n    // summon adsbygoogle.push()\n    adsensePush();\n  }\n}\n\nfunction eventMethod() {\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    // we look for the jump break\n    var _moreElm = document.querySelector(\"a[name=more]\");\n\n    // here is your adsense code\n    var _adsenseCode = \" [replace this with code from the last step] \";\n\n    // This inserts the ad inside of the blog post\n    _moreElm.insertAdjacentHTML(\"afterend\", '<div class=\"adsense-after-break\">' + _adsenseCode + \"</div>\");\n\n    // Initialize the ads here\n    (adsbygoogle = window.adsbygoogle || []).push({});\n  });\n}\n\n/**\n * Shuffle Array\n * @param {any[]} array\n * @see {@link https://stackoverflow.com/a/18806417}\n * @returns\n */\nfunction shuffleArr(array) {\n  var i = array.length,\n    j = 0,\n    temp;\n\n  while (i--) {\n    j = Math.floor(Math.random() * (i + 1));\n\n    // swap randomly chosen element with current element\n    temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  return array;\n}\n\n/**\n * Next generation of non-repeated randomizer\n * @see {@link shuffleArr}\n * @param {any[]} array\n */\nfunction* shuffleArr2(array) {\n  var i = array.length;\n\n  while (i--) {\n    yield array.splice(Math.floor(Math.random() * (i + 1)), 1)[0];\n  }\n}\n\nfunction adsensePush() {\n  for (let index = 0; index < document.querySelectorAll('[hexo-adsense=\"ads-content\"]').length; index++) {\n    (adsbygoogle = window.adsbygoogle || []).push({\n      google_ad_client: hexoAdsenseConfig.pub,\n    });\n  }\n}\n\nif (!isBrowser()) {\n  module.exports = {\n    replaceWith,\n    insertAfter,\n  };\n} else {\n  window.__tcfapi = (command, parameter, callback) => {\n    if (command === \"checkConsent\") {\n      callback(true);\n    }\n    if (command === \"addEventListener\") {\n      callback({ eventStatus: \"tcloaded\", gdprApplies: false }, true);\n    }\n  };\n\n  if (typeof document.addEventListener == \"function\") {\n    document.addEventListener(\"DOMContentLoaded\", newMethod);\n  } else if (typeof window.attachEvent == \"function\") {\n    window.attachEvent(\"onload\", newMethod);\n  } else {\n    window.onload = newMethod;\n  }\n}\n</script>",
            "tags": [
                "Chest Location"
            ]
        }
    ]
}