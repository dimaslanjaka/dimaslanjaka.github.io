{"version":3,"file":"dev/index.mjs","mappings":"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","sources":["webpack://axios-cache-interceptor/webpack/bootstrap","webpack://axios-cache-interceptor/webpack/runtime/define property getters","webpack://axios-cache-interceptor/webpack/runtime/hasOwnProperty shorthand","webpack://axios-cache-interceptor/external module \"cache-parser\"","webpack://axios-cache-interceptor/./src/header/headers.ts","webpack://axios-cache-interceptor/./src/header/interpreter.ts","webpack://axios-cache-interceptor/external module \"fast-defer\"","webpack://axios-cache-interceptor/./src/interceptors/util.ts","webpack://axios-cache-interceptor/./src/interceptors/request.ts","webpack://axios-cache-interceptor/./src/util/cache-predicate.ts","webpack://axios-cache-interceptor/./src/util/update-cache.ts","webpack://axios-cache-interceptor/./src/interceptors/response.ts","webpack://axios-cache-interceptor/./src/storage/build.ts","webpack://axios-cache-interceptor/./src/storage/memory.ts","webpack://axios-cache-interceptor/external module \"object-code\"","webpack://axios-cache-interceptor/./src/util/key-generator.ts","webpack://axios-cache-interceptor/./src/cache/create.ts","webpack://axios-cache-interceptor/./src/storage/web-api.ts","webpack://axios-cache-interceptor/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"parse\"]: () => __WEBPACK_EXTERNAL_MODULE_cache_parser_5b405dda__.parse });","export const Header = Object.freeze({\n    /**\n     * ```txt\n     * If-Modified-Since: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since\n     */\n    IfModifiedSince: 'if-modified-since',\n    /**\n     * ```txt\n     * Last-Modified: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Last-Modified\n     */\n    LastModified: 'last-modified',\n    /**\n     * ```txt\n     * If-None-Match: \"<etag_value>\"\n     * If-None-Match: \"<etag_value>\", \"<etag_value>\", …\n     * If-None-Match: *\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match\n     */\n    IfNoneMatch: 'if-none-match',\n    /**\n     * ```txt\n     * Cache-Control: max-age=604800\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n     */\n    CacheControl: 'cache-control',\n    /**\n     * ```txt\n     * Pragma: no - cache;\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Pragma\n     */\n    Pragma: 'pragma',\n    /**\n     * ```txt\n     * ETag: W / '<etag_value>';\n     * ETag: '<etag_value>';\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag\n     */\n    ETag: 'etag',\n    /**\n     * ```txt\n     * Expires: <http-date>\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expires\n     */\n    Expires: 'expires',\n    /**\n     * ```txt\n     * Age: <delta-seconds>\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Age\n     */\n    Age: 'age',\n    /**\n     * Used internally as metadata to mark the cache item as revalidatable and enabling\n     * stale cache state Contains a string of ASCII characters that can be used as ETag for\n     * `If-Match` header Provided by user using `cache.etag` value.\n     *\n     * ```txt\n     * X-Axios-Cache-Etag: \"<etag_value>\"\n     * ```\n     */\n    XAxiosCacheEtag: 'x-axios-cache-etag',\n    /**\n     * Used internally as metadata to mark the cache item as revalidatable and enabling\n     * stale cache state may contain `'use-cache-timestamp'` if `cache.modifiedSince` is\n     * `true`, otherwise will contain a date from `cache.modifiedSince`. If a date is\n     * provided, it can be used for `If-Modified-Since` header, otherwise the cache\n     * timestamp can be used for `If-Modified-Since` header.\n     *\n     * ```txt\n     * X-Axios-Cache-Last-Modified: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n     * X-Axios-Cache-Last-Modified: use-cache-timestamp\n     * ```\n     */\n    XAxiosCacheLastModified: 'x-axios-cache-last-modified',\n    /**\n     * Used internally as metadata to mark the cache item able to be used if the server\n     * returns an error. The stale-if-error response directive indicates that the cache can\n     * reuse a stale response when any error occurs.\n     *\n     * ```txt\n     * XAxiosCacheStaleIfError: <seconds>\n     * ```\n     */\n    XAxiosCacheStaleIfError: 'x-axios-cache-stale-if-error'\n});\n","import { parse } from 'cache-parser';\nimport { Header } from './headers';\nexport const defaultHeaderInterpreter = (headers) => {\n    if (!headers)\n        return 'not enough headers';\n    const cacheControl = headers[Header.CacheControl];\n    if (cacheControl) {\n        const { noCache, noStore, maxAge, maxStale, immutable, staleWhileRevalidate } = parse(String(cacheControl));\n        // Header told that this response should not be cached.\n        if (noCache || noStore) {\n            return 'dont cache';\n        }\n        if (immutable) {\n            // 1 year is sufficient, as Infinity may cause problems with certain storages.\n            // It might not be the best way, but a year is better than none. Facebook shows\n            // that a browser session stays at the most 1 month.\n            return {\n                cache: 1000 * 60 * 60 * 24 * 365\n            };\n        }\n        if (maxAge !== undefined) {\n            const age = headers[Header.Age];\n            return {\n                cache: age\n                    ? // If age is present, we must subtract it from maxAge\n                        (maxAge - Number(age)) * 1000\n                    : maxAge * 1000,\n                // Already out of date, must be requested again\n                stale: \n                // I couldn't find any documentation about who should be used, as they\n                // are not meant to overlap each other. But, as we cannot request in the\n                // background, as the stale-while-revalidate says, and we just increase\n                // its staleTtl when its present, max-stale is being preferred over\n                // stale-while-revalidate.\n                maxStale !== undefined\n                    ? maxStale * 1000\n                    : staleWhileRevalidate !== undefined\n                        ? staleWhileRevalidate * 1000\n                        : undefined\n            };\n        }\n    }\n    const expires = headers[Header.Expires];\n    if (expires) {\n        const milliseconds = Date.parse(String(expires)) - Date.now();\n        return milliseconds >= 0 ? { cache: milliseconds } : 'dont cache';\n    }\n    return 'not enough headers';\n};\n","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"deferred\"]: () => __WEBPACK_EXTERNAL_MODULE_fast_defer_931deec3__.deferred });","import { Header } from '../header/headers';\n/**\n * Creates a new validateStatus function that will use the one already used and also\n * accept status code 304.\n */\nexport function createValidateStatus(oldValidate) {\n    return oldValidate\n        ? (status) => oldValidate(status) || status === 304\n        : (status) => (status >= 200 && status < 300) || status === 304;\n}\n/** Checks if the given method is in the methods array */\nexport function isMethodIn(requestMethod = 'get', methodList = []) {\n    requestMethod = requestMethod.toLowerCase();\n    return methodList.some((method) => method === requestMethod);\n}\n/**\n * This function updates the cache when the request is stale. So, the next request to the\n * server will be made with proper header / settings.\n */\nexport function updateStaleRequest(cache, config) {\n    var _a;\n    config.headers || (config.headers = {});\n    const { etag, modifiedSince } = config.cache;\n    if (etag) {\n        const etagValue = etag === true ? (_a = cache.data) === null || _a === void 0 ? void 0 : _a.headers[Header.ETag] : etag;\n        if (etagValue) {\n            config.headers[Header.IfNoneMatch] = etagValue;\n        }\n    }\n    if (modifiedSince) {\n        config.headers[Header.IfModifiedSince] =\n            modifiedSince === true\n                ? // If last-modified is not present, use the createdAt timestamp\n                    cache.data.headers[Header.LastModified] ||\n                        new Date(cache.createdAt).toUTCString()\n                : modifiedSince.toUTCString();\n    }\n}\n/**\n * Creates the new date to the cache by the provided response. Also handles possible 304\n * Not Modified by updating response properties.\n */\nexport function createCacheResponse(response, previousCache) {\n    if (response.status === 304 && previousCache) {\n        // Set the cache information into the response object\n        response.cached = true;\n        response.data = previousCache.data;\n        response.status = previousCache.status;\n        response.statusText = previousCache.statusText;\n        // Update possible new headers\n        response.headers = Object.assign(Object.assign({}, previousCache.headers), response.headers);\n        // return the old cache\n        return previousCache;\n    }\n    // New Response\n    return {\n        data: response.data,\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers\n    };\n}\n","import { deferred } from 'fast-defer';\nimport { Header } from '../header/headers';\nimport { createValidateStatus, isMethodIn, updateStaleRequest } from './util';\nexport function defaultRequestInterceptor(axios) {\n    const onFulfilled = async (config) => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n        var _t, _u, _v, _w, _x, _y;\n        const id = (config.id = axios.generateKey(config));\n        if (config.cache === false) {\n            if (__ACI_DEV__) {\n                (_a = axios.debug) === null || _a === void 0 ? void 0 : _a.call(axios, {\n                    msg: 'Ignoring cache because config.cache === false',\n                    data: config\n                });\n            }\n            return config;\n        }\n        // merge defaults with per request configuration\n        config.cache = Object.assign(Object.assign({}, axios.defaults.cache), config.cache);\n        // Applies sufficient headers to prevent other cache systems to work along with this one\n        //\n        // Its currently used before isMethodIn because if the isMethodIn returns false, the request\n        // shouldn't be cached an therefore neither in the browser.\n        if (config.cache.cacheTakeover) {\n            (_b = (_t = config.headers)[_u = Header.CacheControl]) !== null && _b !== void 0 ? _b : (_t[_u] = 'no-cache');\n            (_c = (_v = config.headers)[_w = Header.Pragma]) !== null && _c !== void 0 ? _c : (_v[_w] = 'no-cache');\n            (_d = (_x = config.headers)[_y = Header.Expires]) !== null && _d !== void 0 ? _d : (_x[_y] = '0');\n        }\n        if (!isMethodIn(config.method, config.cache.methods)) {\n            if (__ACI_DEV__) {\n                (_e = axios.debug) === null || _e === void 0 ? void 0 : _e.call(axios, {\n                    msg: `Ignored because method (${config.method}) is not in cache.methods (${config.cache.methods})`\n                });\n            }\n            return config;\n        }\n        // Assumes that the storage handled staled responses\n        let cache = await axios.storage.get(id, config);\n        const overrideCache = config.cache.override;\n        // Not cached, continue the request, and mark it as fetching\n        ignoreAndRequest: if (cache.state === 'empty' ||\n            cache.state === 'stale' ||\n            overrideCache) {\n            /**\n             * This checks for simultaneous access to a new key. The js event loop jumps on the\n             * first await statement, so the second (asynchronous call) request may have already\n             * started executing.\n             */\n            if (axios.waiting[id] && !overrideCache) {\n                cache = (await axios.storage.get(id, config));\n                /**\n                 * This check is required when a request has it own cache deleted manually, lets\n                 * say by a `axios.storage.delete(key)` and has a concurrent loading request.\n                 * Because in this case, the cache will be empty and may still has a pending key\n                 * on waiting map.\n                 */\n                //@ts-expect-error read above\n                if (cache.state !== 'empty') {\n                    if (__ACI_DEV__) {\n                        (_f = axios.debug) === null || _f === void 0 ? void 0 : _f.call(axios, {\n                            id,\n                            msg: 'Waiting list had an deferred for this key, waiting for it to finish'\n                        });\n                    }\n                    break ignoreAndRequest;\n                }\n            }\n            // Create a deferred to resolve other requests for the same key when it's completed\n            axios.waiting[id] = deferred();\n            /**\n             * Adds a default reject handler to catch when the request gets aborted without\n             * others waiting for it.\n             */\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            axios.waiting[id].catch(() => undefined);\n            await axios.storage.set(id, {\n                state: 'loading',\n                previous: overrideCache\n                    ? // Simply determine if the request is stale or not\n                        // based if it had previous data or not\n                        cache.data\n                            ? 'stale'\n                            : 'empty'\n                    : // Typescript doesn't know that cache.state here can only be 'empty' or 'stale'\n                        cache.state,\n                // Eslint complains a lot :)\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n                data: cache.data,\n                // If the cache is empty and asked to override it, use the current timestamp\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                createdAt: \n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                overrideCache && !cache.createdAt ? Date.now() : cache.createdAt\n            }, config);\n            if (cache.state === 'stale') {\n                updateStaleRequest(cache, config);\n                if (__ACI_DEV__) {\n                    (_g = axios.debug) === null || _g === void 0 ? void 0 : _g.call(axios, {\n                        id,\n                        msg: 'Updated stale request'\n                    });\n                }\n            }\n            config.validateStatus = createValidateStatus(config.validateStatus);\n            if (__ACI_DEV__) {\n                (_h = axios.debug) === null || _h === void 0 ? void 0 : _h.call(axios, {\n                    id,\n                    msg: 'Sending request, waiting for response',\n                    data: {\n                        overrideCache,\n                        state: cache.state\n                    }\n                });\n            }\n            // Hydrates any UI temporarily, if cache is available\n            if (cache.state === 'stale' || cache.data) {\n                await ((_k = (_j = config.cache).hydrate) === null || _k === void 0 ? void 0 : _k.call(_j, cache));\n            }\n            return config;\n        }\n        let cachedResponse;\n        if (cache.state === 'loading') {\n            const deferred = axios.waiting[id];\n            // Just in case, the deferred doesn't exists.\n            /* istanbul ignore if 'really hard to test' */\n            if (!deferred) {\n                await axios.storage.remove(id, config);\n                // Hydrates any UI temporarily, if cache is available\n                if (cache.data) {\n                    await ((_m = (_l = config.cache).hydrate) === null || _m === void 0 ? void 0 : _m.call(_l, cache));\n                }\n                return config;\n            }\n            if (__ACI_DEV__) {\n                (_o = axios.debug) === null || _o === void 0 ? void 0 : _o.call(axios, {\n                    id,\n                    msg: 'Detected concurrent request, waiting for it to finish'\n                });\n            }\n            try {\n                cachedResponse = await deferred;\n            }\n            catch (err) {\n                if (__ACI_DEV__) {\n                    (_p = axios.debug) === null || _p === void 0 ? void 0 : _p.call(axios, {\n                        id,\n                        msg: 'Deferred rejected, requesting again',\n                        data: err\n                    });\n                }\n                // Hydrates any UI temporarily, if cache is available\n                /* istanbul ignore if 'really hard to test' */\n                if (cache.data) {\n                    await ((_r = (_q = config.cache).hydrate) === null || _r === void 0 ? void 0 : _r.call(_q, cache));\n                }\n                // The deferred is rejected when the request that we are waiting rejected cache.\n                return config;\n            }\n        }\n        else {\n            cachedResponse = cache.data;\n        }\n        // Even though the response interceptor receives this one from here,\n        // it has been configured to ignore cached responses = true\n        config.adapter = () => Promise.resolve({\n            config,\n            data: cachedResponse.data,\n            headers: cachedResponse.headers,\n            status: cachedResponse.status,\n            statusText: cachedResponse.statusText,\n            cached: true,\n            id\n        });\n        if (__ACI_DEV__) {\n            (_s = axios.debug) === null || _s === void 0 ? void 0 : _s.call(axios, {\n                id,\n                msg: 'Returning cached response'\n            });\n        }\n        return config;\n    };\n    return {\n        onFulfilled,\n        apply: () => axios.interceptors.request.use(onFulfilled)\n    };\n}\n","/** Tests an response against a {@link CachePredicateObject}. */\nexport async function testCachePredicate(response, predicate) {\n    var _a;\n    if (typeof predicate === 'function') {\n        return predicate(response);\n    }\n    const { statusCheck, responseMatch, containsHeaders } = predicate;\n    if ((statusCheck && !(await statusCheck(response.status))) ||\n        (responseMatch && !(await responseMatch(response)))) {\n        return false;\n    }\n    if (containsHeaders) {\n        for (const [header, predicate] of Object.entries(containsHeaders)) {\n            if (!(await predicate(\n            // Avoid bugs in case the header is not in lower case\n            (_a = response.headers[header.toLowerCase()]) !== null && _a !== void 0 ? _a : response.headers[header]))) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","/** Function to update all caches, from CacheProperties.update, with the new data. */\nexport async function updateCache(storage, data, cacheUpdater) {\n    // Global cache update function.\n    if (typeof cacheUpdater === `function`) {\n        return cacheUpdater(data);\n    }\n    for (const [cacheKey, updater] of Object.entries(cacheUpdater)) {\n        if (updater === 'delete') {\n            await storage.remove(cacheKey, data.config);\n            continue;\n        }\n        const value = await storage.get(cacheKey, data.config);\n        if (value.state === 'loading') {\n            continue;\n        }\n        const newValue = await updater(value, data);\n        if (newValue === 'delete') {\n            await storage.remove(cacheKey, data.config);\n            continue;\n        }\n        if (newValue !== 'ignore') {\n            await storage.set(cacheKey, newValue, data.config);\n        }\n    }\n}\n","import { parse } from 'cache-parser';\nimport { Header } from '../header/headers';\nimport { testCachePredicate } from '../util/cache-predicate';\nimport { updateCache } from '../util/update-cache';\nimport { createCacheResponse, isMethodIn } from './util';\nexport function defaultResponseInterceptor(axios) {\n    /**\n     * Rejects cache for an response response.\n     *\n     * Also update the waiting list for this key by rejecting it.\n     */\n    const rejectResponse = async (responseId, config) => {\n        var _a;\n        // Updates the cache to empty to prevent infinite loading state\n        await axios.storage.remove(responseId, config);\n        // Rejects the deferred, if present\n        (_a = axios.waiting[responseId]) === null || _a === void 0 ? void 0 : _a.reject();\n        delete axios.waiting[responseId];\n    };\n    const onFulfilled = async (response) => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        var _o;\n        // When response.config is not present, the response is indeed a error.\n        if (!response.config) {\n            if (__ACI_DEV__) {\n                (_a = axios.debug) === null || _a === void 0 ? void 0 : _a.call(axios, {\n                    msg: 'Response interceptor received an unknown response.',\n                    data: response\n                });\n                throw response;\n            }\n        }\n        const id = (response.id = (_b = (_o = response.config).id) !== null && _b !== void 0 ? _b : (_o.id = axios.generateKey(response.config)));\n        (_c = response.cached) !== null && _c !== void 0 ? _c : (response.cached = false);\n        // Response is already cached\n        if (response.cached) {\n            if (__ACI_DEV__) {\n                (_d = axios.debug) === null || _d === void 0 ? void 0 : _d.call(axios, {\n                    id,\n                    msg: 'Returned cached response'\n                });\n            }\n            return response;\n        }\n        const config = response.config;\n        // Request interceptor merges defaults with per request configuration\n        const cacheConfig = config.cache;\n        // Skip cache: either false or weird behavior\n        // config.cache should always exists, at least from global config merge.\n        if (!cacheConfig) {\n            if (__ACI_DEV__) {\n                (_e = axios.debug) === null || _e === void 0 ? void 0 : _e.call(axios, {\n                    id,\n                    msg: 'Response with config.cache falsy',\n                    data: response\n                });\n            }\n            return Object.assign(Object.assign({}, response), { cached: false });\n        }\n        // Update other entries before updating himself\n        if (cacheConfig.update) {\n            await updateCache(axios.storage, response, cacheConfig.update);\n        }\n        if (!isMethodIn(config.method, cacheConfig.methods)) {\n            if (__ACI_DEV__) {\n                (_f = axios.debug) === null || _f === void 0 ? void 0 : _f.call(axios, {\n                    id,\n                    msg: `Ignored because method (${config.method}) is not in cache.methods (${cacheConfig.methods})`,\n                    data: { config, cacheConfig }\n                });\n            }\n            return response;\n        }\n        const cache = await axios.storage.get(id, config);\n        if (\n        // If the request interceptor had a problem or it wasn't cached\n        cache.state !== 'loading') {\n            if (__ACI_DEV__) {\n                (_g = axios.debug) === null || _g === void 0 ? void 0 : _g.call(axios, {\n                    id,\n                    msg: \"Response not cached and storage isn't loading\",\n                    data: { cache, response }\n                });\n            }\n            return response;\n        }\n        // Config told that this response should be cached.\n        if (\n        // For 'loading' values (previous: stale), this check already ran in the past.\n        !cache.data &&\n            !(await testCachePredicate(response, cacheConfig.cachePredicate))) {\n            await rejectResponse(id, config);\n            if (__ACI_DEV__) {\n                (_h = axios.debug) === null || _h === void 0 ? void 0 : _h.call(axios, {\n                    id,\n                    msg: 'Cache predicate rejected this response'\n                });\n            }\n            return response;\n        }\n        // Avoid remnant headers from remote server to break implementation\n        for (const header of Object.keys(response.headers)) {\n            if (header.startsWith('x-axios-cache')) {\n                delete response.headers[header];\n            }\n        }\n        if (cacheConfig.etag && cacheConfig.etag !== true) {\n            response.headers[Header.XAxiosCacheEtag] = cacheConfig.etag;\n        }\n        if (cacheConfig.modifiedSince) {\n            response.headers[Header.XAxiosCacheLastModified] =\n                cacheConfig.modifiedSince === true\n                    ? 'use-cache-timestamp'\n                    : cacheConfig.modifiedSince.toUTCString();\n        }\n        let ttl = cacheConfig.ttl || -1; // always set from global config\n        let staleTtl;\n        if (cacheConfig.interpretHeader) {\n            const expirationTime = axios.headerInterpreter(response.headers);\n            // Cache should not be used\n            if (expirationTime === 'dont cache') {\n                await rejectResponse(id, config);\n                if (__ACI_DEV__) {\n                    (_j = axios.debug) === null || _j === void 0 ? void 0 : _j.call(axios, {\n                        id,\n                        msg: `Cache header interpreted as 'dont cache'`,\n                        data: { cache, response, expirationTime }\n                    });\n                }\n                return response;\n            }\n            if (expirationTime !== 'not enough headers') {\n                if (typeof expirationTime === 'number') {\n                    ttl = expirationTime;\n                }\n                else {\n                    ttl = expirationTime.cache;\n                    staleTtl = expirationTime.stale;\n                }\n            }\n        }\n        const data = createCacheResponse(response, cache.data);\n        if (typeof ttl === 'function') {\n            ttl = await ttl(response);\n        }\n        if (cacheConfig.staleIfError) {\n            response.headers[Header.XAxiosCacheStaleIfError] = String(ttl);\n        }\n        if (__ACI_DEV__) {\n            (_k = axios.debug) === null || _k === void 0 ? void 0 : _k.call(axios, {\n                id,\n                msg: 'Useful response configuration found',\n                data: { cacheConfig, cacheResponse: data }\n            });\n        }\n        const newCache = {\n            state: 'cached',\n            ttl,\n            staleTtl,\n            createdAt: Date.now(),\n            data\n        };\n        // Resolve all other requests waiting for this response\n        const waiting = axios.waiting[id];\n        if (waiting) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            waiting.resolve(newCache.data);\n            delete axios.waiting[id];\n            if (__ACI_DEV__) {\n                (_l = axios.debug) === null || _l === void 0 ? void 0 : _l.call(axios, {\n                    id,\n                    msg: 'Found waiting deferred(s) and resolved them'\n                });\n            }\n        }\n        // Define this key as cache on the storage\n        await axios.storage.set(id, newCache, config);\n        if (__ACI_DEV__) {\n            (_m = axios.debug) === null || _m === void 0 ? void 0 : _m.call(axios, {\n                id,\n                msg: 'Response cached',\n                data: { cache: newCache, response }\n            });\n        }\n        // Return the response with cached as false, because it was not cached at all\n        return response;\n    };\n    const onRejected = async (error) => {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const config = error.config;\n        const id = config.id;\n        const cacheConfig = config.cache;\n        const response = error.response;\n        // config.cache should always exist, at least from global config merge.\n        if (!cacheConfig || !id) {\n            if (__ACI_DEV__) {\n                (_a = axios.debug) === null || _a === void 0 ? void 0 : _a.call(axios, {\n                    msg: 'Web request returned an error but cache handling is not enabled',\n                    data: { error }\n                });\n            }\n            throw error;\n        }\n        if (!isMethodIn(config.method, cacheConfig.methods)) {\n            if (__ACI_DEV__) {\n                (_b = axios.debug) === null || _b === void 0 ? void 0 : _b.call(axios, {\n                    id,\n                    msg: `Ignored because method (${config.method}) is not in cache.methods (${cacheConfig.methods})`,\n                    data: { config, cacheConfig }\n                });\n            }\n            throw error;\n        }\n        const cache = await axios.storage.get(id, config);\n        if (\n        // This will only not be loading if the interceptor broke\n        cache.state !== 'loading' ||\n            cache.previous !== 'stale') {\n            await rejectResponse(id, config);\n            if (__ACI_DEV__) {\n                (_c = axios.debug) === null || _c === void 0 ? void 0 : _c.call(axios, {\n                    id,\n                    msg: 'Caught an error in the request interceptor',\n                    data: { cache, error, config }\n                });\n            }\n            throw error;\n        }\n        if (cacheConfig.staleIfError) {\n            const cacheControl = String(response === null || response === void 0 ? void 0 : response.headers[Header.CacheControl]);\n            const staleHeader = cacheControl && parse(cacheControl).staleIfError;\n            const staleIfError = typeof cacheConfig.staleIfError === 'function'\n                ? await cacheConfig.staleIfError(response, cache, error)\n                : cacheConfig.staleIfError === true && staleHeader\n                    ? staleHeader * 1000 //staleIfError is in seconds\n                    : cacheConfig.staleIfError;\n            if (__ACI_DEV__) {\n                (_d = axios.debug) === null || _d === void 0 ? void 0 : _d.call(axios, {\n                    id,\n                    msg: 'Found cache if stale config for rejected response',\n                    data: { error, config, staleIfError }\n                });\n            }\n            if (staleIfError === true ||\n                // staleIfError is the number of seconds that stale is allowed to be used\n                (typeof staleIfError === 'number' && cache.createdAt + staleIfError > Date.now())) {\n                // Resolve all other requests waiting for this response\n                (_e = axios.waiting[id]) === null || _e === void 0 ? void 0 : _e.resolve(cache.data);\n                delete axios.waiting[id];\n                // re-mark the cache as stale\n                await axios.storage.set(id, {\n                    state: 'stale',\n                    createdAt: Date.now(),\n                    data: cache.data\n                }, config);\n                if (__ACI_DEV__) {\n                    (_f = axios.debug) === null || _f === void 0 ? void 0 : _f.call(axios, {\n                        id,\n                        msg: 'staleIfError resolved this response with cached data',\n                        data: { error, config, cache }\n                    });\n                }\n                return {\n                    cached: true,\n                    config,\n                    id,\n                    data: cache.data.data,\n                    headers: cache.data.headers,\n                    status: cache.data.status,\n                    statusText: cache.data.statusText\n                };\n            }\n        }\n        if (__ACI_DEV__) {\n            (_g = axios.debug) === null || _g === void 0 ? void 0 : _g.call(axios, {\n                id,\n                msg: 'Received an unknown error that could not be handled',\n                data: { error, config }\n            });\n        }\n        throw error;\n    };\n    return {\n        onFulfilled,\n        onRejected,\n        apply: () => axios.interceptors.response.use(onFulfilled, onRejected)\n    };\n}\n","import { Header } from '../header/headers';\n/** Returns true if the provided object was created from {@link buildStorage} function. */\nexport const isStorage = (obj) => !!obj && !!obj['is-storage'];\nfunction hasUniqueIdentifierHeader(value) {\n    const headers = value.data.headers;\n    return (Header.ETag in headers ||\n        Header.LastModified in headers ||\n        Header.XAxiosCacheEtag in headers ||\n        Header.XAxiosCacheLastModified in headers);\n}\n/** Returns true if this has sufficient properties to stale instead of expire. */\nexport function canStale(value) {\n    // Must revalidate is a special case and should not be staled\n    if (String(value.data.headers[Header.CacheControl])\n        // We could use cache-control's parse function, but this is way faster and simpler\n        .includes('must-revalidate')) {\n        return false;\n    }\n    if (hasUniqueIdentifierHeader(value)) {\n        return true;\n    }\n    return (value.state === 'cached' &&\n        value.staleTtl !== undefined &&\n        // Only allow stale values after the ttl is already in the past and the staleTtl is in the future.\n        // In cases that just createdAt + ttl > Date.now(), isn't enough because the staleTtl could be <= 0.\n        // This logic only returns true when Date.now() is between the (createdAt + ttl) and (createdAt + ttl + staleTtl).\n        // Following the example below:\n        // |--createdAt--:--ttl--:---staleTtl--->\n        // [        past        ][now is in here]\n        Math.abs(Date.now() - (value.createdAt + value.ttl)) <= value.staleTtl);\n}\n/**\n * Checks if the provided cache is expired. You should also check if the cache\n * {@link canStale}\n */\nexport function isExpired(value) {\n    return value.ttl !== undefined && value.createdAt + value.ttl <= Date.now();\n}\n/**\n * All integrated storages are wrappers around the `buildStorage` function. External\n * libraries use it and if you want to build your own, `buildStorage` is the way to go!\n *\n * The exported `buildStorage` function abstracts the storage interface and requires a\n * super simple object to build the storage.\n *\n * **Note**: You can only create an custom storage with this function.\n *\n * @example\n *\n * ```js\n * const myStorage = buildStorage({\n *   find: () => {...},\n *   set: () => {...},\n *   remove: () => {...}\n * });\n *\n * const axios = setupCache(axios, { storage: myStorage });\n * ```\n *\n * @see https://axios-cache-interceptor.js.org/guide/storages#buildstorage\n */\nexport function buildStorage({ set, find, remove }) {\n    return {\n        //@ts-expect-error - we don't want to expose this\n        ['is-storage']: 1,\n        set,\n        remove,\n        get: async (key, config) => {\n            let value = await find(key, config);\n            if (!value) {\n                return { state: 'empty' };\n            }\n            if (value.state === 'empty' || value.state === 'loading') {\n                return value;\n            }\n            // Handle cached values\n            if (value.state === 'cached') {\n                if (!isExpired(value)) {\n                    return value;\n                }\n                // Tries to stale expired value\n                if (!canStale(value)) {\n                    await remove(key, config);\n                    return { state: 'empty' };\n                }\n                value = {\n                    state: 'stale',\n                    createdAt: value.createdAt,\n                    data: value.data,\n                    ttl: value.staleTtl !== undefined ? value.staleTtl + value.ttl : undefined\n                };\n                await set(key, value, config);\n            }\n            // A second check in case the new stale value was created already expired.\n            if (!isExpired(value)) {\n                return value;\n            }\n            if (hasUniqueIdentifierHeader(value)) {\n                return value;\n            }\n            await remove(key, config);\n            return { state: 'empty' };\n        }\n    };\n}\n","import { buildStorage, canStale, isExpired } from './build';\n/**\n * Creates a simple in-memory storage. This means that if you need to persist data between\n * page or server reloads, this will not help.\n *\n * This is the storage used by default.\n *\n * If you need to modify it's data, you can do by the `data` property.\n *\n * @example\n *\n * ```js\n * const memoryStorage = buildMemoryStorage();\n *\n * setupCache(axios, { storage: memoryStorage });\n *\n * // Simple example to force delete the request cache\n *\n * const { id } = axios.get('url');\n *\n * delete memoryStorage.data[id];\n * ```\n *\n * @param {boolean} cloneData If the data returned by `find()` should be cloned to avoid\n *   mutating the original data outside the `set()` method.\n * @param {number | false} cleanupInterval The interval in milliseconds to run a\n *   setInterval job of cleaning old entries. If false, the job will not be created.\n *   Disabled is default\n * @param {number | false} maxEntries The maximum number of entries to keep in the\n *   storage. Its hard to determine the size of the entries, so a smart FIFO order is used\n *   to determine eviction. If false, no check will be done and you may grow up memory\n *   usage. Disabled is default\n */\nexport function buildMemoryStorage(cloneData = false, cleanupInterval = false, maxEntries = false) {\n    const storage = buildStorage({\n        set: (key, value) => {\n            if (maxEntries) {\n                let keys = Object.keys(storage.data);\n                // Tries to cleanup first\n                if (keys.length >= maxEntries) {\n                    storage.cleanup();\n                    // Recalculates the keys\n                    keys = Object.keys(storage.data);\n                    // Keeps deleting until there's space\n                    while (keys.length >= maxEntries) {\n                        // There's always at least one key here, otherwise it would not be\n                        // in the loop.\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        delete storage.data[keys.shift()];\n                    }\n                }\n            }\n            storage.data[key] = value;\n        },\n        remove: (key) => {\n            delete storage.data[key];\n        },\n        find: (key) => {\n            const value = storage.data[key];\n            /* istanbul ignore if 'only available on super recent browsers' */\n            if (cloneData && value !== undefined) {\n                if (typeof structuredClone === 'function') {\n                    return structuredClone(value);\n                }\n                return JSON.parse(JSON.stringify(value));\n            }\n            return value;\n        }\n    });\n    storage.data = Object.create(null);\n    // When this program gets running for more than the specified interval, there's a good\n    // chance of it being a long-running process or at least have a lot of entries. Therefore,\n    // \"faster\" loop is more important than code readability.\n    storage.cleanup = () => {\n        const keys = Object.keys(storage.data);\n        let i = -1, value, key;\n        // Looping forward, as older entries are more likely to be expired\n        // than newer ones.\n        while (++i < keys.length) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            (key = keys[i]), (value = storage.data[key]);\n            if (value.state === 'empty') {\n                // this storage returns void.\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                storage.remove(key);\n                continue;\n            }\n            // If the value is expired and can't be stale, remove it\n            if (value.state === 'cached' && isExpired(value) && !canStale(value)) {\n                // this storage returns void.\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                storage.remove(key);\n            }\n        }\n    };\n    if (cleanupInterval) {\n        storage.cleaner = setInterval(storage.cleanup, cleanupInterval);\n    }\n    return storage;\n}\n","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"hash\"]: () => __WEBPACK_EXTERNAL_MODULE_object_code_75549201__.hash });","import { hash } from 'object-code';\n// Remove first and last '/' char, if present\nconst SLASHES_REGEX = /^\\/|\\/$/g;\n/**\n * Builds an generator that receives a {@link CacheRequestConfig} and returns a value\n * hashed by {@link hash}.\n *\n * The value is hashed into a signed integer when the returned value from the provided\n * generator is not a `string` or a `number`.\n *\n * You can return any type of data structure.\n *\n * @example\n *\n * ```js\n * // This generator will return a hash code.\n * // The code will only be the same if url, method and data are the same.\n * const generator = buildKeyGenerator(({ url, method, data }) => ({\n *   url,\n *   method,\n *   data\n * }));\n * ```\n */\nexport function buildKeyGenerator(generator) {\n    return (request) => {\n        if (request.id) {\n            return request.id;\n        }\n        const key = generator(request);\n        if (typeof key === 'string' || typeof key === 'number') {\n            return `${key}`;\n        }\n        return `${hash(key)}`;\n    };\n}\nexport const defaultKeyGenerator = buildKeyGenerator(({ baseURL = '', url = '', method = 'get', params, data }) => {\n    // Remove trailing slashes to avoid generating different keys for the \"same\" final url.\n    baseURL && (baseURL = baseURL.replace(SLASHES_REGEX, ''));\n    url && (url = url.replace(SLASHES_REGEX, ''));\n    // lowercase method\n    method && (method = method.toLowerCase());\n    return {\n        url: baseURL + (baseURL && url ? '/' : '') + url,\n        params: params,\n        method,\n        data\n    };\n});\n","import { defaultHeaderInterpreter } from '../header/interpreter';\nimport { defaultRequestInterceptor } from '../interceptors/request';\nimport { defaultResponseInterceptor } from '../interceptors/response';\nimport { isStorage } from '../storage/build';\nimport { buildMemoryStorage } from '../storage/memory';\nimport { defaultKeyGenerator } from '../util/key-generator';\n/**\n * Apply the caching interceptors for a already created axios instance.\n *\n * ```ts\n * const axios = setupCache(axios, OPTIONS);\n * ```\n *\n * The `setupCache` function receives global options and all [request\n * specifics](https://axios-cache-interceptor.js.org/config/request-specifics) ones too.\n * This way, you can customize the defaults for all requests.\n *\n * @param axios The already created axios instance\n * @param config The config for the caching interceptors\n * @returns The same instance with extended typescript types.\n * @see https://axios-cache-interceptor.js.org/config\n */\nexport function setupCache(axios, options = {}) {\n    var _a, _b, _c, _d, _e, _f;\n    const axiosCache = axios;\n    if (axiosCache.defaults.cache) {\n        throw new Error('setupCache() should be called only once');\n    }\n    axiosCache.storage = options.storage || buildMemoryStorage();\n    if (!isStorage(axiosCache.storage)) {\n        throw new Error('Use buildStorage() function');\n    }\n    axiosCache.waiting = options.waiting || {};\n    axiosCache.generateKey = options.generateKey || defaultKeyGenerator;\n    axiosCache.headerInterpreter = options.headerInterpreter || defaultHeaderInterpreter;\n    axiosCache.requestInterceptor =\n        options.requestInterceptor || defaultRequestInterceptor(axiosCache);\n    axiosCache.responseInterceptor =\n        options.responseInterceptor || defaultResponseInterceptor(axiosCache);\n    axiosCache.debug = options.debug;\n    // CacheRequestConfig values\n    axiosCache.defaults.cache = {\n        update: options.update || {},\n        ttl: (_a = options.ttl) !== null && _a !== void 0 ? _a : 1000 * 60 * 5,\n        // Although RFC 7231 also marks POST as cacheable, most users don't know that\n        // and may have problems about why their \"create X\" route not working.\n        methods: options.methods || ['get', 'head'],\n        cachePredicate: options.cachePredicate || {\n            // All cacheable status codes defined in RFC 7231\n            statusCheck: (status) => [200, 203, 300, 301, 302, 404, 405, 410, 414, 501].includes(status)\n        },\n        etag: (_b = options.etag) !== null && _b !== void 0 ? _b : true,\n        // This option is going to be ignored by servers when ETag is enabled\n        // Checks strict equality to false to avoid undefined-ish values\n        modifiedSince: (_c = options.modifiedSince) !== null && _c !== void 0 ? _c : options.etag === false,\n        interpretHeader: (_d = options.interpretHeader) !== null && _d !== void 0 ? _d : true,\n        cacheTakeover: (_e = options.cacheTakeover) !== null && _e !== void 0 ? _e : true,\n        staleIfError: (_f = options.staleIfError) !== null && _f !== void 0 ? _f : true,\n        override: false,\n        hydrate: undefined\n    };\n    // Apply interceptors\n    axiosCache.requestInterceptor.apply();\n    axiosCache.responseInterceptor.apply();\n    return axiosCache;\n}\n","import { buildStorage, canStale, isExpired } from './build';\n/**\n * Creates a simple storage. You can persist his data by using `sessionStorage` or\n * `localStorage` with it.\n *\n * **ImplNote**: Without polyfill, this storage only works on browser environments.\n *\n * @example\n *\n * ```js\n * const fromLocalStorage = buildWebStorage(localStorage);\n * const fromSessionStorage = buildWebStorage(sessionStorage);\n *\n * const myStorage = new Storage();\n * const fromMyStorage = buildWebStorage(myStorage);\n * ```\n *\n * @param storage The type of web storage to use. localStorage or sessionStorage.\n * @param prefix The prefix to index the storage. Useful to prevent collision between\n *   multiple places using the same storage.\n */\nexport function buildWebStorage(storage, prefix = 'axios-cache-') {\n    return buildStorage({\n        find: (key) => {\n            const json = storage.getItem(prefix + key);\n            return json ? JSON.parse(json) : undefined;\n        },\n        remove: (key) => {\n            storage.removeItem(prefix + key);\n        },\n        set: (key, value) => {\n            const save = () => storage.setItem(prefix + key, JSON.stringify(value));\n            try {\n                return save();\n            }\n            catch (error) {\n                const allValues = Object.entries(storage)\n                    .filter((item) => item[0].startsWith(prefix))\n                    .map((item) => [item[0], JSON.parse(item[1])]);\n                // Remove all expired values\n                for (const value of allValues) {\n                    if (value[1].state === 'cached' && isExpired(value[1]) && !canStale(value[1])) {\n                        storage.removeItem(value[0]);\n                    }\n                }\n                // Try save again after removing expired values\n                try {\n                    return save();\n                }\n                catch (_a) {\n                    // Storage still full, try removing the oldest value until it can be saved\n                    // Descending sort by createdAt\n                    const sortedItems = allValues.sort((a, b) => (a[1].createdAt || 0) - (b[1].createdAt || 0));\n                    for (const item of sortedItems) {\n                        storage.removeItem(item[0]);\n                        try {\n                            return save();\n                        }\n                        catch (_b) {\n                            // This key didn't free all the required space\n                        }\n                    }\n                }\n                // Clear the cache for the specified key\n                storage.removeItem(prefix + key);\n            }\n        }\n    });\n}\n","export * from './cache/axios';\nexport * from './cache/cache';\nexport * from './cache/create';\nexport * from './header/headers';\nexport * from './header/interpreter';\nexport * from './header/types';\nexport * from './interceptors/build';\nexport * from './interceptors/request';\nexport * from './interceptors/response';\nexport * from './interceptors/util';\nexport * from './storage/build';\nexport * from './storage/memory';\nexport * from './storage/types';\nexport * from './storage/web-api';\nexport * from './util/cache-predicate';\nexport * from './util/key-generator';\nexport * from './util/types';\nexport * from './util/update-cache';\nif (__ACI_DEV__) {\n    console.error('You are using a development build. Make sure to use the correct build in production\\nhttps://axios-cache-interceptor.js.org/guide/getting-started\\n\\n');\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","x","d","__WEBPACK_EXTERNAL_MODULE_cache_parser_5b405dda__","parse","Header","freeze","IfModifiedSince","LastModified","IfNoneMatch","CacheControl","Pragma","ETag","Expires","Age","XAxiosCacheEtag","XAxiosCacheLastModified","XAxiosCacheStaleIfError","defaultHeaderInterpreter","headers","cacheControl","noCache","noStore","maxAge","maxStale","immutable","staleWhileRevalidate","String","cache","undefined","age","Number","stale","expires","milliseconds","Date","now","__WEBPACK_EXTERNAL_MODULE_fast_defer_931deec3__","deferred","createValidateStatus","oldValidate","status","isMethodIn","requestMethod","methodList","toLowerCase","some","method","updateStaleRequest","config","_a","etag","modifiedSince","etagValue","data","createdAt","toUTCString","createCacheResponse","response","previousCache","cached","statusText","assign","defaultRequestInterceptor","axios","onFulfilled","async","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","id","generateKey","debug","msg","defaults","cacheTakeover","methods","storage","overrideCache","override","ignoreAndRequest","state","waiting","catch","set","previous","validateStatus","hydrate","cachedResponse","remove","err","adapter","Promise","resolve","apply","interceptors","request","use","testCachePredicate","predicate","statusCheck","responseMatch","containsHeaders","header","entries","updateCache","cacheUpdater","cacheKey","updater","value","newValue","defaultResponseInterceptor","rejectResponse","responseId","reject","cacheConfig","update","cachePredicate","keys","startsWith","staleTtl","ttl","interpretHeader","expirationTime","headerInterpreter","staleIfError","cacheResponse","newCache","onRejected","error","staleHeader","isStorage","hasUniqueIdentifierHeader","canStale","includes","Math","abs","isExpired","buildStorage","find","buildMemoryStorage","cloneData","cleanupInterval","maxEntries","length","cleanup","shift","structuredClone","JSON","stringify","create","i","cleaner","setInterval","__WEBPACK_EXTERNAL_MODULE_object_code_75549201__","hash","SLASHES_REGEX","buildKeyGenerator","generator","defaultKeyGenerator","baseURL","url","params","replace","setupCache","options","axiosCache","Error","requestInterceptor","responseInterceptor","buildWebStorage","prefix","json","getItem","removeItem","save","setItem","allValues","filter","item","map","sortedItems","sort","a","b","console"],"sourceRoot":""}