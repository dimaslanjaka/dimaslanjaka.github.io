{"version":3,"file":"index.bundle.js","sources":["../src/header/headers.ts","../src/header/interpreter.ts","../src/util/cache-predicate.ts","../src/interceptors/util.ts","../src/interceptors/request.ts","../src/util/update-cache.ts","../src/interceptors/response.ts","../src/storage/build.ts","../src/storage/memory.ts","../src/util/key-generator.ts","../src/index.ts","../src/storage/web-api.ts","../src/cache/create.ts"],"sourcesContent":["export const Header = {\n  /**\n   * ```txt\n   * If-Modified-Since: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since\n   */\n  IfModifiedSince: 'if-modified-since',\n\n  /**\n   * ```txt\n   * Last-Modified: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Last-Modified\n   */\n  LastModified: 'last-modified',\n\n  /**\n   * ```txt\n   * If-None-Match: \"<etag_value>\"\n   * If-None-Match: \"<etag_value>\", \"<etag_value>\", â€¦\n   * If-None-Match: *\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match\n   */\n  IfNoneMatch: 'if-none-match',\n\n  /**\n   * ```txt\n   * Cache-Control: max-age=604800\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n   */\n  CacheControl: 'cache-control',\n\n  /**\n   * ```txt\n   * Pragma: no - cache;\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Pragma\n   */\n  Pragma: 'pragma',\n\n  /**\n   * ```txt\n   * ETag: W / '<etag_value>';\n   * ETag: '<etag_value>';\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag\n   */\n  ETag: 'etag',\n\n  /**\n   * ```txt\n   * Expires: <http-date>\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expires\n   */\n  Expires: 'expires',\n\n  /**\n   * ```txt\n   * Age: <delta-seconds>\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Age\n   */\n  Age: 'age',\n\n  /**\n   * Used internally as metadata to mark the cache item as revalidatable and enabling\n   * stale cache state Contains a string of ASCII characters that can be used as ETag for\n   * `If-Match` header Provided by user using `cache.etag` value.\n   *\n   * ```txt\n   * X-Axios-Cache-Etag: \"<etag_value>\"\n   * ```\n   */\n  XAxiosCacheEtag: 'x-axios-cache-etag',\n\n  /**\n   * Used internally as metadata to mark the cache item as revalidatable and enabling\n   * stale cache state may contain `'use-cache-timestamp'` if `cache.modifiedSince` is\n   * `true`, otherwise will contain a date from `cache.modifiedSince`. If a date is\n   * provided, it can be used for `If-Modified-Since` header, otherwise the cache\n   * timestamp can be used for `If-Modified-Since` header.\n   *\n   * ```txt\n   * X-Axios-Cache-Last-Modified: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n   * X-Axios-Cache-Last-Modified: use-cache-timestamp\n   * ```\n   */\n  XAxiosCacheLastModified: 'x-axios-cache-last-modified',\n\n  /**\n   * Used internally as metadata to mark the cache item able to be used if the server\n   * returns an error. The stale-if-error response directive indicates that the cache can\n   * reuse a stale response when any error occurs.\n   *\n   * ```txt\n   * XAxiosCacheStaleIfError: <seconds>\n   * ```\n   */\n  XAxiosCacheStaleIfError: 'x-axios-cache-stale-if-error'\n} as const;\n","import { parse } from 'cache-parser';\nimport { Header } from './headers.js';\nimport type { HeaderInterpreter } from './types.js';\n\nexport const defaultHeaderInterpreter: HeaderInterpreter = (headers, location) => {\n  if (!headers) return 'not enough headers';\n\n  const cacheControl: unknown = headers[Header.CacheControl];\n\n  if (cacheControl) {\n    const cc = parse(String(cacheControl));\n\n    if (\n      // Header told that this response should not be cached.\n      cc.noCache ||\n      cc.noStore ||\n      // Server side handling private data\n      (location === 'server' && cc.private)\n    ) {\n      return 'dont cache';\n    }\n\n    if (cc.immutable) {\n      // 1 year is sufficient, as Infinity may cause problems with certain storages.\n      // It might not be the best way, but a year is better than none. Facebook shows\n      // that a browser session stays at the most 1 month.\n      return {\n        cache: 1000 * 60 * 60 * 24 * 365\n      };\n    }\n\n    if (cc.maxAge !== undefined) {\n      const age: unknown = headers[Header.Age];\n\n      return {\n        cache: age\n          ? // If age is present, we must subtract it from maxAge\n            (cc.maxAge - Number(age)) * 1000\n          : cc.maxAge * 1000,\n        // Already out of date, must be requested again\n        stale:\n          // I couldn't find any documentation about who should be used, as they\n          // are not meant to overlap each other. But, as we cannot request in the\n          // background, as the stale-while-revalidate says, and we just increase\n          // its staleTtl when its present, max-stale is being preferred over\n          // stale-while-revalidate.\n          cc.maxStale !== undefined\n            ? cc.maxStale * 1000\n            : cc.staleWhileRevalidate !== undefined\n              ? cc.staleWhileRevalidate * 1000\n              : undefined\n      };\n    }\n  }\n\n  const expires: unknown = headers[Header.Expires];\n\n  if (expires) {\n    const milliseconds = Date.parse(String(expires)) - Date.now();\n    return milliseconds >= 0 ? { cache: milliseconds } : 'dont cache';\n  }\n\n  return 'not enough headers';\n};\n","import type { CacheAxiosResponse } from '../cache/axios.js';\n\nimport type { CachePredicate, CachePredicateObject } from './types.js';\n\n/** Tests an response against a {@link CachePredicateObject}. */\nexport async function testCachePredicate<R = unknown, D = unknown>(\n  response: CacheAxiosResponse<R, D>,\n  predicate: CachePredicate<R, D>\n): Promise<boolean> {\n  if (typeof predicate === 'function') {\n    return predicate(response);\n  }\n\n  const { statusCheck, responseMatch, containsHeaders } = predicate;\n\n  if (\n    (statusCheck && !(await statusCheck(response.status))) ||\n    (responseMatch && !(await responseMatch(response)))\n  ) {\n    return false;\n  }\n\n  if (containsHeaders) {\n    for (const [header, predicate] of Object.entries(containsHeaders)) {\n      if (\n        !(await predicate(\n          // Avoid bugs in case the header is not in lower case\n          response.headers[header.toLowerCase()] ?? response.headers[header]\n        ))\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines whether a given URL matches a specified pattern, which can be either a\n * string or a regular expression.\n *\n * @param matchPattern - The pattern to match against\n *\n *   - If it's a regular expression, it will be reset to ensure consistent behavior for\n *       stateful regular expressions.\n *   - If it's a string, the function checks if the URL contains the string.\n *\n * @param configUrl - The URL to test against the provided pattern; normally `config.url`.\n * @returns `true` if the `configUrl` matches the `matchPattern`\n */\nexport function regexOrStringMatch(matchPattern: string | RegExp, configUrl: string) {\n  if (matchPattern instanceof RegExp) {\n    matchPattern.lastIndex = 0; // Reset the regex to ensure consistent matching\n    return matchPattern.test(configUrl);\n  }\n\n  return configUrl.includes(matchPattern);\n}\n","import type { Method } from 'axios';\nimport type { CacheAxiosResponse, CacheRequestConfig } from '../cache/axios.js';\nimport type { CacheProperties } from '../cache/cache.js';\nimport { Header } from '../header/headers.js';\nimport type {\n  CachedResponse,\n  MustRevalidateStorageValue,\n  StaleStorageValue\n} from '../storage/types.js';\n\n/**\n * Creates a new validateStatus function that will use the one already used and also\n * accept status code 304.\n */\nexport function createValidateStatus(\n  oldValidate?: CacheRequestConfig['validateStatus']\n): (status: number) => boolean {\n  return oldValidate\n    ? (status) => oldValidate(status) || status === 304\n    : (status) => (status >= 200 && status < 300) || status === 304;\n}\n\n/** Checks if the given method is in the methods array */\nexport function isMethodIn(\n  requestMethod: Method | string = 'get',\n  methodList: Method[] = []\n): boolean {\n  requestMethod = requestMethod.toLowerCase() as Lowercase<Method>;\n  return methodList.some((method) => method === requestMethod);\n}\n\nexport interface ConfigWithCache<D> extends CacheRequestConfig<unknown, D> {\n  cache: Partial<CacheProperties<unknown, D>>;\n}\n\n/**\n * This function updates the cache when the request is stale. So, the next request to the\n * server will be made with proper header / settings.\n */\nexport function updateStaleRequest<D>(\n  cache: StaleStorageValue | MustRevalidateStorageValue,\n  config: ConfigWithCache<D>\n): void {\n  config.headers ||= {};\n\n  const { etag, modifiedSince } = config.cache;\n\n  if (etag) {\n    const etagValue = etag === true ? (cache.data?.headers[Header.ETag] as unknown) : etag;\n\n    if (etagValue) {\n      config.headers[Header.IfNoneMatch] = etagValue;\n    }\n  }\n\n  if (modifiedSince) {\n    config.headers[Header.IfModifiedSince] =\n      modifiedSince === true\n        ? // If last-modified is not present, use the createdAt timestamp\n          (cache.data.headers[Header.LastModified] as unknown) ||\n          new Date(cache.createdAt).toUTCString()\n        : modifiedSince.toUTCString();\n  }\n}\n\n/**\n * Creates the new date to the cache by the provided response. Also handles possible 304\n * Not Modified by updating response properties.\n */\nexport function createCacheResponse<R, D>(\n  response: CacheAxiosResponse<R, D>,\n  previousCache?: CachedResponse\n): CachedResponse {\n  if (response.status === 304 && previousCache) {\n    // Set the cache information into the response object\n    response.cached = true;\n    response.data = previousCache.data as R;\n    response.status = previousCache.status;\n    response.statusText = previousCache.statusText;\n\n    // Update possible new headers\n    response.headers = {\n      ...previousCache.headers,\n      ...response.headers\n    };\n\n    // return the old cache\n    return previousCache;\n  }\n\n  // New Response\n  return {\n    data: response.data,\n    status: response.status,\n    statusText: response.statusText,\n    headers: response.headers\n  };\n}\n","import { deferred } from 'fast-defer';\nimport type { AxiosCacheInstance, CacheAxiosResponse } from '../cache/axios.js';\nimport { Header } from '../header/headers.js';\nimport type { CachedResponse, CachedStorageValue, LoadingStorageValue } from '../storage/types.js';\nimport { regexOrStringMatch } from '../util/cache-predicate.js';\nimport type { RequestInterceptor } from './build.js';\nimport {\n  type ConfigWithCache,\n  createValidateStatus,\n  isMethodIn,\n  updateStaleRequest\n} from './util.js';\n\nexport function defaultRequestInterceptor(axios: AxiosCacheInstance): RequestInterceptor {\n  const onFulfilled: RequestInterceptor['onFulfilled'] = async (config) => {\n    config.id = axios.generateKey(config);\n\n    if (config.cache === false) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: config.id,\n          msg: 'Ignoring cache because config.cache === false',\n          data: config\n        });\n      }\n\n      return config;\n    }\n\n    // merge defaults with per request configuration\n    config.cache = { ...axios.defaults.cache, ...config.cache };\n\n    // ignoreUrls (blacklist)\n    if (\n      typeof config.cache.cachePredicate === 'object' &&\n      config.cache.cachePredicate.ignoreUrls &&\n      config.url\n    ) {\n      for (const url of config.cache.cachePredicate.ignoreUrls) {\n        if (regexOrStringMatch(url, config.url)) {\n          if (__ACI_DEV__) {\n            axios.debug({\n              id: config.id,\n              msg: `Ignored because url (${config.url}) matches ignoreUrls (${config.cache.cachePredicate.ignoreUrls})`,\n              data: {\n                url: config.url,\n                cachePredicate: config.cache.cachePredicate\n              }\n            });\n          }\n\n          return config;\n        }\n      }\n    }\n\n    // allowUrls\n    if (\n      typeof config.cache.cachePredicate === 'object' &&\n      config.cache.cachePredicate.allowUrls &&\n      config.url\n    ) {\n      let matched = false;\n\n      for (const url of config.cache.cachePredicate.allowUrls) {\n        if (regexOrStringMatch(url, config.url)) {\n          matched = true;\n\n          if (__ACI_DEV__) {\n            axios.debug({\n              id: config.id,\n              msg: `Cached because url (${config.url}) matches allowUrls (${config.cache.cachePredicate.allowUrls})`,\n              data: {\n                url: config.url,\n                cachePredicate: config.cache.cachePredicate\n              }\n            });\n          }\n          break;\n        }\n      }\n\n      if (!matched) {\n        if (__ACI_DEV__) {\n          axios.debug({\n            id: config.id,\n            msg: `Ignored because url (${config.url}) does not match any allowUrls (${config.cache.cachePredicate.allowUrls})`,\n            data: {\n              url: config.url,\n              cachePredicate: config.cache.cachePredicate\n            }\n          });\n        }\n        return config;\n      }\n    }\n\n    // Applies sufficient headers to prevent other cache systems to work along with this one\n    //\n    // Its currently used before isMethodIn because if the isMethodIn returns false, the request\n    // shouldn't be cached an therefore neither in the browser.\n    // https://stackoverflow.com/a/2068407\n    if (config.cache.cacheTakeover) {\n      config.headers[Header.CacheControl] ??= 'no-cache, no-store, must-revalidate';\n      config.headers[Header.Pragma] ??= 'no-cache';\n      config.headers[Header.Expires] ??= '0';\n    }\n\n    if (!isMethodIn(config.method, config.cache.methods)) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: config.id,\n          msg: `Ignored because method (${config.method}) is not in cache.methods (${config.cache.methods})`\n        });\n      }\n\n      return config;\n    }\n\n    // Assumes that the storage handled staled responses\n    let cache = await axios.storage.get(config.id, config);\n    const overrideCache = config.cache.override;\n\n    // Not cached, continue the request, and mark it as fetching\n    // biome-ignore lint/suspicious/noConfusingLabels: required to break condition in simultaneous accesses\n    ignoreAndRequest: if (\n      cache.state === 'empty' ||\n      cache.state === 'stale' ||\n      cache.state === 'must-revalidate' ||\n      overrideCache\n    ) {\n      // This checks for simultaneous access to a new key. The js event loop jumps on the\n      // first await statement, so the second (asynchronous call) request may have already\n      // started executing.\n      if (axios.waiting.has(config.id) && !overrideCache) {\n        cache = (await axios.storage.get(config.id, config)) as\n          | CachedStorageValue\n          | LoadingStorageValue;\n\n        // @ts-expect-error This check is required when a request has it own cache deleted manually, lets\n        // say by a `axios.storage.delete(key)` and has a concurrent loading request.\n        // Because in this case, the cache will be empty and may still has a pending key\n        // on waiting map.\n        if (cache.state !== 'empty' && cache.state !== 'must-revalidate') {\n          if (__ACI_DEV__) {\n            axios.debug({\n              id: config.id,\n              msg: 'Waiting list had an deferred for this key, waiting for it to finish'\n            });\n          }\n\n          break ignoreAndRequest;\n        }\n      }\n\n      // Create a deferred to resolve other requests for the same key when it's completed\n      const def = deferred<void>();\n      axios.waiting.set(config.id, def);\n\n      // Adds a default reject handler to catch when the request gets aborted without\n      // others waiting for it.\n      def.catch(() => undefined);\n\n      await axios.storage.set(\n        config.id,\n        {\n          state: 'loading',\n          previous: overrideCache\n            ? // Simply determine if the request is stale or not\n              // based if it had previous data or not\n              cache.data\n              ? 'stale'\n              : 'empty'\n            : // Typescript doesn't know that cache.state here can only be 'empty' or 'stale'\n              (cache.state as 'stale' | 'must-revalidate'),\n\n          data: cache.data as any,\n\n          // If the cache is empty and asked to override it, use the current timestamp\n          createdAt: overrideCache && !cache.createdAt ? Date.now() : (cache.createdAt as any)\n        },\n        config\n      );\n\n      if (cache.state === 'stale' || cache.state === 'must-revalidate') {\n        updateStaleRequest(cache, config as ConfigWithCache<unknown>);\n\n        if (__ACI_DEV__) {\n          axios.debug({\n            id: config.id,\n            msg: 'Updated stale request'\n          });\n        }\n      }\n\n      config.validateStatus = createValidateStatus(config.validateStatus);\n\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: config.id,\n          msg: 'Sending request, waiting for response',\n          data: {\n            overrideCache,\n            state: cache.state\n          }\n        });\n      }\n\n      // Hydrates any UI temporarily, if cache is available\n      if (cache.state === 'stale' || (cache.data && cache.state !== 'must-revalidate')) {\n        await config.cache.hydrate?.(cache);\n      }\n\n      return config;\n    }\n\n    let cachedResponse: CachedResponse;\n\n    if (cache.state === 'loading') {\n      const deferred = axios.waiting.get(config.id);\n\n      // The deferred may not exists when the process is using a persistent\n      // storage and cancelled  in the middle of a request, this would result in\n      // a pending loading state in the storage but no current promises to resolve\n      if (!deferred) {\n        // Hydrates any UI temporarily, if cache is available\n        if (cache.data) {\n          await config.cache.hydrate?.(cache);\n        }\n\n        return config;\n      }\n\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: config.id,\n          msg: 'Detected concurrent request, waiting for it to finish'\n        });\n      }\n\n      try {\n        // Deferred can't reuse the value because the user's storage might clone\n        // or mutate the value, so we need to ask it again.\n        // For example with memoryStorage + cloneData\n        await deferred;\n        const state = await axios.storage.get(config.id, config);\n\n        // This is a cache mismatch and should never happen, but in case it does,\n        // we need to redo the request all over again.\n        /* c8 ignore start */\n        if (!state.data) {\n          if (__ACI_DEV__) {\n            axios.debug({\n              id: config.id,\n              msg: 'Deferred resolved, but no data was found, requesting again'\n            });\n          }\n\n          return onFulfilled!(config);\n        }\n        /* c8 ignore end */\n\n        cachedResponse = state.data;\n      } catch (err) {\n        if (__ACI_DEV__) {\n          axios.debug({\n            id: config.id,\n            msg: 'Deferred rejected, requesting again',\n            data: err\n          });\n        }\n\n        // Hydrates any UI temporarily, if cache is available\n        /* c8 ignore start */\n        if (cache.data) {\n          await config.cache.hydrate?.(cache);\n        }\n        /* c8 ignore end */\n\n        // The deferred is rejected when the request that we are waiting rejects its cache.\n        // In this case, we need to redo the request all over again.\n        return onFulfilled!(config);\n      }\n    } else {\n      cachedResponse = cache.data;\n    }\n\n    // The cached data is already transformed after receiving the response from the server.\n    // Reapplying the transformation on the transformed data will have an unintended effect.\n    // Since the cached data is already in the desired format, there is no need to apply the transformation function again.\n    config.transformResponse = undefined;\n\n    // Even though the response interceptor receives this one from here,\n    // it has been configured to ignore cached responses = true\n    config.adapter = function cachedAdapter(): Promise<CacheAxiosResponse> {\n      return Promise.resolve({\n        config,\n        data: cachedResponse.data,\n        headers: cachedResponse.headers,\n        status: cachedResponse.status,\n        statusText: cachedResponse.statusText,\n        cached: true,\n        stale: (cache as LoadingStorageValue).previous === 'stale',\n        id: config.id!\n      });\n    };\n\n    if (__ACI_DEV__) {\n      axios.debug({\n        id: config.id,\n        msg: 'Returning cached response'\n      });\n    }\n\n    return config;\n  };\n\n  return {\n    onFulfilled\n  };\n}\n","import type { CacheAxiosResponse } from '../cache/axios.js';\nimport type { AxiosStorage } from '../storage/types.js';\nimport type { CacheUpdater } from './types.js';\n\n/** Function to update all caches, from CacheProperties.update, with the new data. */\nexport async function updateCache<R, D>(\n  storage: AxiosStorage,\n  data: CacheAxiosResponse<R, D>,\n  cacheUpdater: CacheUpdater<R, D>\n): Promise<void> {\n  // Global cache update function.\n  if (typeof cacheUpdater === 'function') {\n    return cacheUpdater(data);\n  }\n\n  for (const [cacheKey, updater] of Object.entries(cacheUpdater)) {\n    if (updater === 'delete') {\n      await storage.remove(cacheKey, data.config);\n      continue;\n    }\n\n    const value = await storage.get(cacheKey, data.config);\n\n    if (value.state === 'loading') {\n      continue;\n    }\n\n    const newValue = await updater(value, data);\n\n    if (newValue === 'delete') {\n      await storage.remove(cacheKey, data.config);\n      continue;\n    }\n\n    if (newValue !== 'ignore') {\n      await storage.set(cacheKey, newValue, data.config);\n    }\n  }\n}\n","import type { AxiosResponseHeaders } from 'axios';\nimport { parse } from 'cache-parser';\nimport type { AxiosCacheInstance, CacheAxiosResponse, CacheRequestConfig } from '../cache/axios.js';\nimport type { CacheProperties } from '../cache/cache.js';\nimport { Header } from '../header/headers.js';\nimport type { CachedStorageValue } from '../storage/types.js';\nimport { testCachePredicate } from '../util/cache-predicate.js';\nimport { updateCache } from '../util/update-cache.js';\nimport type { ResponseInterceptor } from './build.js';\nimport { createCacheResponse, isMethodIn } from './util.js';\n\nexport function defaultResponseInterceptor(axios: AxiosCacheInstance): ResponseInterceptor {\n  /**\n   * Rejects cache for an response response.\n   *\n   * Also update the waiting list for this key by rejecting it.\n   */\n  const rejectResponse = async (\n    responseId: string,\n    config: CacheRequestConfig,\n    clearCache: boolean\n  ) => {\n    // Updates the cache to empty to prevent infinite loading state\n    if (clearCache) {\n      await axios.storage.remove(responseId, config);\n    }\n\n    // Rejects the deferred, if present\n    const deferred = axios.waiting.get(responseId);\n\n    if (deferred) {\n      deferred.reject();\n      axios.waiting.delete(responseId);\n    }\n  };\n\n  const onFulfilled: ResponseInterceptor['onFulfilled'] = async (response) => {\n    // When response.config is not present, the response is indeed a error.\n    if (!response?.config) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          msg: 'Response interceptor received an unknown response.',\n          data: response\n        });\n      }\n\n      // Re-throws the error\n      throw response;\n    }\n\n    response.id = response.config.id!;\n    response.cached ??= false;\n\n    const config = response.config;\n    // Request interceptor merges defaults with per request configuration\n    const cacheConfig = config.cache as CacheProperties;\n\n    // Response is already cached\n    if (response.cached) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: 'Returned cached response'\n        });\n      }\n\n      return response;\n    }\n\n    // Skip cache: either false or weird behavior\n    // config.cache should always exists, at least from global config merge.\n    if (!cacheConfig) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: 'Response with config.cache falsy',\n          data: response\n        });\n      }\n\n      response.cached = false;\n      return response;\n    }\n\n    // Update other entries before updating himself\n    if (cacheConfig.update) {\n      await updateCache(axios.storage, response, cacheConfig.update);\n    }\n\n    if (!isMethodIn(config.method, cacheConfig.methods)) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: `Ignored because method (${config.method}) is not in cache.methods (${cacheConfig.methods})`,\n          data: { config, cacheConfig }\n        });\n      }\n\n      return response;\n    }\n\n    const cache = await axios.storage.get(response.id, config);\n\n    if (\n      // If the request interceptor had a problem or it wasn't cached\n      cache.state !== 'loading'\n    ) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: \"Response not cached and storage isn't loading\",\n          data: { cache, response }\n        });\n      }\n\n      return response;\n    }\n\n    // Config told that this response should be cached.\n    if (\n      // For 'loading' values (previous: stale), this check already ran in the past.\n      !cache.data &&\n      !(await testCachePredicate(response, cacheConfig.cachePredicate))\n    ) {\n      await rejectResponse(response.id, config, true);\n\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: 'Cache predicate rejected this response'\n        });\n      }\n\n      return response;\n    }\n\n    // Avoid remnant headers from remote server to break implementation\n    for (const header of Object.keys(response.headers)) {\n      if (header.startsWith('x-axios-cache')) {\n        delete response.headers[header];\n      }\n    }\n\n    if (cacheConfig.etag && cacheConfig.etag !== true) {\n      response.headers[Header.XAxiosCacheEtag] = cacheConfig.etag;\n    }\n\n    if (cacheConfig.modifiedSince) {\n      response.headers[Header.XAxiosCacheLastModified] =\n        cacheConfig.modifiedSince === true\n          ? 'use-cache-timestamp'\n          : cacheConfig.modifiedSince.toUTCString();\n    }\n\n    let ttl = cacheConfig.ttl || -1; // always set from global config\n    let staleTtl: number | undefined;\n\n    if (cacheConfig.interpretHeader) {\n      const expirationTime = axios.headerInterpreter(response.headers, axios.location);\n\n      // Cache should not be used\n      if (expirationTime === 'dont cache') {\n        await rejectResponse(response.id, config, true);\n\n        if (__ACI_DEV__) {\n          axios.debug({\n            id: response.id,\n            msg: `Cache header interpreted as 'dont cache'`,\n            data: { cache, response, expirationTime }\n          });\n        }\n\n        return response;\n      }\n\n      if (expirationTime !== 'not enough headers') {\n        if (typeof expirationTime === 'number') {\n          ttl = expirationTime;\n        } else {\n          ttl = expirationTime.cache;\n          staleTtl = expirationTime.stale;\n        }\n      }\n    }\n\n    const data = createCacheResponse(response, cache.data);\n\n    if (typeof ttl === 'function') {\n      ttl = await ttl(response);\n    }\n\n    if (cacheConfig.staleIfError) {\n      response.headers[Header.XAxiosCacheStaleIfError] = String(ttl);\n    }\n\n    if (__ACI_DEV__) {\n      axios.debug({\n        id: response.id,\n        msg: 'Useful response configuration found',\n        data: { cacheConfig, cacheResponse: data }\n      });\n    }\n\n    const newCache: CachedStorageValue = {\n      state: 'cached',\n      ttl,\n      staleTtl,\n      createdAt: Date.now(),\n      data\n    };\n\n    // Define this key as cache on the storage\n    await axios.storage.set(response.id, newCache, config);\n\n    // Resolve all other requests waiting for this response\n    const waiting = axios.waiting.get(response.id);\n\n    if (waiting) {\n      waiting.resolve();\n      axios.waiting.delete(response.id);\n\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: 'Found waiting deferred(s) and resolved them'\n        });\n      }\n    }\n\n    if (__ACI_DEV__) {\n      axios.debug({\n        id: response.id,\n        msg: 'Response cached',\n        data: { cache: newCache, response }\n      });\n    }\n\n    // Return the response with cached as false, because it was not cached at all\n    return response;\n  };\n\n  const onRejected: ResponseInterceptor['onRejected'] = async (error) => {\n    // When response.config is not present, the response is indeed a error.\n    if (!error.isAxiosError || !error.config) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          msg: 'FATAL: Received an non axios error in the rejected response interceptor, ignoring.',\n          data: error\n        });\n      }\n\n      // We should probably re-request the response to avoid an infinite loading state here\n      // but, since this is an unknown error, we cannot figure out what request ID to use.\n      // And the only solution is to let the storage actively reject the current loading state.\n      throw error;\n    }\n\n    const config = error.config as CacheRequestConfig & { headers: AxiosResponseHeaders };\n    const id = config.id;\n    const cacheConfig = config.cache as CacheProperties;\n    const response = error.response as CacheAxiosResponse | undefined;\n\n    // config.cache should always exist, at least from global config merge.\n    if (!cacheConfig || !id) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          msg: 'Web request returned an error but cache handling is not enabled',\n          data: { error }\n        });\n      }\n\n      throw error;\n    }\n\n    if (!isMethodIn(config.method, cacheConfig.methods)) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id,\n          msg: `Ignored because method (${config.method}) is not in cache.methods (${cacheConfig.methods})`,\n          data: { config, cacheConfig }\n        });\n      }\n\n      // Rejects all other requests waiting for this response\n      await rejectResponse(id, config, true);\n\n      throw error;\n    }\n\n    const cache = await axios.storage.get(id, config);\n\n    if (\n      // This will only not be loading if the interceptor broke\n      cache.state !== 'loading' ||\n      cache.previous !== 'stale'\n    ) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id,\n          msg: 'Caught an error in the request interceptor',\n          data: { cache, error, config }\n        });\n      }\n\n      // Rejects all other requests waiting for this response\n      await rejectResponse(\n        id,\n        config,\n        // Do not clear cache if this request is cached, but the request was cancelled before returning the cached response\n        error.code !== 'ERR_CANCELED' || (error.code === 'ERR_CANCELED' && cache.state !== 'cached')\n      );\n\n      throw error;\n    }\n\n    if (cacheConfig.staleIfError) {\n      const cacheControl = String(response?.headers[Header.CacheControl]);\n      const staleHeader = cacheControl && parse(cacheControl).staleIfError;\n\n      const staleIfError =\n        typeof cacheConfig.staleIfError === 'function'\n          ? await cacheConfig.staleIfError(response, cache, error)\n          : cacheConfig.staleIfError === true && staleHeader\n            ? staleHeader * 1000 //staleIfError is in seconds\n            : cacheConfig.staleIfError;\n\n      if (__ACI_DEV__) {\n        axios.debug({\n          id,\n          msg: 'Found cache if stale config for rejected response',\n          data: { error, config, staleIfError }\n        });\n      }\n\n      if (\n        staleIfError === true ||\n        // staleIfError is the number of seconds that stale is allowed to be used\n        (typeof staleIfError === 'number' && cache.createdAt + staleIfError > Date.now())\n      ) {\n        // re-mark the cache as stale\n        await axios.storage.set(\n          id,\n          {\n            state: 'stale',\n            createdAt: Date.now(),\n            data: cache.data\n          },\n          config\n        );\n        // Resolve all other requests waiting for this response\n        const waiting = axios.waiting.get(id);\n\n        if (waiting) {\n          waiting.resolve();\n          axios.waiting.delete(id);\n\n          if (__ACI_DEV__) {\n            axios.debug({\n              id,\n              msg: 'Found waiting deferred(s) and resolved them'\n            });\n          }\n        }\n\n        if (__ACI_DEV__) {\n          axios.debug({\n            id,\n            msg: 'staleIfError resolved this response with cached data',\n            data: { error, config, cache }\n          });\n        }\n\n        return {\n          cached: true,\n          stale: true,\n          config,\n          id,\n          data: cache.data.data,\n          headers: cache.data.headers,\n          status: cache.data.status,\n          statusText: cache.data.statusText\n        };\n      }\n    }\n\n    if (__ACI_DEV__) {\n      axios.debug({\n        id,\n        msg: 'Received an unknown error that could not be handled',\n        data: { error, config }\n      });\n    }\n\n    // Rejects all other requests waiting for this response\n    await rejectResponse(id, config, true);\n\n    throw error;\n  };\n\n  return {\n    onFulfilled,\n    onRejected\n  };\n}\n","import type { CacheRequestConfig } from '../cache/axios.js';\nimport { Header } from '../header/headers.js';\nimport type { MaybePromise } from '../util/types.js';\nimport type { AxiosStorage, CachedStorageValue, StaleStorageValue, StorageValue } from './types.js';\n\n/** Returns true if the provided object was created from {@link buildStorage} function. */\nexport const isStorage = (obj: unknown): obj is AxiosStorage =>\n  !!obj && !!(obj as Record<string, boolean>)['is-storage'];\n\nfunction hasUniqueIdentifierHeader(value: CachedStorageValue | StaleStorageValue): boolean {\n  const headers = value.data.headers;\n\n  return (\n    Header.ETag in headers ||\n    Header.LastModified in headers ||\n    Header.XAxiosCacheEtag in headers ||\n    Header.XAxiosCacheLastModified in headers\n  );\n}\n\n/** Returns true if value must be revalidated */\nexport function mustRevalidate(value: CachedStorageValue | StaleStorageValue): boolean {\n  // Must revalidate is a special case and should not serve stale values\n  // We could use cache-control's parse function, but this is way faster and simpler\n  return String(value.data.headers[Header.CacheControl]).includes('must-revalidate');\n}\n\n/** Returns true if this has sufficient properties to stale instead of expire. */\nexport function canStale(value: CachedStorageValue): boolean {\n  if (hasUniqueIdentifierHeader(value)) {\n    return true;\n  }\n\n  return (\n    value.state === 'cached' &&\n    value.staleTtl !== undefined &&\n    // Only allow stale values after the ttl is already in the past and the staleTtl is in the future.\n    // In cases that just createdAt + ttl > Date.now(), isn't enough because the staleTtl could be <= 0.\n    // This logic only returns true when Date.now() is between the (createdAt + ttl) and (createdAt + ttl + staleTtl).\n    // Following the example below:\n    // |--createdAt--:--ttl--:---staleTtl--->\n    // [        past        ][now is in here]\n    Math.abs(Date.now() - (value.createdAt + value.ttl)) <= value.staleTtl\n  );\n}\n\n/**\n * Checks if the provided cache is expired. You should also check if the cache\n * {@link canStale} and {@link mayUseStale}\n */\nexport function isExpired(value: CachedStorageValue | StaleStorageValue): boolean {\n  return value.ttl !== undefined && value.createdAt + value.ttl <= Date.now();\n}\n\nexport interface BuildStorage extends Omit<AxiosStorage, 'get'> {\n  /**\n   * Returns the value for the given key. This method does not have to make checks for\n   * cache invalidation or anything. It just returns what was previous saved, if present.\n   *\n   * @param key The key to look for\n   * @param currentRequest The current {@link CacheRequestConfig}, if any\n   * @see https://axios-cache-interceptor.js.org/guide/storages#buildstorage\n   */\n  find: (\n    key: string,\n    currentRequest?: CacheRequestConfig\n  ) => MaybePromise<StorageValue | undefined>;\n}\n\n/**\n * All integrated storages are wrappers around the `buildStorage` function. External\n * libraries use it and if you want to build your own, `buildStorage` is the way to go!\n *\n * The exported `buildStorage` function abstracts the storage interface and requires a\n * super simple object to build the storage.\n *\n * **Note**: You can only create an custom storage with this function.\n *\n * @example\n *\n * ```js\n * const myStorage = buildStorage({\n *   find: () => {...},\n *   set: () => {...},\n *   remove: () => {...},\n *   clear: () => {...}\n * });\n *\n * const axios = setupCache(axios, { storage: myStorage });\n * ```\n *\n * @see https://axios-cache-interceptor.js.org/guide/storages#buildstorage\n */\nexport function buildStorage({ set, find, remove, clear }: BuildStorage): AxiosStorage {\n  return {\n    //@ts-expect-error - we don't want to expose this\n    'is-storage': 1,\n    set,\n    remove,\n    clear,\n    get: async (key, config) => {\n      let value = await find(key, config);\n\n      if (!value) {\n        return { state: 'empty' };\n      }\n\n      if (\n        value.state === 'empty' ||\n        value.state === 'loading' ||\n        value.state === 'must-revalidate'\n      ) {\n        return value;\n      }\n\n      // Handle cached values\n      if (value.state === 'cached') {\n        if (!isExpired(value)) {\n          return value;\n        }\n\n        // Tries to stale expired value\n        if (!canStale(value)) {\n          await remove(key, config);\n          return { state: 'empty' };\n        }\n\n        value = {\n          state: 'stale',\n          createdAt: value.createdAt,\n          data: value.data,\n          ttl: value.staleTtl !== undefined ? value.staleTtl + value.ttl : undefined\n        };\n\n        await set(key, value, config);\n\n        // Must revalidate is a special case and should not serve stale values\n        if (mustRevalidate(value)) {\n          return { ...value, state: 'must-revalidate' };\n        }\n      }\n\n      // A second check in case the new stale value was created already expired.\n      if (!isExpired(value)) {\n        return value;\n      }\n\n      if (hasUniqueIdentifierHeader(value)) {\n        return value;\n      }\n\n      await remove(key, config);\n      return { state: 'empty' };\n    }\n  };\n}\n","import { buildStorage, canStale, isExpired } from './build.js';\nimport type { AxiosStorage, StorageValue } from './types.js';\n\n/* c8 ignore start */\n/**\n * Clones an object using the structured clone algorithm if available, otherwise it uses\n * JSON.parse(JSON.stringify(value)).\n */\nconst clone: <T>(value: T) => T =\n  // https://caniuse.com/mdn-api_structuredclone (10/18/2023 92.51%)\n  typeof structuredClone === 'function'\n    ? structuredClone\n    : (value) => JSON.parse(JSON.stringify(value));\n/* c8 ignore stop */\n\n/**\n * Creates a simple in-memory storage. This means that if you need to persist data between\n * page or server reloads, this will not help.\n *\n * This is the storage used by default.\n *\n * If you need to modify it's data, you can do by the `data` property.\n *\n * @example\n *\n * ```js\n * const memoryStorage = buildMemoryStorage();\n *\n * setupCache(axios, { storage: memoryStorage });\n *\n * // Simple example to force delete the request cache\n *\n * const { id } = axios.get('url');\n *\n * delete memoryStorage.data[id];\n * ```\n *\n * @param {boolean | 'double'} cloneData Use `true` if the data returned by `find()`\n *   should be cloned to avoid mutating the original data outside the `set()` method. Use\n *   `'double'` to also clone before saving value in storage using `set()`. Disabled is\n *   default\n * @param {number | false} cleanupInterval The interval in milliseconds to run a\n *   setInterval job of cleaning old entries. If false, the job will not be created.\n *   Disabled is default\n * @param {number | false} maxEntries The maximum number of entries to keep in the\n *   storage. Its hard to determine the size of the entries, so a smart FIFO order is used\n *   to determine eviction. If false, no check will be done and you may grow up memory\n *   usage. Disabled is default\n */\nexport function buildMemoryStorage(\n  cloneData: boolean | 'double' = false,\n  cleanupInterval: number | false = false,\n  maxEntries: number | false = false\n) {\n  const storage = buildStorage({\n    set: (key, value) => {\n      if (maxEntries) {\n        let keys = Object.keys(storage.data);\n\n        // Tries to cleanup first\n        if (keys.length >= maxEntries) {\n          storage.cleanup();\n\n          // Recalculates the keys\n          keys = Object.keys(storage.data);\n\n          // Keeps deleting until there's space\n          while (keys.length >= maxEntries) {\n            // There's always at least one key here, otherwise it would not be\n            // in the loop.\n\n            delete storage.data[keys.shift()!];\n          }\n        }\n      }\n\n      // Clone the value before storing to prevent future mutations\n      // from affecting cached data.\n      storage.data[key] = cloneData === 'double' ? clone(value) : value;\n    },\n\n    remove: (key) => {\n      delete storage.data[key];\n    },\n\n    find: (key) => {\n      const value = storage.data[key];\n\n      return cloneData && value !== undefined ? clone(value) : value;\n    },\n\n    clear: () => {\n      storage.data = Object.create(null);\n    }\n  }) as MemoryStorage;\n\n  storage.data = Object.create(null) as Record<string, StorageValue>;\n\n  // When this program gets running for more than the specified interval, there's a good\n  // chance of it being a long-running process or at least have a lot of entries. Therefore,\n  // \"faster\" loop is more important than code readability.\n  storage.cleanup = () => {\n    const keys = Object.keys(storage.data);\n\n    let i = -1;\n    let value: StorageValue;\n    let key: string;\n\n    // Looping forward, as older entries are more likely to be expired\n    // than newer ones.\n    while (++i < keys.length) {\n      key = keys[i]!;\n      value = storage.data[key]!;\n\n      if (value.state === 'empty') {\n        storage.remove(key);\n        continue;\n      }\n\n      // If the value is expired and can't be stale, remove it\n      if (value.state === 'cached' && isExpired(value) && !canStale(value)) {\n        // this storage returns void.\n\n        storage.remove(key);\n      }\n    }\n  };\n\n  if (cleanupInterval) {\n    storage.cleaner = setInterval(storage.cleanup, cleanupInterval);\n  }\n\n  return storage;\n}\n\nexport interface MemoryStorage extends AxiosStorage {\n  data: Record<string, StorageValue>;\n  /** The job responsible to cleaning old entries */\n  cleaner: ReturnType<typeof setInterval>;\n  /** Tries to remove any invalid entry from the memory */\n  cleanup: () => void;\n}\n","import type { Method } from 'axios';\nimport { hash } from 'object-code';\nimport type { CacheRequestConfig } from '../cache/axios.js';\nimport type { KeyGenerator } from './types.js';\n\n// Remove first and last '/' char, if present\nconst SLASHES_REGEX = /^\\/|\\/$/g;\n\n/**\n * Builds an generator that receives a {@link CacheRequestConfig} and returns a value\n * hashed by {@link hash}.\n *\n * The value is hashed into a signed integer when the returned value from the provided\n * generator is not a `string` or a `number`.\n *\n * You can return any type of data structure.\n *\n * @example\n *\n * ```js\n * // This generator will return a hash code.\n * // The code will only be the same if url, method and data are the same.\n * const generator = buildKeyGenerator(({ url, method, data }) => ({\n *   url,\n *   method,\n *   data\n * }));\n * ```\n */\nexport function buildKeyGenerator<R = unknown, D = unknown>(\n  generator: (request: CacheRequestConfig<R, D>) => unknown\n): KeyGenerator<R, D> {\n  return (request) => {\n    if (request.id) {\n      return request.id;\n    }\n\n    const key = generator(request);\n\n    if (typeof key === 'string' || typeof key === 'number') {\n      return `${key}`;\n    }\n\n    return `${hash(key)}`;\n  };\n}\n\nexport const defaultKeyGenerator = buildKeyGenerator(({ baseURL, url, method, params, data }) => {\n  // Remove trailing slashes to avoid generating different keys for the \"same\" final url.\n  if (baseURL !== undefined) {\n    baseURL = baseURL.replace(SLASHES_REGEX, '');\n  } else {\n    // just to have a consistent hash\n    baseURL = '';\n  }\n\n  if (url !== undefined) {\n    url = url.replace(SLASHES_REGEX, '');\n  } else {\n    // just to have a consistent hash\n    url = '';\n  }\n\n  if (method !== undefined) {\n    method = method.toLowerCase() as Method;\n  } else {\n    // just to have a consistent hash\n    method = 'get';\n  }\n\n  return {\n    url: baseURL + (baseURL && url ? '/' : '') + url,\n    params: params,\n    method: method,\n    data: data\n  };\n});\n","export * from './cache/axios.js';\nexport * from './cache/cache.js';\nexport * from './cache/create.js';\nexport * from './header/headers.js';\nexport * from './header/interpreter.js';\nexport * from './header/types.js';\nexport * from './interceptors/build.js';\nexport * from './interceptors/request.js';\nexport * from './interceptors/response.js';\nexport * from './interceptors/util.js';\nexport * from './storage/build.js';\nexport * from './storage/memory.js';\nexport * from './storage/types.js';\nexport * from './storage/web-api.js';\nexport * from './util/cache-predicate.js';\nexport * from './util/key-generator.js';\nexport * from './util/types.js';\nexport * from './util/update-cache.js';\n\n/** @internal */\ndeclare global {\n  /**\n   * **This declaration is erased at compile time.**\n   *\n   * Use to write code that will only be executed at development time.\n   *\n   * @internal\n   */\n  const __ACI_DEV__: boolean;\n}\n\nif (__ACI_DEV__) {\n  console.error(\n    'You are using a development build. Make sure to use the correct build in production\\nhttps://axios-cache-interceptor.js.org/guide/getting-started\\n\\n'\n  );\n}\n","import { buildStorage, canStale, isExpired } from './build.js';\nimport type { StorageValue } from './types.js';\n\n/**\n * Creates a simple storage. You can persist his data by using `sessionStorage` or\n * `localStorage` with it.\n *\n * **ImplNote**: Without polyfill, this storage only works on browser environments.\n *\n * @example\n *\n * ```js\n * const fromLocalStorage = buildWebStorage(localStorage);\n * const fromSessionStorage = buildWebStorage(sessionStorage);\n *\n * const myStorage = new Storage();\n * const fromMyStorage = buildWebStorage(myStorage);\n * ```\n *\n * @param storage The type of web storage to use. localStorage or sessionStorage.\n * @param prefix The prefix to index the storage. Useful to prevent collision between\n *   multiple places using the same storage.\n */\nexport function buildWebStorage(storage: Storage, prefix = 'axios-cache-') {\n  return buildStorage({\n    clear: () => {\n      for (const key in storage) {\n        if (key.startsWith(prefix)) {\n          storage.removeItem(key);\n        }\n      }\n    },\n\n    find: (key) => {\n      const json = storage.getItem(prefix + key);\n      return json ? (JSON.parse(json) as StorageValue) : undefined;\n    },\n\n    remove: (key) => {\n      storage.removeItem(prefix + key);\n    },\n\n    set: (key, value) => {\n      const save = () => storage.setItem(prefix + key, JSON.stringify(value));\n\n      try {\n        return save();\n      } catch {\n        const allValues: [string, StorageValue][] = Object.entries(\n          storage as Record<string, string>\n        )\n          .filter((item) => item[0].startsWith(prefix))\n          .map((item) => [item[0], JSON.parse(item[1]) as StorageValue]);\n\n        // Remove all expired values\n        for (const value of allValues) {\n          if (value[1].state === 'cached' && isExpired(value[1]) && !canStale(value[1])) {\n            storage.removeItem(value[0]);\n          }\n        }\n\n        // Try save again after removing expired values\n        try {\n          return save();\n        } catch {\n          // Storage still full, try removing the oldest value until it can be saved\n\n          // Descending sort by createdAt\n          const sortedItems = allValues.sort(\n            (a, b) => (a[1].createdAt || 0) - (b[1].createdAt || 0)\n          );\n\n          for (const item of sortedItems) {\n            storage.removeItem(item[0]);\n\n            try {\n              return save();\n            } catch {\n              // This key didn't free all the required space\n            }\n          }\n        }\n\n        // Clear the cache for the specified key\n        storage.removeItem(prefix + key);\n      }\n    }\n  });\n}\n","import type { AxiosInstance } from 'axios';\nimport { defaultHeaderInterpreter } from '../header/interpreter.js';\nimport { defaultRequestInterceptor } from '../interceptors/request.js';\nimport { defaultResponseInterceptor } from '../interceptors/response.js';\nimport { isStorage } from '../storage/build.js';\nimport { buildMemoryStorage } from '../storage/memory.js';\nimport { defaultKeyGenerator } from '../util/key-generator.js';\nimport type { AxiosCacheInstance } from './axios.js';\nimport type { CacheInstance, CacheProperties } from './cache.js';\n\nexport interface CacheOptions extends Partial<CacheInstance>, Partial<CacheProperties> {}\n\n/**\n * Apply the caching interceptors for a already created axios instance.\n *\n * ```ts\n * const axios = setupCache(axios, OPTIONS);\n * ```\n *\n * The `setupCache` function receives global options and all [request\n * specifics](https://axios-cache-interceptor.js.org/config/request-specifics) ones too.\n * This way, you can customize the defaults for all requests.\n *\n * @param axios The already created axios instance\n * @param config The config for the caching interceptors\n * @returns The same instance with extended typescript types.\n * @see https://axios-cache-interceptor.js.org/config\n */\nexport function setupCache(axios: AxiosInstance, options: CacheOptions = {}): AxiosCacheInstance {\n  const axiosCache = axios as AxiosCacheInstance;\n\n  if (axiosCache.defaults.cache) {\n    throw new Error('setupCache() should be called only once');\n  }\n\n  axiosCache.location = typeof window === 'undefined' ? 'server' : 'client';\n\n  axiosCache.storage = options.storage || buildMemoryStorage();\n\n  if (!isStorage(axiosCache.storage)) {\n    throw new Error('Use buildStorage() function');\n  }\n\n  axiosCache.waiting = options.waiting || new Map();\n\n  axiosCache.generateKey = options.generateKey || defaultKeyGenerator;\n\n  axiosCache.headerInterpreter = options.headerInterpreter || defaultHeaderInterpreter;\n\n  axiosCache.requestInterceptor =\n    options.requestInterceptor || defaultRequestInterceptor(axiosCache);\n\n  axiosCache.responseInterceptor =\n    options.responseInterceptor || defaultResponseInterceptor(axiosCache);\n\n  axiosCache.debug = options.debug || function noop() {};\n\n  // CacheRequestConfig values\n  axiosCache.defaults.cache = {\n    update: options.update || {},\n\n    ttl: options.ttl ?? 1000 * 60 * 5,\n\n    // Although RFC 7231 also marks POST as cacheable, most users don't know that\n    // and may have problems about why their \"create X\" route not working.\n    methods: options.methods || ['get', 'head'],\n\n    cachePredicate: options.cachePredicate || {\n      // All cacheable status codes defined in RFC 7231\n      statusCheck: (status) => [200, 203, 300, 301, 302, 404, 405, 410, 414, 501].includes(status)\n    },\n\n    etag: options.etag ?? true,\n\n    // This option is going to be ignored by servers when ETag is enabled\n    // Checks strict equality to false to avoid undefined-ish values\n    modifiedSince: options.modifiedSince ?? options.etag === false,\n\n    interpretHeader: options.interpretHeader ?? true,\n\n    cacheTakeover: options.cacheTakeover ?? true,\n\n    staleIfError: options.staleIfError ?? true,\n\n    override: options.override ?? false,\n\n    hydrate: options.hydrate ?? undefined\n  };\n\n  // Apply interceptors\n  axiosCache.interceptors.request.use(\n    axiosCache.requestInterceptor.onFulfilled,\n    axiosCache.requestInterceptor.onRejected\n  );\n  axiosCache.interceptors.response.use(\n    axiosCache.responseInterceptor.onFulfilled,\n    axiosCache.responseInterceptor.onRejected\n  );\n\n  return axiosCache;\n}\n"],"names":["Header","IfModifiedSince","LastModified","IfNoneMatch","CacheControl","Pragma","ETag","Expires","Age","XAxiosCacheEtag","XAxiosCacheLastModified","XAxiosCacheStaleIfError","defaultHeaderInterpreter","headers","location","cacheControl","cc","parse","String","noCache","noStore","immutable","cache","undefined","maxAge","age","Number","stale","maxStale","staleWhileRevalidate","expires","milliseconds","Date","now","_settle","pact","state","value","s","_Pact","prototype","then","onFulfilled","onRejected","result","callback","this","v","e","o","_this","testCachePredicate","response","predicate","_temp3","_statusCheck","_temp2","_responseMatch","_exit3","statusCheck","responseMatch","_temp","containsHeaders","_forOf","Object","entries","_ref","_response$headers$hea","header","Promise","resolve","toLowerCase","_predicate","_result2","status","reject","regexOrStringMatch","matchPattern","configUrl","RegExp","lastIndex","test","includes","createValidateStatus","oldValidate","isMethodIn","requestMethod","methodList","some","method","updateStaleRequest","config","_config$cache","etag","modifiedSince","_cache$data","etagValue","data","createdAt","toUTCString","createCacheResponse","previousCache","cached","statusText","_extends","defaultRequestInterceptor","axios","id","generateKey","debug","msg","defaults","cachePredicate","ignoreUrls","url","_step","_iterator","_createForOfIteratorHelperLoose","done","allowUrls","_step2","matched","_iterator2","_config$headers","_Header$CacheControl","_config$headers2","_Header$Pragma","_config$headers3","_Header$Expires","cacheTakeover","_config$headers2$_Hea","methods","storage","get","_exit","_temp12","_exit2","cachedResponse","_temp10","_result5","transformResponse","adapter","previous","_temp1","_temp0","_result3","deferred","_onFulfilled","_catch","err","_temp8","_onFulfilled2","_temp7","hydrate","waiting","_temp9","_temp6","_temp5","overrideCache","override","_temp11","_temp4","def","set","validateStatus","has","_axios$storage$get","updateCache","cacheUpdater","cacheKey","updater","newValue","remove","defaultResponseInterceptor","rejectResponse","responseId","clearCache","_response$cached","cacheConfig","_testCachePredicate","_result","staleIfError","ttl","cacheResponse","newCache","staleTtl","_ttl","_i","_Object$keys","keys","length","startsWith","interpretHeader","expirationTime","headerInterpreter","update","error","_temp19","_result4","_temp17","_exit6","_temp15","_result6","_temp14","_temp13","staleHeader","_temp16","code","isAxiosError","_temp18","isStorage","obj","hasUniqueIdentifierHeader","mustRevalidate","canStale","Math","abs","isExpired","buildStorage","find","clear","key","_value$state","clone","structuredClone","JSON","stringify","buildMemoryStorage","cloneData","cleanupInterval","maxEntries","cleanup","shift","create","i","cleaner","setInterval","SLASHES_REGEX","buildKeyGenerator","generator","request","hash","defaultKeyGenerator","baseURL","params","replace","console","prefix","removeItem","json","getItem","save","setItem","_unused","allValues","filter","item","map","_unused2","sort","a","b","_unused3","options","_options$ttl","_options$etag","_options$modifiedSinc","_options$interpretHea","_options$cacheTakeove","_options$staleIfError","_options$override","_options$hydrate","axiosCache","Error","window","Map","requestInterceptor","responseInterceptor","interceptors","use"],"mappings":"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"}