<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WMI</title>
  <icon>https://www.webmanajemen.com/logo.png</icon>
  <subtitle>Website Management Indonesia</subtitle>
  <link href="https://www.webmanajemen.com/atom.xml" rel="self"/>
  
  <link href="https://www.webmanajemen.com/"/>
  <updated>2023-08-30T20:09:38.000Z</updated>
  <id>https://www.webmanajemen.com/</id>
  
  <author>
    <name>Dimas Lanjaka</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>fix end of line on github repository</title>
    <link href="https://www.webmanajemen.com/GitHub/fix-end-of-line.html"/>
    <id>https://www.webmanajemen.com/GitHub/fix-end-of-line.html</id>
    <published>2023-08-30T20:06:28.000Z</published>
    <updated>2023-08-30T20:09:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="force-end-of-line-using-LF">force end of line using LF</h2><p>For repos (Git repositories) that were checked out after those global settings were set, everything will be checked out as whatever it is in the repo – hopefully <code>LF</code> (<code>\n</code>).<br>Any <code>CRLF</code> will be converted to just <code>LF</code> on check-in (commit).</p><p>With an existing repo that you have already checked out – that has the correct line endings in the repo but not your working copy – you can run the following commands to fix it:</p><pre><code class="highlight bash">git config --global core.eol lfgit config --global core.autocrlf inputgit <span class="built_in">rm</span> -rf --cached .git reset --hard HEAD</code></pre><p><code>git rm -rf --cached .</code> will delete (<code>rm</code>) recursively (<code>-r</code>) without prompt (<code>-f</code>), all files except those that you have edited (<code>--cached</code>), from the current directory (<code>.</code>). The <code>reset</code> then returns all those files to a state where they have their true line endings (matching what’s in the repo).</p><p>If you need to fix the line endings of files in a repo, I recommend grabbing an editor that will let you do that in bulk like IntelliJ or Sublime Text, but I’m sure any good one will likely support this.</p><h3 id="Put-a-gitattributes-file-in-the-root-of-your-git-repository-having-following-contents">Put a <code>.gitattributes</code> file in the root of your git repository having following contents:</h3><pre><code class="highlight plaintext">* text=auto eol=lf</code></pre><p>Commit the <code>.gitattributes</code></p><h3 id="Optional-tweaks-for-all-IDE">Optional tweaks for all IDE</h3><p>You can also add an <a href="http://EditorConfig.org"><code>.editorconfig</code></a> in the root of your repository to ensure that modern tooling creates new files with the desired line endings.</p><pre><code class="highlight plaintext"># EditorConfig is awesome: http://EditorConfig.org# top-most EditorConfig fileroot = true# Unix-style newlines with a newline ending every file[*]end_of_line = lfinsert_final_newline = true</code></pre>]]></content>
    
    
    <summary type="html">fix end of line on github repository force end of line using LF For repos Git repositories that were checked out after those global settings were set, everything will be checked out as whatever it is </summary>
    
    
    
    <category term="programming" scheme="https://www.webmanajemen.com/categories/programming/"/>
    
    <category term="bash" scheme="https://www.webmanajemen.com/categories/programming/bash/"/>
    
    <category term="github" scheme="https://www.webmanajemen.com/categories/programming/bash/github/"/>
    
    
    <category term="github" scheme="https://www.webmanajemen.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>How to add path folder to github workflows CI</title>
    <link href="https://www.webmanajemen.com/2023/08/how-to-add-paths-to-github-workflows-ci.html"/>
    <id>https://www.webmanajemen.com/2023/08/how-to-add-paths-to-github-workflows-ci.html</id>
    <published>2023-08-27T07:09:03.000Z</published>
    <updated>2023-08-27T07:27:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>Sometimes when you try to use a command and Bash displays the “Command not found” error, it might be because the program is not installed on your system. Correct this by installing a software package containing the command and add them into <strong>PATH</strong> enviroment variable.</p><p>In <strong>Github Workflows</strong> also has ability to add <em>PATH enviroment variable</em>. below is sample codes:</p><h2 id="add-local-bin-to-PATH-CI">add ~/.local/bin to PATH CI</h2><pre><code class="highlight yaml"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">add</span> <span class="string">~/.local/bin</span> <span class="string">to</span> <span class="string">PATH</span>  <span class="attr">shell:</span> <span class="string">bash</span>  <span class="attr">run:</span> <span class="string">|</span>    <span class="string">echo</span> <span class="string">&quot;$&#123;HOME&#125;/.local/bin&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">$GITHUB_PATH</span></code></pre><h2 id="add-CI-PATH-node-modules-bin">add CI PATH ./node_modules/.bin</h2><pre><code class="highlight yaml"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">add</span> <span class="string">./node_modules/.bin</span> <span class="string">to</span> <span class="string">PATH</span>  <span class="attr">shell:</span> <span class="string">bash</span>  <span class="attr">run:</span> <span class="string">|</span>    <span class="string">echo</span> <span class="string">&quot;$&#123;GITHUB_WORKSPACE&#125;/node_modules/.bin&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">$GITHUB_PATH</span></code></pre>]]></content>
    
    
    <summary type="html">How to add path folder to github workflows CI Sometimes when you try to use a command and Bash displays the Command not found error, it might be because the program is not installed on your system. Co</summary>
    
    
    
    <category term="programming" scheme="https://www.webmanajemen.com/categories/programming/"/>
    
    
    <category term="github" scheme="https://www.webmanajemen.com/tags/github/"/>
    
    <category term="bash" scheme="https://www.webmanajemen.com/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>How to make husky support for multiple platform</title>
    <link href="https://www.webmanajemen.com/2023/08/how-to-make-husky-support-for-multiplatform.html"/>
    <id>https://www.webmanajemen.com/2023/08/how-to-make-husky-support-for-multiplatform.html</id>
    <published>2023-08-27T07:09:03.000Z</published>
    <updated>2023-08-27T07:19:52.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="husky-support-for-cygwin">husky support for cygwin</h2><pre><code class="highlight bash"><span class="meta">#!/bin/sh</span>(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># determine current platform shell is Cygwin bash</span><span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*)    basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`    <span class="comment"># make cygwin bin as priority</span>    <span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>    <span class="comment"># add ../node_modules/.bin to PATH enviroment</span>    <span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span> ]; <span class="keyword">then</span>      <span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span>    <span class="keyword">fi</span>    ;;<span class="keyword">esac</span><span class="comment"># initialize husky</span>. <span class="string">&quot;<span class="subst">$(dirname <span class="string">&quot;<span class="variable">$0</span>&quot;</span>)</span>/_/husky.sh&quot;</span><span class="comment">## YOUR CODE HERE</span></code></pre><h2 id="husky-support-for-windows">husky support for windows</h2><pre><code class="highlight bash"><span class="meta">#!/bin/sh</span><span class="comment"># export ../node_modules/.bin</span><span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span> ]; <span class="keyword">then</span>  <span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span><span class="keyword">fi</span><span class="comment"># initialize husky</span>. <span class="string">&quot;<span class="subst">$(dirname <span class="string">&quot;<span class="variable">$0</span>&quot;</span>)</span>/_/husky.sh&quot;</span><span class="comment">## YOUR CODE HERE</span></code></pre><h2 id="husky-support-for-WSL-2">husky support for WSL 2</h2><pre><code class="highlight bash"><span class="comment"># determine current platform shell is WSL bash</span>IS_WSL=<span class="string">&quot;false&quot;</span><span class="keyword">if</span> [ -x <span class="string">&quot;<span class="subst">$(command -v wslpath)</span>&quot;</span> ]; <span class="keyword">then</span>  <span class="keyword">if</span> [ `<span class="built_in">uname</span>` = <span class="string">&quot;Linux&quot;</span> ] &amp;&amp; <span class="built_in">type</span> wslpath &amp;&gt;/dev/null ; <span class="keyword">then</span>    IS_WSL=<span class="string">&quot;true&quot;</span>  <span class="keyword">fi</span><span class="keyword">fi</span><span class="comment"># declare functions</span><span class="function"><span class="title">no_node_dir</span></span>() &#123;  <span class="comment"># if this didn&#x27;t work, then everything else below will fail</span>  <span class="built_in">echo</span> <span class="string">&quot;Could not determine Node.js install directory&quot;</span> &gt;&amp;2  <span class="built_in">exit</span> 1&#125;<span class="comment"># determine node path</span><span class="comment">## determine when this package installed in global</span>NODE_EXE=<span class="string">&quot;<span class="variable">$basedir</span>/node.exe&quot;</span><span class="keyword">if</span> ! [ -x <span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> ]; <span class="keyword">then</span>  NODE_EXE=<span class="string">&quot;<span class="variable">$basedir</span>/node&quot;</span><span class="keyword">fi</span><span class="comment">## fallback to default node</span><span class="keyword">if</span> ! [ -x <span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> ]; <span class="keyword">then</span>  NODE_EXE=node<span class="keyword">fi</span><span class="comment"># determine npx path</span><span class="comment">## this path is passed to node.exe, so it needs to match whatever</span><span class="comment">## kind of paths Node.js thinks it&#x27;s using, typically win32 paths.</span>CLI_BASEDIR=<span class="string">&quot;<span class="subst">$(<span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> -p &#x27;require(<span class="string">&quot;path&quot;</span>)</span>.dirname(process.execPath)&#x27; 2&gt; /dev/null)&quot;</span><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span>  <span class="comment"># this fails under WSL 1 so add an additional message. we also suppress stderr above</span>  <span class="comment"># because the actual error raised is not helpful. in WSL 1 node.exe cannot handle</span>  <span class="comment"># output redirection properly. See https://github.com/microsoft/WSL/issues/2370</span>  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$IS_WSL</span>&quot;</span> == <span class="string">&quot;true&quot;</span> ]; <span class="keyword">then</span>    <span class="built_in">echo</span> <span class="string">&quot;WSL 1 is not supported. Please upgrade to WSL 2 or above.&quot;</span> &gt;&amp;2  <span class="keyword">fi</span>  no_node_dir<span class="keyword">fi</span>NPM_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/node_modules/npm/bin/npm-cli.js&quot;</span><span class="comment">## check is linux symlink</span><span class="comment">## $NPM_CLI_JS on windows found but not in linux</span><span class="comment">## global node_modules located in &lt;node bin&gt;/../lib</span><span class="keyword">if</span> ! [ -f <span class="string">&quot;<span class="variable">$NPM_CLI_JS</span>&quot;</span> ]; <span class="keyword">then</span>  NPM_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/../lib/node_modules/npm/bin/npm-cli.js&quot;</span><span class="keyword">fi</span>NPX_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/node_modules/npm/bin/npx-cli.js&quot;</span><span class="keyword">if</span> ! [ -f <span class="string">&quot;<span class="variable">$NPX_CLI_JS</span>&quot;</span> ]; <span class="keyword">then</span>  NPX_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/../lib/node_modules/npm/bin/npx-cli.js&quot;</span><span class="keyword">fi</span><span class="comment">## get node home</span>NODE_HOME=`<span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> <span class="string">&quot;<span class="variable">$NPM_CLI_JS</span>&quot;</span> prefix -g`<span class="comment">## throw when not found (node not installed correctly)</span><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span>  no_node_dir<span class="keyword">fi</span><span class="comment">## a path that will fail -f test on any posix bash</span>NPX_WSL_PATH=<span class="string">&quot;/..&quot;</span><span class="comment">## WSL can run Windows binaries, so we have to give it the win32 path</span><span class="comment">## however, WSL bash tests against posix paths, so we need to construct that</span><span class="comment">## to know if npm is installed globally.</span><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$IS_WSL</span>&quot;</span> == <span class="string">&quot;true&quot;</span> ]; <span class="keyword">then</span>  NPX_WSL_PATH=`wslpath <span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span>`<span class="keyword">fi</span><span class="comment">## overriding $NPX_CLI_JS on WSL</span><span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span> ] || [ -f <span class="string">&quot;<span class="variable">$NPX_WSL_PATH</span>&quot;</span> ]; <span class="keyword">then</span>  NPX_CLI_JS=<span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span><span class="keyword">fi</span><span class="comment">## YOUR CODES HERE</span></code></pre><h2 id="husky-support-for-multiplatform-ALL-IN-ONE">husky support for multiplatform (ALL IN ONE)</h2><p>full support for multiplatform example run <code>npx lint-staged</code></p><pre><code class="highlight bash"><span class="meta">#!/bin/sh</span>(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># absolute path script directory</span>SCRIPT_DIR=$(<span class="built_in">cd</span> -- <span class="string">&quot;<span class="subst">$( dirname -- <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">pwd</span>)<span class="comment"># determine current platform shell is Cygwin bash</span><span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*)    basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`    <span class="comment"># make cygwin bin as priority</span>    <span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>    ;;<span class="keyword">esac</span><span class="comment"># add ../node_modules/.bin to PATH enviroment</span><span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span> ]; <span class="keyword">then</span>  <span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span><span class="keyword">fi</span><span class="comment"># determine current platform shell is WSL bash</span>IS_WSL=<span class="string">&quot;false&quot;</span><span class="keyword">if</span> [ -x <span class="string">&quot;<span class="subst">$(command -v wslpath)</span>&quot;</span> ]; <span class="keyword">then</span>  <span class="keyword">if</span> [ `<span class="built_in">uname</span>` = <span class="string">&quot;Linux&quot;</span> ] &amp;&amp; <span class="built_in">type</span> wslpath &amp;&gt;/dev/null ; <span class="keyword">then</span>    IS_WSL=<span class="string">&quot;true&quot;</span>  <span class="keyword">fi</span><span class="keyword">fi</span><span class="comment"># initialize husky</span>. <span class="string">&quot;<span class="subst">$(dirname <span class="string">&quot;<span class="variable">$0</span>&quot;</span>)</span>/_/husky.sh&quot;</span><span class="comment"># declare functions</span><span class="function"><span class="title">no_node_dir</span></span>() &#123;  <span class="comment"># if this didn&#x27;t work, then everything else below will fail</span>  <span class="built_in">echo</span> <span class="string">&quot;Could not determine Node.js install directory&quot;</span> &gt;&amp;2  <span class="built_in">exit</span> 1&#125;<span class="comment"># determine node path</span><span class="comment">## determine when this package installed in global</span>NODE_EXE=<span class="string">&quot;<span class="variable">$basedir</span>/node.exe&quot;</span><span class="keyword">if</span> ! [ -x <span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> ]; <span class="keyword">then</span>  NODE_EXE=<span class="string">&quot;<span class="variable">$basedir</span>/node&quot;</span><span class="keyword">fi</span><span class="comment">## fallback to default node</span><span class="keyword">if</span> ! [ -x <span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> ]; <span class="keyword">then</span>  NODE_EXE=node<span class="keyword">fi</span><span class="comment"># determine npx path</span><span class="comment">## this path is passed to node.exe, so it needs to match whatever</span><span class="comment">## kind of paths Node.js thinks it&#x27;s using, typically win32 paths.</span>CLI_BASEDIR=<span class="string">&quot;<span class="subst">$(<span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> -p &#x27;require(<span class="string">&quot;path&quot;</span>)</span>.dirname(process.execPath)&#x27; 2&gt; /dev/null)&quot;</span><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span>  <span class="comment"># this fails under WSL 1 so add an additional message. we also suppress stderr above</span>  <span class="comment"># because the actual error raised is not helpful. in WSL 1 node.exe cannot handle</span>  <span class="comment"># output redirection properly. See https://github.com/microsoft/WSL/issues/2370</span>  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$IS_WSL</span>&quot;</span> == <span class="string">&quot;true&quot;</span> ]; <span class="keyword">then</span>    <span class="built_in">echo</span> <span class="string">&quot;WSL 1 is not supported. Please upgrade to WSL 2 or above.&quot;</span> &gt;&amp;2  <span class="keyword">fi</span>  no_node_dir<span class="keyword">fi</span>NPM_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/node_modules/npm/bin/npm-cli.js&quot;</span><span class="comment">## check is linux symlink</span><span class="comment">## $NPM_CLI_JS on windows found but not in linux</span><span class="comment">## global node_modules located in &lt;node bin&gt;/../lib</span><span class="keyword">if</span> ! [ -f <span class="string">&quot;<span class="variable">$NPM_CLI_JS</span>&quot;</span> ]; <span class="keyword">then</span>  NPM_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/../lib/node_modules/npm/bin/npm-cli.js&quot;</span><span class="keyword">fi</span>NPX_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/node_modules/npm/bin/npx-cli.js&quot;</span><span class="keyword">if</span> ! [ -f <span class="string">&quot;<span class="variable">$NPX_CLI_JS</span>&quot;</span> ]; <span class="keyword">then</span>  NPX_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/../lib/node_modules/npm/bin/npx-cli.js&quot;</span><span class="keyword">fi</span><span class="comment">## get node home</span>NODE_HOME=`<span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> <span class="string">&quot;<span class="variable">$NPM_CLI_JS</span>&quot;</span> prefix -g`<span class="comment">## throw when not found (node not installed correctly)</span><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span>  no_node_dir<span class="keyword">fi</span><span class="comment"># fix WSL</span>NODE_HOME_NPX_CLI_JS=<span class="string">&quot;<span class="variable">$NODE_HOME</span>/node_modules/npm/bin/npx-cli.js&quot;</span><span class="comment">## a path that will fail -f test on any posix bash</span>NPX_WSL_PATH=<span class="string">&quot;/..&quot;</span><span class="comment">## WSL can run Windows binaries, so we have to give it the win32 path</span><span class="comment">## however, WSL bash tests against posix paths, so we need to construct that</span><span class="comment">## to know if npm is installed globally.</span><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$IS_WSL</span>&quot;</span> == <span class="string">&quot;true&quot;</span> ]; <span class="keyword">then</span>  NPX_WSL_PATH=`wslpath <span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span>`<span class="keyword">fi</span><span class="comment">## overriding $NPX_CLI_JS on WSL</span><span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span> ] || [ -f <span class="string">&quot;<span class="variable">$NPX_WSL_PATH</span>&quot;</span> ]; <span class="keyword">then</span>  NPX_CLI_JS=<span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span><span class="keyword">fi</span><span class="comment">## SAMPLE CODES</span><span class="comment">### npx lint-staged</span><span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> <span class="string">&quot;<span class="variable">$NPX_CLI_JS</span>&quot;</span> lint-staged</code></pre>]]></content>
    
    
    <summary type="html">husky support for linux, husky support for windows, husky support for cygwin, husky support for WSL</summary>
    
    
    
    <category term="programming" scheme="https://www.webmanajemen.com/categories/programming/"/>
    
    
    <category term="bash" scheme="https://www.webmanajemen.com/tags/bash/"/>
    
    <category term="javascript" scheme="https://www.webmanajemen.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>How to add path folder to github workflows CI</title>
    <link href="https://www.webmanajemen.com/2023/08/how-to-add-paths-to-github-workflows-ci.html"/>
    <id>https://www.webmanajemen.com/2023/08/how-to-add-paths-to-github-workflows-ci.html</id>
    <published>2023-08-27T07:09:03.000Z</published>
    <updated>2023-08-27T07:27:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>Sometimes when you try to use a command and Bash displays the “Command not found” error, it might be because the program is not installed on your system. Correct this by installing a software package containing the command and add them into <strong>PATH</strong> enviroment variable.</p><p>In <strong>Github Workflows</strong> also has ability to add <em>PATH enviroment variable</em>. below is sample codes:</p><h2 id="add-local-bin-to-PATH-CI">add ~/.local/bin to PATH CI</h2><pre><code class="highlight yaml"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">add</span> <span class="string">~/.local/bin</span> <span class="string">to</span> <span class="string">PATH</span>  <span class="attr">shell:</span> <span class="string">bash</span>  <span class="attr">run:</span> <span class="string">|</span>    <span class="string">echo</span> <span class="string">&quot;$&#123;HOME&#125;/.local/bin&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">$GITHUB_PATH</span></code></pre><h2 id="add-CI-PATH-node-modules-bin">add CI PATH ./node_modules/.bin</h2><pre><code class="highlight yaml"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">add</span> <span class="string">./node_modules/.bin</span> <span class="string">to</span> <span class="string">PATH</span>  <span class="attr">shell:</span> <span class="string">bash</span>  <span class="attr">run:</span> <span class="string">|</span>    <span class="string">echo</span> <span class="string">&quot;$&#123;GITHUB_WORKSPACE&#125;/node_modules/.bin&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">$GITHUB_PATH</span></code></pre>]]></content>
    
    
    <summary type="html">How to add path folder to github workflows CI Sometimes when you try to use a command and Bash displays the Command not found error, it might be because the program is not installed on your system. Correct this by installing a software package containing the command and add them into PATH envirome</summary>
    
    
    
    <category term="programming" scheme="https://www.webmanajemen.com/categories/programming/"/>
    
    
    <category term="github" scheme="https://www.webmanajemen.com/tags/github/"/>
    
    <category term="bash" scheme="https://www.webmanajemen.com/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>How to make husky support for multiple platform</title>
    <link href="https://www.webmanajemen.com/2023/08/how-to-make-husky-support-for-multiplatform.html"/>
    <id>https://www.webmanajemen.com/2023/08/how-to-make-husky-support-for-multiplatform.html</id>
    <published>2023-08-27T07:09:03.000Z</published>
    <updated>2023-08-27T07:19:52.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="husky-support-for-cygwin">husky support for cygwin</h2><pre><code class="highlight bash"><span class="meta">#!/bin/sh</span>(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># determine current platform shell is Cygwin bash</span><span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*)    basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`    <span class="comment"># make cygwin bin as priority</span>    <span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>    <span class="comment"># add ../node_modules/.bin to PATH enviroment</span>    <span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span> ]; <span class="keyword">then</span>      <span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span>    <span class="keyword">fi</span>    ;;<span class="keyword">esac</span><span class="comment"># initialize husky</span>. <span class="string">&quot;<span class="subst">$(dirname <span class="string">&quot;<span class="variable">$0</span>&quot;</span>)</span>/_/husky.sh&quot;</span><span class="comment">## YOUR CODE HERE</span></code></pre><h2 id="husky-support-for-windows">husky support for windows</h2><pre><code class="highlight bash"><span class="meta">#!/bin/sh</span><span class="comment"># export ../node_modules/.bin</span><span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span> ]; <span class="keyword">then</span>  <span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span><span class="keyword">fi</span><span class="comment"># initialize husky</span>. <span class="string">&quot;<span class="subst">$(dirname <span class="string">&quot;<span class="variable">$0</span>&quot;</span>)</span>/_/husky.sh&quot;</span><span class="comment">## YOUR CODE HERE</span></code></pre><h2 id="husky-support-for-WSL-2">husky support for WSL 2</h2><pre><code class="highlight bash"><span class="comment"># determine current platform shell is WSL bash</span>IS_WSL=<span class="string">&quot;false&quot;</span><span class="keyword">if</span> [ -x <span class="string">&quot;<span class="subst">$(command -v wslpath)</span>&quot;</span> ]; <span class="keyword">then</span>  <span class="keyword">if</span> [ `<span class="built_in">uname</span>` = <span class="string">&quot;Linux&quot;</span> ] &amp;&amp; <span class="built_in">type</span> wslpath &amp;&gt;/dev/null ; <span class="keyword">then</span>    IS_WSL=<span class="string">&quot;true&quot;</span>  <span class="keyword">fi</span><span class="keyword">fi</span><span class="comment"># declare functions</span><span class="function"><span class="title">no_node_dir</span></span>() &#123;  <span class="comment"># if this didn&#x27;t work, then everything else below will fail</span>  <span class="built_in">echo</span> <span class="string">&quot;Could not determine Node.js install directory&quot;</span> &gt;&amp;2  <span class="built_in">exit</span> 1&#125;<span class="comment"># determine node path</span><span class="comment">## determine when this package installed in global</span>NODE_EXE=<span class="string">&quot;<span class="variable">$basedir</span>/node.exe&quot;</span><span class="keyword">if</span> ! [ -x <span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> ]; <span class="keyword">then</span>  NODE_EXE=<span class="string">&quot;<span class="variable">$basedir</span>/node&quot;</span><span class="keyword">fi</span><span class="comment">## fallback to default node</span><span class="keyword">if</span> ! [ -x <span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> ]; <span class="keyword">then</span>  NODE_EXE=node<span class="keyword">fi</span><span class="comment"># determine npx path</span><span class="comment">## this path is passed to node.exe, so it needs to match whatever</span><span class="comment">## kind of paths Node.js thinks it&#x27;s using, typically win32 paths.</span>CLI_BASEDIR=<span class="string">&quot;<span class="subst">$(<span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> -p &#x27;require(<span class="string">&quot;path&quot;</span>)</span>.dirname(process.execPath)&#x27; 2&gt; /dev/null)&quot;</span><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span>  <span class="comment"># this fails under WSL 1 so add an additional message. we also suppress stderr above</span>  <span class="comment"># because the actual error raised is not helpful. in WSL 1 node.exe cannot handle</span>  <span class="comment"># output redirection properly. See https://github.com/microsoft/WSL/issues/2370</span>  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$IS_WSL</span>&quot;</span> == <span class="string">&quot;true&quot;</span> ]; <span class="keyword">then</span>    <span class="built_in">echo</span> <span class="string">&quot;WSL 1 is not supported. Please upgrade to WSL 2 or above.&quot;</span> &gt;&amp;2  <span class="keyword">fi</span>  no_node_dir<span class="keyword">fi</span>NPM_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/node_modules/npm/bin/npm-cli.js&quot;</span><span class="comment">## check is linux symlink</span><span class="comment">## $NPM_CLI_JS on windows found but not in linux</span><span class="comment">## global node_modules located in &lt;node bin&gt;/../lib</span><span class="keyword">if</span> ! [ -f <span class="string">&quot;<span class="variable">$NPM_CLI_JS</span>&quot;</span> ]; <span class="keyword">then</span>  NPM_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/../lib/node_modules/npm/bin/npm-cli.js&quot;</span><span class="keyword">fi</span>NPX_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/node_modules/npm/bin/npx-cli.js&quot;</span><span class="keyword">if</span> ! [ -f <span class="string">&quot;<span class="variable">$NPX_CLI_JS</span>&quot;</span> ]; <span class="keyword">then</span>  NPX_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/../lib/node_modules/npm/bin/npx-cli.js&quot;</span><span class="keyword">fi</span><span class="comment">## get node home</span>NODE_HOME=`<span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> <span class="string">&quot;<span class="variable">$NPM_CLI_JS</span>&quot;</span> prefix -g`<span class="comment">## throw when not found (node not installed correctly)</span><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span>  no_node_dir<span class="keyword">fi</span><span class="comment">## a path that will fail -f test on any posix bash</span>NPX_WSL_PATH=<span class="string">&quot;/..&quot;</span><span class="comment">## WSL can run Windows binaries, so we have to give it the win32 path</span><span class="comment">## however, WSL bash tests against posix paths, so we need to construct that</span><span class="comment">## to know if npm is installed globally.</span><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$IS_WSL</span>&quot;</span> == <span class="string">&quot;true&quot;</span> ]; <span class="keyword">then</span>  NPX_WSL_PATH=`wslpath <span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span>`<span class="keyword">fi</span><span class="comment">## overriding $NPX_CLI_JS on WSL</span><span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span> ] || [ -f <span class="string">&quot;<span class="variable">$NPX_WSL_PATH</span>&quot;</span> ]; <span class="keyword">then</span>  NPX_CLI_JS=<span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span><span class="keyword">fi</span><span class="comment">## YOUR CODES HERE</span></code></pre><h2 id="husky-support-for-multiplatform-ALL-IN-ONE">husky support for multiplatform (ALL IN ONE)</h2><p>full support for multiplatform example run <code>npx lint-staged</code></p><pre><code class="highlight bash"><span class="meta">#!/bin/sh</span>(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># absolute path script directory</span>SCRIPT_DIR=$(<span class="built_in">cd</span> -- <span class="string">&quot;<span class="subst">$( dirname -- <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">pwd</span>)<span class="comment"># determine current platform shell is Cygwin bash</span><span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*)    basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`    <span class="comment"># make cygwin bin as priority</span>    <span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>    ;;<span class="keyword">esac</span><span class="comment"># add ../node_modules/.bin to PATH enviroment</span><span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span> ]; <span class="keyword">then</span>  <span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span><span class="keyword">fi</span><span class="comment"># determine current platform shell is WSL bash</span>IS_WSL=<span class="string">&quot;false&quot;</span><span class="keyword">if</span> [ -x <span class="string">&quot;<span class="subst">$(command -v wslpath)</span>&quot;</span> ]; <span class="keyword">then</span>  <span class="keyword">if</span> [ `<span class="built_in">uname</span>` = <span class="string">&quot;Linux&quot;</span> ] &amp;&amp; <span class="built_in">type</span> wslpath &amp;&gt;/dev/null ; <span class="keyword">then</span>    IS_WSL=<span class="string">&quot;true&quot;</span>  <span class="keyword">fi</span><span class="keyword">fi</span><span class="comment"># initialize husky</span>. <span class="string">&quot;<span class="subst">$(dirname <span class="string">&quot;<span class="variable">$0</span>&quot;</span>)</span>/_/husky.sh&quot;</span><span class="comment"># declare functions</span><span class="function"><span class="title">no_node_dir</span></span>() &#123;  <span class="comment"># if this didn&#x27;t work, then everything else below will fail</span>  <span class="built_in">echo</span> <span class="string">&quot;Could not determine Node.js install directory&quot;</span> &gt;&amp;2  <span class="built_in">exit</span> 1&#125;<span class="comment"># determine node path</span><span class="comment">## determine when this package installed in global</span>NODE_EXE=<span class="string">&quot;<span class="variable">$basedir</span>/node.exe&quot;</span><span class="keyword">if</span> ! [ -x <span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> ]; <span class="keyword">then</span>  NODE_EXE=<span class="string">&quot;<span class="variable">$basedir</span>/node&quot;</span><span class="keyword">fi</span><span class="comment">## fallback to default node</span><span class="keyword">if</span> ! [ -x <span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> ]; <span class="keyword">then</span>  NODE_EXE=node<span class="keyword">fi</span><span class="comment"># determine npx path</span><span class="comment">## this path is passed to node.exe, so it needs to match whatever</span><span class="comment">## kind of paths Node.js thinks it&#x27;s using, typically win32 paths.</span>CLI_BASEDIR=<span class="string">&quot;<span class="subst">$(<span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> -p &#x27;require(<span class="string">&quot;path&quot;</span>)</span>.dirname(process.execPath)&#x27; 2&gt; /dev/null)&quot;</span><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span>  <span class="comment"># this fails under WSL 1 so add an additional message. we also suppress stderr above</span>  <span class="comment"># because the actual error raised is not helpful. in WSL 1 node.exe cannot handle</span>  <span class="comment"># output redirection properly. See https://github.com/microsoft/WSL/issues/2370</span>  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$IS_WSL</span>&quot;</span> == <span class="string">&quot;true&quot;</span> ]; <span class="keyword">then</span>    <span class="built_in">echo</span> <span class="string">&quot;WSL 1 is not supported. Please upgrade to WSL 2 or above.&quot;</span> &gt;&amp;2  <span class="keyword">fi</span>  no_node_dir<span class="keyword">fi</span>NPM_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/node_modules/npm/bin/npm-cli.js&quot;</span><span class="comment">## check is linux symlink</span><span class="comment">## $NPM_CLI_JS on windows found but not in linux</span><span class="comment">## global node_modules located in &lt;node bin&gt;/../lib</span><span class="keyword">if</span> ! [ -f <span class="string">&quot;<span class="variable">$NPM_CLI_JS</span>&quot;</span> ]; <span class="keyword">then</span>  NPM_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/../lib/node_modules/npm/bin/npm-cli.js&quot;</span><span class="keyword">fi</span>NPX_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/node_modules/npm/bin/npx-cli.js&quot;</span><span class="keyword">if</span> ! [ -f <span class="string">&quot;<span class="variable">$NPX_CLI_JS</span>&quot;</span> ]; <span class="keyword">then</span>  NPX_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/../lib/node_modules/npm/bin/npx-cli.js&quot;</span><span class="keyword">fi</span><span class="comment">## get node home</span>NODE_HOME=`<span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> <span class="string">&quot;<span class="variable">$NPM_CLI_JS</span>&quot;</span> prefix -g`<span class="comment">## throw when not found (node not installed correctly)</span><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span>  no_node_dir<span class="keyword">fi</span><span class="comment"># fix WSL</span>NODE_HOME_NPX_CLI_JS=<span class="string">&quot;<span class="variable">$NODE_HOME</span>/node_modules/npm/bin/npx-cli.js&quot;</span><span class="comment">## a path that will fail -f test on any posix bash</span>NPX_WSL_PATH=<span class="string">&quot;/..&quot;</span><span class="comment">## WSL can run Windows binaries, so we have to give it the win32 path</span><span class="comment">## however, WSL bash tests against posix paths, so we need to construct that</span><span class="comment">## to know if npm is installed globally.</span><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$IS_WSL</span>&quot;</span> == <span class="string">&quot;true&quot;</span> ]; <span class="keyword">then</span>  NPX_WSL_PATH=`wslpath <span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span>`<span class="keyword">fi</span><span class="comment">## overriding $NPX_CLI_JS on WSL</span><span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span> ] || [ -f <span class="string">&quot;<span class="variable">$NPX_WSL_PATH</span>&quot;</span> ]; <span class="keyword">then</span>  NPX_CLI_JS=<span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span><span class="keyword">fi</span><span class="comment">## SAMPLE CODES</span><span class="comment">### npx lint-staged</span><span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> <span class="string">&quot;<span class="variable">$NPX_CLI_JS</span>&quot;</span> lint-staged</code></pre>]]></content>
    
    
    <summary type="html">husky support for linux, husky support for windows, husky support for cygwin, husky support for WSL</summary>
    
    
    
    <category term="programming" scheme="https://www.webmanajemen.com/categories/programming/"/>
    
    
    <category term="bash" scheme="https://www.webmanajemen.com/tags/bash/"/>
    
    <category term="javascript" scheme="https://www.webmanajemen.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>How to remove github workflows logs</title>
    <link href="https://www.webmanajemen.com/GitHub/how-to-remove-github-workflows-logs.html"/>
    <id>https://www.webmanajemen.com/GitHub/how-to-remove-github-workflows-logs.html</id>
    <published>2023-08-27T05:50:11.000Z</published>
    <updated>2023-08-27T05:58:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>each workflow runs creating huge logs in github actions. sometimes you need to clean them to prune repository sizes. below is tips &amp; tricks to delete github workflows logs.</p><h2 id="open-repository">open repository</h2><p>open your repository folder or edit on github directly</p><h2 id="create-new-workflow">create new workflow</h2><p>create new workflow <code>.github/workflows/clean-logs.yml</code> and write below scripts</p><pre><code class="highlight yaml"><span class="attr">name:</span> <span class="string">Delete</span> <span class="string">old</span> <span class="string">workflow</span> <span class="string">runs</span><span class="attr">on:</span>  <span class="attr">workflow_dispatch:</span>    <span class="attr">inputs:</span>      <span class="attr">days:</span>        <span class="attr">description:</span> <span class="string">&#x27;Number of days.&#x27;</span>        <span class="attr">required:</span> <span class="literal">true</span>        <span class="attr">default:</span> <span class="number">30</span>      <span class="attr">minimum_runs:</span>        <span class="attr">description:</span> <span class="string">&#x27;The minimum runs to keep for each workflow.&#x27;</span>        <span class="attr">required:</span> <span class="literal">true</span>        <span class="attr">default:</span> <span class="number">6</span>      <span class="attr">delete_workflow_pattern:</span>        <span class="attr">description:</span> <span class="string">&#x27;The name or filename of the workflow. if not set then it will target all workflows.&#x27;</span>        <span class="attr">required:</span> <span class="literal">false</span>      <span class="attr">delete_workflow_by_state_pattern:</span>        <span class="attr">description:</span> <span class="string">&#x27;Remove workflow by state: active, deleted, disabled_fork, disabled_inactivity, disabled_manually&#x27;</span>        <span class="attr">required:</span> <span class="literal">true</span>        <span class="attr">default:</span> <span class="string">&quot;All&quot;</span>        <span class="attr">type:</span> <span class="string">choice</span>        <span class="attr">options:</span>          <span class="bullet">-</span> <span class="string">&quot;All&quot;</span>          <span class="bullet">-</span> <span class="string">active</span>          <span class="bullet">-</span> <span class="string">deleted</span>          <span class="bullet">-</span> <span class="string">disabled_inactivity</span>          <span class="bullet">-</span> <span class="string">disabled_manually</span>      <span class="attr">delete_run_by_conclusion_pattern:</span>        <span class="attr">description:</span> <span class="string">&#x27;Remove workflow by conclusion: action_required, cancelled, failure, skipped, success&#x27;</span>        <span class="attr">required:</span> <span class="literal">true</span>        <span class="attr">default:</span> <span class="string">&quot;All&quot;</span>        <span class="attr">type:</span> <span class="string">choice</span>        <span class="attr">options:</span>          <span class="bullet">-</span> <span class="string">&quot;All&quot;</span>          <span class="bullet">-</span> <span class="string">action_required</span>          <span class="bullet">-</span> <span class="string">cancelled</span>          <span class="bullet">-</span> <span class="string">failure</span>          <span class="bullet">-</span> <span class="string">skipped</span>          <span class="bullet">-</span> <span class="string">success</span>      <span class="attr">dry_run:</span>        <span class="attr">description:</span> <span class="string">&#x27;Only log actions, do not perform any delete operations.&#x27;</span>        <span class="attr">required:</span> <span class="literal">false</span><span class="attr">jobs:</span>  <span class="attr">del_runs:</span>    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span>    <span class="attr">steps:</span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Delete</span> <span class="string">workflow</span> <span class="string">runs</span>        <span class="attr">uses:</span> <span class="string">Mattraks/delete-workflow-runs@v2</span>        <span class="attr">with:</span>          <span class="attr">token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ACCESS_TOKEN</span> <span class="string">&#125;&#125;</span>          <span class="attr">repository:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.repository</span> <span class="string">&#125;&#125;</span>          <span class="attr">retain_days:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.days</span> <span class="string">&#125;&#125;</span>          <span class="attr">keep_minimum_runs:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.minimum_runs</span> <span class="string">&#125;&#125;</span>          <span class="attr">delete_workflow_pattern:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.delete_workflow_pattern</span> <span class="string">&#125;&#125;</span>          <span class="attr">delete_workflow_by_state_pattern:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.delete_workflow_by_state_pattern</span> <span class="string">&#125;&#125;</span>          <span class="attr">delete_run_by_conclusion_pattern:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.delete_run_by_conclusion_pattern</span> <span class="string">&#125;&#125;</span>          <span class="attr">dry_run:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.dry_run</span> <span class="string">&#125;&#125;</span></code></pre><h2 id="open-repository-actions">open repository actions</h2><p><a href="https://github.com/USERNAME/REPOSITORY/actions">https://github.com/USERNAME/REPOSITORY/actions</a></p><p><img src="https://github.com/dimaslanjaka/source-posts/assets/12471057/58b318de-210b-41fa-8ffc-3f21896b1982" alt=""></p><h2 id="select-delete-old-workflows-run-logs">select delete old workflows run logs</h2><p><img src="https://github.com/dimaslanjaka/source-posts/assets/12471057/7ecef604-2a0c-4032-96bc-3f1aed734248" alt=""></p><h2 id="click-run-workflow">click run workflow</h2><p><img src="https://github.com/dimaslanjaka/source-posts/assets/12471057/13815193-c6db-4538-b6da-31a2b2022316" alt=""><br><img src="https://github.com/dimaslanjaka/source-posts/assets/12471057/0728f88f-6ae5-4174-9bc9-ae6022ddaff8" alt=""></p><h2 id="wait-until-finish">wait until finish</h2><p>after finished your workflows logs should be emptied/cleaned</p><h2 id="conclusion">conclusion</h2><p>below is the result logs of workflows cleaned<br><img src="https://github.com/dimaslanjaka/source-posts/assets/12471057/c5362839-c4fd-49e4-9908-71eaa1d5b90d" alt=""></p>]]></content>
    
    
    <summary type="html">How to remove github workflows logs each workflow runs creating huge logs in github actions. sometimes you need to clean them to prune repository sizes. below is tips tricks to delete github workflows</summary>
    
    
    
    <category term="programming" scheme="https://www.webmanajemen.com/categories/programming/"/>
    
    
    <category term="github" scheme="https://www.webmanajemen.com/tags/github/"/>
    
    <category term="workflows" scheme="https://www.webmanajemen.com/tags/workflows/"/>
    
    <category term="tips &amp; tricks" scheme="https://www.webmanajemen.com/tags/tips-tricks/"/>
    
  </entry>
  
  <entry>
    <title>How to remove github workflows logs</title>
    <link href="https://www.webmanajemen.com/GitHub/how-to-remove-github-workflows-logs.html"/>
    <id>https://www.webmanajemen.com/GitHub/how-to-remove-github-workflows-logs.html</id>
    <published>2023-08-27T05:50:11.000Z</published>
    <updated>2023-08-27T05:58:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>each workflow runs creating huge logs in github actions. sometimes you need to clean them to prune repository sizes. below is tips &amp; tricks to delete github workflows logs.</p><h2 id="open-repository">open repository</h2><p>open your repository folder or edit on github directly</p><h2 id="create-new-workflow">create new workflow</h2><p>create new workflow <code>.github/workflows/clean-logs.yml</code> and write below scripts</p><pre><code class="highlight yaml"><span class="attr">name:</span> <span class="string">Delete</span> <span class="string">old</span> <span class="string">workflow</span> <span class="string">runs</span><span class="attr">on:</span>  <span class="attr">workflow_dispatch:</span>    <span class="attr">inputs:</span>      <span class="attr">days:</span>        <span class="attr">description:</span> <span class="string">&#x27;Number of days.&#x27;</span>        <span class="attr">required:</span> <span class="literal">true</span>        <span class="attr">default:</span> <span class="number">30</span>      <span class="attr">minimum_runs:</span>        <span class="attr">description:</span> <span class="string">&#x27;The minimum runs to keep for each workflow.&#x27;</span>        <span class="attr">required:</span> <span class="literal">true</span>        <span class="attr">default:</span> <span class="number">6</span>      <span class="attr">delete_workflow_pattern:</span>        <span class="attr">description:</span> <span class="string">&#x27;The name or filename of the workflow. if not set then it will target all workflows.&#x27;</span>        <span class="attr">required:</span> <span class="literal">false</span>      <span class="attr">delete_workflow_by_state_pattern:</span>        <span class="attr">description:</span> <span class="string">&#x27;Remove workflow by state: active, deleted, disabled_fork, disabled_inactivity, disabled_manually&#x27;</span>        <span class="attr">required:</span> <span class="literal">true</span>        <span class="attr">default:</span> <span class="string">&quot;All&quot;</span>        <span class="attr">type:</span> <span class="string">choice</span>        <span class="attr">options:</span>          <span class="bullet">-</span> <span class="string">&quot;All&quot;</span>          <span class="bullet">-</span> <span class="string">active</span>          <span class="bullet">-</span> <span class="string">deleted</span>          <span class="bullet">-</span> <span class="string">disabled_inactivity</span>          <span class="bullet">-</span> <span class="string">disabled_manually</span>      <span class="attr">delete_run_by_conclusion_pattern:</span>        <span class="attr">description:</span> <span class="string">&#x27;Remove workflow by conclusion: action_required, cancelled, failure, skipped, success&#x27;</span>        <span class="attr">required:</span> <span class="literal">true</span>        <span class="attr">default:</span> <span class="string">&quot;All&quot;</span>        <span class="attr">type:</span> <span class="string">choice</span>        <span class="attr">options:</span>          <span class="bullet">-</span> <span class="string">&quot;All&quot;</span>          <span class="bullet">-</span> <span class="string">action_required</span>          <span class="bullet">-</span> <span class="string">cancelled</span>          <span class="bullet">-</span> <span class="string">failure</span>          <span class="bullet">-</span> <span class="string">skipped</span>          <span class="bullet">-</span> <span class="string">success</span>      <span class="attr">dry_run:</span>        <span class="attr">description:</span> <span class="string">&#x27;Only log actions, do not perform any delete operations.&#x27;</span>        <span class="attr">required:</span> <span class="literal">false</span><span class="attr">jobs:</span>  <span class="attr">del_runs:</span>    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span>    <span class="attr">steps:</span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Delete</span> <span class="string">workflow</span> <span class="string">runs</span>        <span class="attr">uses:</span> <span class="string">Mattraks/delete-workflow-runs@v2</span>        <span class="attr">with:</span>          <span class="attr">token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ACCESS_TOKEN</span> <span class="string">&#125;&#125;</span>          <span class="attr">repository:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.repository</span> <span class="string">&#125;&#125;</span>          <span class="attr">retain_days:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.days</span> <span class="string">&#125;&#125;</span>          <span class="attr">keep_minimum_runs:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.minimum_runs</span> <span class="string">&#125;&#125;</span>          <span class="attr">delete_workflow_pattern:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.delete_workflow_pattern</span> <span class="string">&#125;&#125;</span>          <span class="attr">delete_workflow_by_state_pattern:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.delete_workflow_by_state_pattern</span> <span class="string">&#125;&#125;</span>          <span class="attr">delete_run_by_conclusion_pattern:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.delete_run_by_conclusion_pattern</span> <span class="string">&#125;&#125;</span>          <span class="attr">dry_run:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.dry_run</span> <span class="string">&#125;&#125;</span></code></pre><h2 id="open-repository-actions">open repository actions</h2><p><a href="https://github.com/USERNAME/REPOSITORY/actions">https://github.com/USERNAME/REPOSITORY/actions</a></p><p><img src="https://github.com/dimaslanjaka/source-posts/assets/12471057/58b318de-210b-41fa-8ffc-3f21896b1982" alt=""></p><h2 id="select-delete-old-workflows-run-logs">select delete old workflows run logs</h2><p><img src="https://github.com/dimaslanjaka/source-posts/assets/12471057/7ecef604-2a0c-4032-96bc-3f1aed734248" alt=""></p><h2 id="click-run-workflow">click run workflow</h2><p><img src="https://github.com/dimaslanjaka/source-posts/assets/12471057/13815193-c6db-4538-b6da-31a2b2022316" alt=""><br><img src="https://github.com/dimaslanjaka/source-posts/assets/12471057/0728f88f-6ae5-4174-9bc9-ae6022ddaff8" alt=""></p><h2 id="wait-until-finish">wait until finish</h2><p>after finished your workflows logs should be emptied/cleaned</p><h2 id="conclusion">conclusion</h2><p>below is the result logs of workflows cleaned<br><img src="https://github.com/dimaslanjaka/source-posts/assets/12471057/c5362839-c4fd-49e4-9908-71eaa1d5b90d" alt=""></p>]]></content>
    
    
    <summary type="html">How to remove github workflows logs each workflow runs creating huge logs in github actions. sometimes you need to clean them to prune repository sizes. below is tips tricks to delete github workflows logs. open repository open your repository folder or edit on github directly create new workflow </summary>
    
    
    
    <category term="programming" scheme="https://www.webmanajemen.com/categories/programming/"/>
    
    
    <category term="github" scheme="https://www.webmanajemen.com/tags/github/"/>
    
    <category term="workflows" scheme="https://www.webmanajemen.com/tags/workflows/"/>
    
    <category term="tips &amp; tricks" scheme="https://www.webmanajemen.com/tags/tips-tricks/"/>
    
  </entry>
  
  <entry>
    <title>How to reorder cygwin binary execution files as first priority</title>
    <link href="https://www.webmanajemen.com/2023/08/reorder-cygwin-binary-execution-files-as-priority.html"/>
    <id>https://www.webmanajemen.com/2023/08/reorder-cygwin-binary-execution-files-as-priority.html</id>
    <published>2023-08-24T04:00:39.000Z</published>
    <updated>2023-08-24T04:00:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Script-header-bash-to-reorder-cygwin-binary-execution-files-as-priority">Script header bash to reorder cygwin binary execution files as priority</h2><pre><code class="highlight bash"><span class="meta">#!/usr/bin/env bash</span><span class="comment"># install variant debug and start activity</span>(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># absolute path script directory</span>SCRIPT_DIR=$( <span class="built_in">cd</span> -- <span class="string">&quot;<span class="subst">$( dirname -- <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">pwd</span> )<span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*)    basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`    <span class="comment"># make cygwin bin as priority</span>    <span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>    ;;<span class="keyword">esac</span><span class="comment"># YOUR CODES</span></code></pre><h2 id="Script-header-bash-to-acquire-sudo-previlege">Script header bash to acquire sudo previlege</h2><pre><code class="highlight bash"><span class="meta">#!/usr/bin/env bash</span><span class="comment"># install variant debug and start activity</span>(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># absolute path script directory</span>SCRIPT_DIR=$( <span class="built_in">cd</span> -- <span class="string">&quot;<span class="subst">$( dirname -- <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">pwd</span> )<span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*)    basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`    <span class="comment"># make cygwin bin as priority</span>    <span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>    ;;<span class="keyword">esac</span>SUDO_CMD=<span class="string">&quot;&quot;</span><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$USER</span>&quot;</span> != <span class="string">&quot;root&quot;</span> ]; <span class="keyword">then</span>  SUDO_CMD=<span class="string">&quot;sudo &quot;</span><span class="keyword">fi</span><span class="variable">$SUDO_CMD</span> <span class="built_in">echo</span> <span class="string">&quot;sudo granted&quot;</span><span class="comment"># YOUR CODES</span></code></pre>]]></content>
    
    
    <summary type="html">How to reorder cygwin binary execution files as first priority Script header bash to reorder cygwin binary execution files as priority /usr/bin/env bash install variant debug and start activityset -o </summary>
    
    
    
    <category term="programming" scheme="https://www.webmanajemen.com/categories/programming/"/>
    
    
    <category term="bash" scheme="https://www.webmanajemen.com/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>How to reorder cygwin binary execution files as first priority</title>
    <link href="https://www.webmanajemen.com/2023/08/reorder-cygwin-binary-execution-files-as-priority.html"/>
    <id>https://www.webmanajemen.com/2023/08/reorder-cygwin-binary-execution-files-as-priority.html</id>
    <published>2023-08-24T04:00:39.000Z</published>
    <updated>2023-08-24T04:00:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Script-header-bash-to-reorder-cygwin-binary-execution-files-as-priority">Script header bash to reorder cygwin binary execution files as priority</h2><pre><code class="highlight bash"><span class="meta">#!/usr/bin/env bash</span><span class="comment"># install variant debug and start activity</span>(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># absolute path script directory</span>SCRIPT_DIR=$( <span class="built_in">cd</span> -- <span class="string">&quot;<span class="subst">$( dirname -- <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">pwd</span> )<span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*)    basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`    <span class="comment"># make cygwin bin as priority</span>    <span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>    ;;<span class="keyword">esac</span><span class="comment"># YOUR CODES</span></code></pre><h2 id="Script-header-bash-to-acquire-sudo-previlege">Script header bash to acquire sudo previlege</h2><pre><code class="highlight bash"><span class="meta">#!/usr/bin/env bash</span><span class="comment"># install variant debug and start activity</span>(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># absolute path script directory</span>SCRIPT_DIR=$( <span class="built_in">cd</span> -- <span class="string">&quot;<span class="subst">$( dirname -- <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">pwd</span> )<span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*)    basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`    <span class="comment"># make cygwin bin as priority</span>    <span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>    ;;<span class="keyword">esac</span>SUDO_CMD=<span class="string">&quot;&quot;</span><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$USER</span>&quot;</span> != <span class="string">&quot;root&quot;</span> ]; <span class="keyword">then</span>  SUDO_CMD=<span class="string">&quot;sudo &quot;</span><span class="keyword">fi</span><span class="variable">$SUDO_CMD</span> <span class="built_in">echo</span> <span class="string">&quot;sudo granted&quot;</span><span class="comment"># YOUR CODES</span></code></pre>]]></content>
    
    
    <summary type="html">How to reorder cygwin binary execution files as first priority Script header bash to reorder cygwin binary execution files as priority /usr/bin/env bash install variant debug and start activityset -o igncr 2&gt;/dev/null set -o igncr; cygwin encoding fix absolute path working directory</summary>
    
    
    
    <category term="programming" scheme="https://www.webmanajemen.com/categories/programming/"/>
    
    
    <category term="bash" scheme="https://www.webmanajemen.com/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>Common Settings For .bashrc</title>
    <link href="https://www.webmanajemen.com/2023/08/common-settings-for-bashrc.html"/>
    <id>https://www.webmanajemen.com/2023/08/common-settings-for-bashrc.html</id>
    <published>2023-08-23T17:00:51.000Z</published>
    <updated>2023-08-24T03:39:41.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code class="highlight properties"><span class="comment"># custom NodeJS executable paths</span><span class="attr">if</span> <span class="string">[ -d &quot;/media/dimaslanjaka/DATA/bin/node/linux/bin&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:/media/dimaslanjaka/DATA/bin/node/linux/bin&quot;</span><span class="attr">fi</span><span class="comment"># search executable files &lt;cwd&gt;/bin</span><span class="attr">if</span> <span class="string">[ -d &quot;./bin&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:./bin&quot;</span><span class="attr">fi</span><span class="comment"># search executable files &lt;cwd&gt;/node_modules/.bin</span><span class="attr">if</span> <span class="string">[ -d &quot;./node_modules/.bin&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:./node_modules/.bin&quot;</span><span class="attr">fi</span><span class="comment"># lampp configuration starts</span><span class="attr">if</span> <span class="string">[ -d &quot;/opt/lampp&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:/opt/lampp&quot;</span><span class="attr">fi</span><span class="attr">if</span> <span class="string">[ -d &quot;/opt/lampp/bin&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:/opt/lampp/bin&quot;</span><span class="attr">fi</span><span class="comment"># lampp configuration ends</span><span class="attr">if</span> <span class="string">[ -d &quot;/media/dimaslanjaka/DATA/bin/composer&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:/media/dimaslanjaka/DATA/bin/composer&quot;</span><span class="attr">fi</span><span class="comment"># android development</span><span class="attr">export</span> <span class="string">ANDROID_HOME=&quot;$HOME/Android/Sdk&quot;</span><span class="attr">export</span> <span class="string">PATH=&quot;$ANDROID_HOME/cmdline-tools/bin:$ANDROID_HOME/platform-tools:$PATH&quot;</span><span class="comment"># android, groovy, gradle development</span><span class="attr">export</span> <span class="string">GRADLE_HOME=&quot;$HOME/.gradle&quot;</span><span class="attr">export</span> <span class="string">GRADLE_USER_HOME=&quot;$GRADLE_HOME&quot;</span><span class="comment"># python development</span><span class="attr">export</span> <span class="string">PYTHON=&quot;/usr/bin/python&quot;</span><span class="comment"># java, kotlin development</span><span class="attr">export</span> <span class="string">JAVA_HOME=&quot;/media/dimaslanjaka/DATA/bin/java/linux/java-11&quot;</span><span class="attr">export</span> <span class="string">PATH=&quot;$PATH:$JAVA_HOME/bin&quot;</span><span class="comment"># search executable files ~/.local/bin</span><span class="attr">export</span> <span class="string">PATH=&quot;$PATH:$HOME/.local/bin&quot;</span><span class="comment"># yarn v1 devekioment</span><span class="attr">export</span> <span class="string">PATH=&quot;$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH&quot;</span></code></pre>]]></content>
    
    
    <summary type="html">Common Settings For .bashrc custom NodeJS executable pathsif [ -d /media/dimaslanjaka/DATA/bin/node/linux/bin ] ; then export PATH=PATH:/media/dimaslanjaka/DATA/bin/node/linux/binfi search executable </summary>
    
    
    
    <category term="programming" scheme="https://www.webmanajemen.com/categories/programming/"/>
    
    
    <category term="bash" scheme="https://www.webmanajemen.com/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>Common Settings For .bashrc</title>
    <link href="https://www.webmanajemen.com/2023/08/common-settings-for-bashrc.html"/>
    <id>https://www.webmanajemen.com/2023/08/common-settings-for-bashrc.html</id>
    <published>2023-08-23T17:00:51.000Z</published>
    <updated>2023-08-24T03:39:41.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code class="highlight properties"><span class="comment"># custom NodeJS executable paths</span><span class="attr">if</span> <span class="string">[ -d &quot;/media/dimaslanjaka/DATA/bin/node/linux/bin&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:/media/dimaslanjaka/DATA/bin/node/linux/bin&quot;</span><span class="attr">fi</span><span class="comment"># search executable files &lt;cwd&gt;/bin</span><span class="attr">if</span> <span class="string">[ -d &quot;./bin&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:./bin&quot;</span><span class="attr">fi</span><span class="comment"># search executable files &lt;cwd&gt;/node_modules/.bin</span><span class="attr">if</span> <span class="string">[ -d &quot;./node_modules/.bin&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:./node_modules/.bin&quot;</span><span class="attr">fi</span><span class="comment"># lampp configuration starts</span><span class="attr">if</span> <span class="string">[ -d &quot;/opt/lampp&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:/opt/lampp&quot;</span><span class="attr">fi</span><span class="attr">if</span> <span class="string">[ -d &quot;/opt/lampp/bin&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:/opt/lampp/bin&quot;</span><span class="attr">fi</span><span class="comment"># lampp configuration ends</span><span class="attr">if</span> <span class="string">[ -d &quot;/media/dimaslanjaka/DATA/bin/composer&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:/media/dimaslanjaka/DATA/bin/composer&quot;</span><span class="attr">fi</span><span class="comment"># android development</span><span class="attr">export</span> <span class="string">ANDROID_HOME=&quot;$HOME/Android/Sdk&quot;</span><span class="attr">export</span> <span class="string">PATH=&quot;$ANDROID_HOME/cmdline-tools/bin:$ANDROID_HOME/platform-tools:$PATH&quot;</span><span class="comment"># android, groovy, gradle development</span><span class="attr">export</span> <span class="string">GRADLE_HOME=&quot;$HOME/.gradle&quot;</span><span class="attr">export</span> <span class="string">GRADLE_USER_HOME=&quot;$GRADLE_HOME&quot;</span><span class="comment"># python development</span><span class="attr">export</span> <span class="string">PYTHON=&quot;/usr/bin/python&quot;</span><span class="comment"># java, kotlin development</span><span class="attr">export</span> <span class="string">JAVA_HOME=&quot;/media/dimaslanjaka/DATA/bin/java/linux/java-11&quot;</span><span class="attr">export</span> <span class="string">PATH=&quot;$PATH:$JAVA_HOME/bin&quot;</span><span class="comment"># search executable files ~/.local/bin</span><span class="attr">export</span> <span class="string">PATH=&quot;$PATH:$HOME/.local/bin&quot;</span><span class="comment"># yarn v1 devekioment</span><span class="attr">export</span> <span class="string">PATH=&quot;$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH&quot;</span></code></pre>]]></content>
    
    
    <summary type="html">Common Settings For .bashrc custom NodeJS executable pathsif [ -d /media/dimaslanjaka/DATA/bin/node/linux/bin ] ; then export PATH=PATH:/media/dimaslanjaka/DATA/bin/node/linux/binfi search executable files &lt;cwd&gt;/binif [ -d ./bin ] ; then export PATH=PATH:./binfi search ex</summary>
    
    
    
    <category term="programming" scheme="https://www.webmanajemen.com/categories/programming/"/>
    
    
    <category term="bash" scheme="https://www.webmanajemen.com/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>Script java killer</title>
    <link href="https://www.webmanajemen.com/Java/kill-java-script.html"/>
    <id>https://www.webmanajemen.com/Java/kill-java-script.html</id>
    <published>2023-08-23T06:32:38.000Z</published>
    <updated>2023-08-23T06:39:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Windows-CMD">Windows CMD</h2><p>create script with name <code>killjava.cmd</code> or <code>killjava.bat</code></p><pre><code class="highlight cmd">@<span class="built_in">echo</span> off<span class="built_in">taskkill</span> /f /im jqs.exe<span class="built_in">taskkill</span> /f /im javaw.exe<span class="built_in">taskkill</span> /f /im java.exe<span class="built_in">taskkill</span> /f /im geckodriver.exe<span class="built_in">taskkill</span> /f /im chromedriver.exe<span class="built_in">taskkill</span> /f /im node.exe</code></pre><h2 id="Windows-Powershell">Windows Powershell</h2><p>create script with name <code>killjava.ps1</code></p><pre><code class="highlight powershell">cmd <span class="string">&quot;/C TASKKILL /IM node.exe /F&quot;</span></code></pre><h2 id="Bash">Bash</h2><p>create script with name <code>kill-process</code></p><pre><code class="highlight bash"><span class="meta">#!/usr/bin/env bash</span><span class="comment"># make cygwin bin as priority</span><span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>;(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># absolute path script directory</span>SCRIPT_DIR=$( <span class="built_in">cd</span> -- <span class="string">&quot;<span class="subst">$( dirname -- <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">pwd</span> )<span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*) basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`;;<span class="keyword">esac</span>ps -W | grep <span class="string">&quot;<span class="variable">$1</span>&quot;</span> | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs <span class="built_in">kill</span> -f;</code></pre><p>create java killer script with name <code>killjava</code></p><pre><code class="highlight bash"><span class="meta">#!/usr/bin/env bash</span><span class="comment"># make cygwin bin as priority</span><span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>;(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># absolute path script directory</span>SCRIPT_DIR=$( <span class="built_in">cd</span> -- <span class="string">&quot;<span class="subst">$( dirname -- <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">pwd</span> )<span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*) basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`;;<span class="keyword">esac</span><span class="comment">#kill -9 $(ps aux | grep &#x27;\\snode\\s&#x27; | awk &#x27;&#123;print $2&#125;&#x27;)</span><span class="keyword">if</span> ! [ -x <span class="string">&quot;<span class="subst">$(command -v killall)</span>&quot;</span> ]; <span class="keyword">then</span>  kill-process java  kill-process javaw<span class="keyword">else</span>  killall java  killall javaw<span class="keyword">fi</span></code></pre><h2 id="Usage">Usage</h2><ul><li>add parent folder these files into enviroment PATH</li><li>now you can type <code>killjava</code> at terminal to kill java processes</li></ul>]]></content>
    
    
    <summary type="html">Script java killer Windows CMD create script with name killjava.cmd or killjava.bat killjava.cmd killjava.bat @echo offtaskkill /f /im jqs.exetaskkill /f /im javaw.exetaskkill /f /im java.exetaskkill </summary>
    
    
    
    <category term="programming" scheme="https://www.webmanajemen.com/categories/programming/"/>
    
    
    <category term="bash" scheme="https://www.webmanajemen.com/tags/bash/"/>
    
    <category term="cmd" scheme="https://www.webmanajemen.com/tags/cmd/"/>
    
    <category term="java" scheme="https://www.webmanajemen.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Script java killer</title>
    <link href="https://www.webmanajemen.com/Java/kill-java-script.html"/>
    <id>https://www.webmanajemen.com/Java/kill-java-script.html</id>
    <published>2023-08-23T06:32:38.000Z</published>
    <updated>2023-08-23T06:39:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Windows-CMD">Windows CMD</h2><p>create script with name <code>killjava.cmd</code> or <code>killjava.bat</code></p><pre><code class="highlight cmd">@<span class="built_in">echo</span> off<span class="built_in">taskkill</span> /f /im jqs.exe<span class="built_in">taskkill</span> /f /im javaw.exe<span class="built_in">taskkill</span> /f /im java.exe<span class="built_in">taskkill</span> /f /im geckodriver.exe<span class="built_in">taskkill</span> /f /im chromedriver.exe<span class="built_in">taskkill</span> /f /im node.exe</code></pre><h2 id="Windows-Powershell">Windows Powershell</h2><p>create script with name <code>killjava.ps1</code></p><pre><code class="highlight powershell">cmd <span class="string">&quot;/C TASKKILL /IM node.exe /F&quot;</span></code></pre><h2 id="Bash">Bash</h2><p>create script with name <code>kill-process</code></p><pre><code class="highlight bash"><span class="meta">#!/usr/bin/env bash</span><span class="comment"># make cygwin bin as priority</span><span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>;(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># absolute path script directory</span>SCRIPT_DIR=$( <span class="built_in">cd</span> -- <span class="string">&quot;<span class="subst">$( dirname -- <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">pwd</span> )<span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*) basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`;;<span class="keyword">esac</span>ps -W | grep <span class="string">&quot;<span class="variable">$1</span>&quot;</span> | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs <span class="built_in">kill</span> -f;</code></pre><p>create java killer script with name <code>killjava</code></p><pre><code class="highlight bash"><span class="meta">#!/usr/bin/env bash</span><span class="comment"># make cygwin bin as priority</span><span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>;(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># absolute path script directory</span>SCRIPT_DIR=$( <span class="built_in">cd</span> -- <span class="string">&quot;<span class="subst">$( dirname -- <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">pwd</span> )<span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*) basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`;;<span class="keyword">esac</span><span class="comment">#kill -9 $(ps aux | grep &#x27;\\snode\\s&#x27; | awk &#x27;&#123;print $2&#125;&#x27;)</span><span class="keyword">if</span> ! [ -x <span class="string">&quot;<span class="subst">$(command -v killall)</span>&quot;</span> ]; <span class="keyword">then</span>  kill-process java  kill-process javaw<span class="keyword">else</span>  killall java  killall javaw<span class="keyword">fi</span></code></pre><h2 id="Usage">Usage</h2><ul><li>add parent folder these files into enviroment PATH</li><li>now you can type <code>killjava</code> at terminal to kill java processes</li></ul>]]></content>
    
    
    <summary type="html">Script java killer Windows CMD create script with name killjava.cmd or killjava.bat killjava.cmd killjava.bat @echo offtaskkill /f /im jqs.exetaskkill /f /im javaw.exetaskkill /f /im java.exetaskkill /f /im geckodriver.exetaskkill /f /im chromedriver.exetaskkill /f /im node.exe Windows Powersh</summary>
    
    
    
    <category term="programming" scheme="https://www.webmanajemen.com/categories/programming/"/>
    
    
    <category term="bash" scheme="https://www.webmanajemen.com/tags/bash/"/>
    
    <category term="cmd" scheme="https://www.webmanajemen.com/tags/cmd/"/>
    
    <category term="java" scheme="https://www.webmanajemen.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>How to remove all files from the git history that are not currently present?</title>
    <link href="https://www.webmanajemen.com/GitHub/how-to-remove-all-files-from-the-git-history-that-are-not-currently-present.html"/>
    <id>https://www.webmanajemen.com/GitHub/how-to-remove-all-files-from-the-git-history-that-are-not-currently-present.html</id>
    <published>2023-08-22T09:36:12.000Z</published>
    <updated>2023-08-22T09:36:12.000Z</updated>
    
    <content type="html"><![CDATA[<details>  <summary>Summary</summary><p>I’ve seen several articles and questions about how to remove a <em>single</em> file from all git history. Example: <a href="https://stackoverflow.com/questions/2100907/how-to-remove-delete-a-large-file-from-commit-history-in-git-repository">How to remove/delete a large file from commit history in Git repository?</a></p><p>What I’d like to do is remove <em>all</em> files that are not <em>currently present</em> at the head of the master branch.</p><p>My use case is that I’m splitting off a smaller repository (call it <code>small</code> ) from a monolithic repository (call it <code>monolith</code> ). I want to preserve the git history when creating <code>small</code> , but only the <em>relevant</em> git history.</p><p>First, I created a new repository <code>small</code> on GitHub. Then, on my laptop, I added it as a remote named <code>origin-small</code> to my local <code>monolith</code> repository, and pushed the current state of the master branch of <code>monolith</code> to <code>origin-small</code> .</p><p>I then removed the remote <code>origin-small</code> from <code>monolith</code> , changed directories, and cloned <code>small</code> from GitHub. Voilà, I had a copy of my original repository, <code>monolith</code> , with its full history.</p><p>But, there are loads of files in the history of <code>small</code> that are no longer relevant, and they are bloating the repo.</p><p>What I’d like to do is:</p><ol><li>Delete all of the unnecessary files from <code>small</code> .</li><li>Run a command to clear the whole git history of the files that I just deleted.</li></ol><p>Is there a way to do this with a single command? Or do I need to run <code>git filter-branch</code> once for every file/directory that I want to remove?</p></details><p>I ended up using <code>git-filter-repo</code> . <strong>WARNING: This approach is NOT able to update tags on the remote, if there are any.</strong></p><ol><li>Install <code>git-filter-repo</code> .</li></ol><p><code>brew install git-filter-repo</code></p><ol start="2"><li>Clone your desired repo, in mirror form.</li></ol><p><code>git clone --mirror &lt;my-repo-url&gt;</code></p><ol start="3"><li>Enter the repo directory.</li></ol><p><code>cd &lt;my-repo-name&gt;</code></p><ol start="4"><li>Analyze the repo to identify all files that are in the history, but no longer exist.</li></ol><p><code>git filter-repo --analyze</code></p><ol start="5"><li><p>In the <code>analysis</code> output directory, there will be a file named <code>path-deleted-sizes.txt</code> that contains a list all files that were committed at some point, and were later deleted, but still exist in the git history.</p><p>Create a new file that lacks the headers and other columns.</p></li></ol><p><code>tail +3 ./filter-repo/analysis/path-deleted-sizes.txt | tr -s ' ' | cut -d ' ' -f 5- &gt; ./filter-repo/analysis/path-deleted.txt</code></p><ol start="6"><li>Clean the git history of all files that no longer exist. This will also clean dirty commits, remove empty commits, and recompress everything for you.</li></ol><p><code>git filter-repo --invert-paths --paths-from-file ./filter-repo/analysis/path-deleted.txt</code></p><ol start="7"><li>Clean up the <code>./filter-repo</code> directory, or you won’t be able to push your changes.</li></ol><p><code>rm -rf ./filter-repo</code></p><ol start="8"><li>Force-push all refs to the origin. It will force-push, even though the command doesn’t indicate it. Also, it will update <em>all</em> branches on the remote, which is convenient. If you have branch protection enabled on some branches in GitHub/Bitbucket/etc., then you will need to allow force-pushes. You can always re-run this command if you find that some refs could not be force-pushed.</li></ol><p><code>git push --force-with-lease</code></p>]]></content>
    
    
    <summary type="html">How to remove all files from the git history that are not currently present? SummaryIve seen several articles and questions about how to remove a single file from all git history. Example: How to remo</summary>
    
    
    
    <category term="programming" scheme="https://www.webmanajemen.com/categories/programming/"/>
    
    
    <category term="github" scheme="https://www.webmanajemen.com/tags/github/"/>
    
    <category term="bash" scheme="https://www.webmanajemen.com/tags/bash/"/>
    
    <category term="cmd" scheme="https://www.webmanajemen.com/tags/cmd/"/>
    
  </entry>
  
  <entry>
    <title>How to remove all files from the git history that are not currently present?</title>
    <link href="https://www.webmanajemen.com/GitHub/how-to-remove-all-files-from-the-git-history-that-are-not-currently-present.html"/>
    <id>https://www.webmanajemen.com/GitHub/how-to-remove-all-files-from-the-git-history-that-are-not-currently-present.html</id>
    <published>2023-08-22T09:36:12.000Z</published>
    <updated>2023-08-22T09:36:12.000Z</updated>
    
    <content type="html"><![CDATA[<details>  <summary>Summary</summary><p>I’ve seen several articles and questions about how to remove a <em>single</em> file from all git history. Example: <a href="https://stackoverflow.com/questions/2100907/how-to-remove-delete-a-large-file-from-commit-history-in-git-repository">How to remove/delete a large file from commit history in Git repository?</a></p><p>What I’d like to do is remove <em>all</em> files that are not <em>currently present</em> at the head of the master branch.</p><p>My use case is that I’m splitting off a smaller repository (call it <code>small</code> ) from a monolithic repository (call it <code>monolith</code> ). I want to preserve the git history when creating <code>small</code> , but only the <em>relevant</em> git history.</p><p>First, I created a new repository <code>small</code> on GitHub. Then, on my laptop, I added it as a remote named <code>origin-small</code> to my local <code>monolith</code> repository, and pushed the current state of the master branch of <code>monolith</code> to <code>origin-small</code> .</p><p>I then removed the remote <code>origin-small</code> from <code>monolith</code> , changed directories, and cloned <code>small</code> from GitHub. Voilà, I had a copy of my original repository, <code>monolith</code> , with its full history.</p><p>But, there are loads of files in the history of <code>small</code> that are no longer relevant, and they are bloating the repo.</p><p>What I’d like to do is:</p><ol><li>Delete all of the unnecessary files from <code>small</code> .</li><li>Run a command to clear the whole git history of the files that I just deleted.</li></ol><p>Is there a way to do this with a single command? Or do I need to run <code>git filter-branch</code> once for every file/directory that I want to remove?</p></details><p>I ended up using <code>git-filter-repo</code> . <strong>WARNING: This approach is NOT able to update tags on the remote, if there are any.</strong></p><ol><li>Install <code>git-filter-repo</code> .</li></ol><p><code>brew install git-filter-repo</code></p><ol start="2"><li>Clone your desired repo, in mirror form.</li></ol><p><code>git clone --mirror &lt;my-repo-url&gt;</code></p><ol start="3"><li>Enter the repo directory.</li></ol><p><code>cd &lt;my-repo-name&gt;</code></p><ol start="4"><li>Analyze the repo to identify all files that are in the history, but no longer exist.</li></ol><p><code>git filter-repo --analyze</code></p><ol start="5"><li><p>In the <code>analysis</code> output directory, there will be a file named <code>path-deleted-sizes.txt</code> that contains a list all files that were committed at some point, and were later deleted, but still exist in the git history.</p><p>Create a new file that lacks the headers and other columns.</p></li></ol><p><code>tail +3 ./filter-repo/analysis/path-deleted-sizes.txt | tr -s ' ' | cut -d ' ' -f 5- &gt; ./filter-repo/analysis/path-deleted.txt</code></p><ol start="6"><li>Clean the git history of all files that no longer exist. This will also clean dirty commits, remove empty commits, and recompress everything for you.</li></ol><p><code>git filter-repo --invert-paths --paths-from-file ./filter-repo/analysis/path-deleted.txt</code></p><ol start="7"><li>Clean up the <code>./filter-repo</code> directory, or you won’t be able to push your changes.</li></ol><p><code>rm -rf ./filter-repo</code></p><ol start="8"><li>Force-push all refs to the origin. It will force-push, even though the command doesn’t indicate it. Also, it will update <em>all</em> branches on the remote, which is convenient. If you have branch protection enabled on some branches in GitHub/Bitbucket/etc., then you will need to allow force-pushes. You can always re-run this command if you find that some refs could not be force-pushed.</li></ol><p><code>git push --force-with-lease</code></p>]]></content>
    
    
    <summary type="html">How to remove all files from the git history that are not currently present? SummaryIve seen several articles and questions about how to remove a single file from all git history. Example: How to remove/delete a large file from commit history in Git repository?What Id like to do is remove all fi</summary>
    
    
    
    <category term="programming" scheme="https://www.webmanajemen.com/categories/programming/"/>
    
    
    <category term="github" scheme="https://www.webmanajemen.com/tags/github/"/>
    
    <category term="bash" scheme="https://www.webmanajemen.com/tags/bash/"/>
    
    <category term="cmd" scheme="https://www.webmanajemen.com/tags/cmd/"/>
    
  </entry>
  
  <entry>
    <title>Monster giant dinbear</title>
    <link href="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear.html"/>
    <id>https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear.html</id>
    <published>2023-08-06T14:00:28.000Z</published>
    <updated>2023-08-06T14:11:28.000Z</updated>
    
    <content type="html"><![CDATA[<link  rel="stylesheet"  href="https://rawcdn.githack.com/dimaslanjaka/Web-Manajemen/870a349/css/bootstrap-5-3-0-alpha3-wrapper.css"/><section id="bootstrap-wrapper">  <div data-bs-theme="dark">    <h2>giant dinbear Information from Chimeraland</h2>    <h2 id="attribute"><i>giant dinbear</i> default maximum attribute</h2>    <div class="row">      <div class="col mb-2">        <div class="card">          <div class="card-body">            <table>              <tr>                <th>GRADE</th>                <td>N/A <br />N/A</td>              </tr>              <tr>                <th>Attack</th>                <td>N/A</td>              </tr>              <tr>                <th>Health Point (HP)</th>                <td>N/A</td>              </tr>              <tr>                <th>Defense</th>                <td></td>              </tr>            </table>          </div>        </div>      </div>    </div>    <blockquote class="bd-callout bd-callout-warning">      Note: giant dinbear stat will increase based on their <b>grade</b> and      <b>delicacies/tasty</b>.    </blockquote>    <hr />    <h2 id="delicacies">Delicacies/Tasty for giant dinbear</h2>    <div class="card">      <div class="card-body">        <div class="table-responsive">          <table class="table table-striped">            <thead>              <tr>                <th>Recipe Name</th>                <th>Link</th>              </tr>            </thead>            <tbody></tbody>          </table>        </div>      </div>    </div>    <hr />    <div id="gallery">      <h2>Galleries for giant dinbear</h2>      <div class="row">        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-36-52-84_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-36-52-84_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-36-52-84_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-36-56-30_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-36-56-30_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-36-56-30_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-37-00-52_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-37-00-52_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-37-00-52_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-37-04-50_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-37-04-50_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-37-04-50_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-37-31-36_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-37-31-36_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-37-31-36_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-38-04-16_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-38-04-16_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-38-04-16_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-38-09-67_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-38-09-67_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-38-09-67_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-38-15-48_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-38-15-48_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-38-15-48_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>      </div>    </div>  </div></section>]]></content>
    
    
    <summary type="html">Monster giant dinbear giant dinbear Information from Chimeraland giant dinbear default maximum attribute GRADE N/A N/A Attack N/A </summary>
    
    
    
    <category term="games" scheme="https://www.webmanajemen.com/categories/games/"/>
    
    <category term="chimeraland" scheme="https://www.webmanajemen.com/categories/games/chimeraland/"/>
    
    <category term="monsters" scheme="https://www.webmanajemen.com/categories/games/chimeraland/monsters/"/>
    
    
    <category term="chimeraland" scheme="https://www.webmanajemen.com/tags/chimeraland/"/>
    
    <category term="pet" scheme="https://www.webmanajemen.com/tags/pet/"/>
    
    <category term="monster" scheme="https://www.webmanajemen.com/tags/monster/"/>
    
  </entry>
  
  <entry>
    <title>Monster giant squid</title>
    <link href="https://www.webmanajemen.com/chimeraland/monsters/giant-squid.html"/>
    <id>https://www.webmanajemen.com/chimeraland/monsters/giant-squid.html</id>
    <published>2023-08-06T14:00:28.000Z</published>
    <updated>2023-08-06T14:11:28.000Z</updated>
    
    <content type="html"><![CDATA[<link  rel="stylesheet"  href="https://rawcdn.githack.com/dimaslanjaka/Web-Manajemen/870a349/css/bootstrap-5-3-0-alpha3-wrapper.css"/><section id="bootstrap-wrapper">  <div data-bs-theme="dark">    <h2>giant squid Information from Chimeraland</h2>    <h2 id="attribute"><i>giant squid</i> default maximum attribute</h2>    <div class="row">      <div class="col mb-2">        <div class="card">          <div class="card-body">            <table>              <tr>                <th>GRADE</th>                <td>N/A <br />N/A</td>              </tr>              <tr>                <th>Attack</th>                <td>N/A</td>              </tr>              <tr>                <th>Health Point (HP)</th>                <td>N/A</td>              </tr>              <tr>                <th>Defense</th>                <td></td>              </tr>            </table>          </div>        </div>      </div>    </div>    <blockquote class="bd-callout bd-callout-warning">      Note: giant squid stat will increase based on their <b>grade</b> and      <b>delicacies/tasty</b>.    </blockquote>    <hr />    <h2 id="delicacies">Delicacies/Tasty for giant squid</h2>    <div class="card">      <div class="card-body">        <div class="table-responsive">          <table class="table table-striped">            <thead>              <tr>                <th>Recipe Name</th>                <th>Link</th>              </tr>            </thead>            <tbody></tbody>          </table>        </div>      </div>    </div>    <hr />    <div id="gallery">      <h2>Galleries for giant squid</h2>      <div class="row">        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-squid/Screenshot_2023-08-07-01-18-29-71_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant squid Screenshot_2023-08-07-01-18-29-71_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant squid</i>              Screenshot_2023-08-07-01-18-29-71_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-squid/Screenshot_2023-08-07-01-18-33-75_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant squid Screenshot_2023-08-07-01-18-33-75_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant squid</i>              Screenshot_2023-08-07-01-18-33-75_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-squid/Screenshot_2023-08-07-01-18-38-89_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant squid Screenshot_2023-08-07-01-18-38-89_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant squid</i>              Screenshot_2023-08-07-01-18-38-89_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-squid/Screenshot_2023-08-07-01-18-42-81_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant squid Screenshot_2023-08-07-01-18-42-81_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant squid</i>              Screenshot_2023-08-07-01-18-42-81_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-squid/Screenshot_2023-08-07-01-18-49-54_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant squid Screenshot_2023-08-07-01-18-49-54_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant squid</i>              Screenshot_2023-08-07-01-18-49-54_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-squid/Screenshot_2023-08-07-01-18-59-74_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant squid Screenshot_2023-08-07-01-18-59-74_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant squid</i>              Screenshot_2023-08-07-01-18-59-74_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-squid/Screenshot_2023-08-07-01-19-04-34_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant squid Screenshot_2023-08-07-01-19-04-34_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant squid</i>              Screenshot_2023-08-07-01-19-04-34_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-squid/Screenshot_2023-08-07-01-19-11-33_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant squid Screenshot_2023-08-07-01-19-11-33_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant squid</i>              Screenshot_2023-08-07-01-19-11-33_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>      </div>    </div>  </div></section>]]></content>
    
    
    <summary type="html">Monster giant squid giant squid Information from Chimeraland giant squid default maximum attribute GRADE N/A N/A Attack N/A </summary>
    
    
    
    <category term="games" scheme="https://www.webmanajemen.com/categories/games/"/>
    
    <category term="chimeraland" scheme="https://www.webmanajemen.com/categories/games/chimeraland/"/>
    
    <category term="monsters" scheme="https://www.webmanajemen.com/categories/games/chimeraland/monsters/"/>
    
    
    <category term="chimeraland" scheme="https://www.webmanajemen.com/tags/chimeraland/"/>
    
    <category term="pet" scheme="https://www.webmanajemen.com/tags/pet/"/>
    
    <category term="monster" scheme="https://www.webmanajemen.com/tags/monster/"/>
    
  </entry>
  
  <entry>
    <title>Monster giant whitefox</title>
    <link href="https://www.webmanajemen.com/chimeraland/monsters/giant-whitefox.html"/>
    <id>https://www.webmanajemen.com/chimeraland/monsters/giant-whitefox.html</id>
    <published>2023-08-06T14:00:28.000Z</published>
    <updated>2023-08-06T14:11:28.000Z</updated>
    
    <content type="html"><![CDATA[<link  rel="stylesheet"  href="https://rawcdn.githack.com/dimaslanjaka/Web-Manajemen/870a349/css/bootstrap-5-3-0-alpha3-wrapper.css"/><section id="bootstrap-wrapper">  <div data-bs-theme="dark">    <h2>giant whitefox Information from Chimeraland</h2>    <h2 id="attribute"><i>giant whitefox</i> default maximum attribute</h2>    <div class="row">      <div class="col mb-2">        <div class="card">          <div class="card-body">            <table>              <tr>                <th>GRADE</th>                <td>N/A <br />N/A</td>              </tr>              <tr>                <th>Attack</th>                <td>N/A</td>              </tr>              <tr>                <th>Health Point (HP)</th>                <td>N/A</td>              </tr>              <tr>                <th>Defense</th>                <td></td>              </tr>            </table>          </div>        </div>      </div>    </div>    <blockquote class="bd-callout bd-callout-warning">      Note: giant whitefox stat will increase based on their <b>grade</b> and      <b>delicacies/tasty</b>.    </blockquote>    <hr />    <h2 id="delicacies">Delicacies/Tasty for giant whitefox</h2>    <div class="card">      <div class="card-body">        <div class="table-responsive">          <table class="table table-striped">            <thead>              <tr>                <th>Recipe Name</th>                <th>Link</th>              </tr>            </thead>            <tbody></tbody>          </table>        </div>      </div>    </div>    <hr />    <div id="gallery">      <h2>Galleries for giant whitefox</h2>      <div class="row">        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-whitefox/Screenshot_2023-08-06-23-19-07-08_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant whitefox Screenshot_2023-08-06-23-19-07-08_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant whitefox</i>              Screenshot_2023-08-06-23-19-07-08_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-whitefox/Screenshot_2023-08-06-23-19-47-19_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant whitefox Screenshot_2023-08-06-23-19-47-19_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant whitefox</i>              Screenshot_2023-08-06-23-19-47-19_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-whitefox/Screenshot_2023-08-06-23-19-55-67_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant whitefox Screenshot_2023-08-06-23-19-55-67_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant whitefox</i>              Screenshot_2023-08-06-23-19-55-67_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-whitefox/Screenshot_2023-08-06-23-20-00-40_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant whitefox Screenshot_2023-08-06-23-20-00-40_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant whitefox</i>              Screenshot_2023-08-06-23-20-00-40_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-whitefox/Screenshot_2023-08-06-23-20-05-48_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant whitefox Screenshot_2023-08-06-23-20-05-48_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant whitefox</i>              Screenshot_2023-08-06-23-20-05-48_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-whitefox/Screenshot_2023-08-06-23-20-09-62_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant whitefox Screenshot_2023-08-06-23-20-09-62_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant whitefox</i>              Screenshot_2023-08-06-23-20-09-62_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-whitefox/Screenshot_2023-08-06-23-20-23-71_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant whitefox Screenshot_2023-08-06-23-20-23-71_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant whitefox</i>              Screenshot_2023-08-06-23-20-23-71_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-whitefox/Screenshot_2023-08-06-23-20-27-93_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant whitefox Screenshot_2023-08-06-23-20-27-93_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant whitefox</i>              Screenshot_2023-08-06-23-20-27-93_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-whitefox/Screenshot_2023-08-06-23-20-34-44_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant whitefox Screenshot_2023-08-06-23-20-34-44_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant whitefox</i>              Screenshot_2023-08-06-23-20-34-44_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-whitefox/Screenshot_2023-08-06-23-20-51-81_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant whitefox Screenshot_2023-08-06-23-20-51-81_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant whitefox</i>              Screenshot_2023-08-06-23-20-51-81_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>      </div>    </div>  </div></section>]]></content>
    
    
    <summary type="html">Monster giant whitefox giant whitefox Information from Chimeraland giant whitefox default maximum attribute GRADE N/A N/A Attack N/A </summary>
    
    
    
    <category term="games" scheme="https://www.webmanajemen.com/categories/games/"/>
    
    <category term="chimeraland" scheme="https://www.webmanajemen.com/categories/games/chimeraland/"/>
    
    <category term="monsters" scheme="https://www.webmanajemen.com/categories/games/chimeraland/monsters/"/>
    
    
    <category term="chimeraland" scheme="https://www.webmanajemen.com/tags/chimeraland/"/>
    
    <category term="pet" scheme="https://www.webmanajemen.com/tags/pet/"/>
    
    <category term="monster" scheme="https://www.webmanajemen.com/tags/monster/"/>
    
  </entry>
  
  <entry>
    <title>Monster lichen bufonidae</title>
    <link href="https://www.webmanajemen.com/chimeraland/monsters/lichen-bufonidae.html"/>
    <id>https://www.webmanajemen.com/chimeraland/monsters/lichen-bufonidae.html</id>
    <published>2023-08-06T14:00:28.000Z</published>
    <updated>2023-08-06T14:11:28.000Z</updated>
    
    <content type="html"><![CDATA[<link  rel="stylesheet"  href="https://rawcdn.githack.com/dimaslanjaka/Web-Manajemen/870a349/css/bootstrap-5-3-0-alpha3-wrapper.css"/><section id="bootstrap-wrapper">  <div data-bs-theme="dark">    <h2>lichen bufonidae Information from Chimeraland</h2>    <h2 id="attribute"><i>lichen bufonidae</i> default maximum attribute</h2>    <div class="row">      <div class="col mb-2">        <div class="card">          <div class="card-body">            <table>              <tr>                <th>GRADE</th>                <td>N/A <br />N/A</td>              </tr>              <tr>                <th>Attack</th>                <td>N/A</td>              </tr>              <tr>                <th>Health Point (HP)</th>                <td>N/A</td>              </tr>              <tr>                <th>Defense</th>                <td></td>              </tr>            </table>          </div>        </div>      </div>    </div>    <blockquote class="bd-callout bd-callout-warning">      Note: lichen bufonidae stat will increase based on their <b>grade</b> and      <b>delicacies/tasty</b>.    </blockquote>    <hr />    <h2 id="delicacies">Delicacies/Tasty for lichen bufonidae</h2>    <div class="card">      <div class="card-body">        <div class="table-responsive">          <table class="table table-striped">            <thead>              <tr>                <th>Recipe Name</th>                <th>Link</th>              </tr>            </thead>            <tbody></tbody>          </table>        </div>      </div>    </div>    <hr />    <div id="gallery">      <h2>Galleries for lichen bufonidae</h2>      <div class="row">        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/lichen-bufonidae/Screenshot_2023-08-07-01-05-33-89_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="lichen bufonidae Screenshot_2023-08-07-01-05-33-89_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>lichen bufonidae</i>              Screenshot_2023-08-07-01-05-33-89_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/lichen-bufonidae/Screenshot_2023-08-07-01-05-37-98_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="lichen bufonidae Screenshot_2023-08-07-01-05-37-98_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>lichen bufonidae</i>              Screenshot_2023-08-07-01-05-37-98_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/lichen-bufonidae/Screenshot_2023-08-07-01-05-42-26_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="lichen bufonidae Screenshot_2023-08-07-01-05-42-26_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>lichen bufonidae</i>              Screenshot_2023-08-07-01-05-42-26_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/lichen-bufonidae/Screenshot_2023-08-07-01-05-46-22_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="lichen bufonidae Screenshot_2023-08-07-01-05-46-22_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>lichen bufonidae</i>              Screenshot_2023-08-07-01-05-46-22_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/lichen-bufonidae/Screenshot_2023-08-07-01-05-51-53_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="lichen bufonidae Screenshot_2023-08-07-01-05-51-53_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>lichen bufonidae</i>              Screenshot_2023-08-07-01-05-51-53_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/lichen-bufonidae/Screenshot_2023-08-07-01-05-57-28_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="lichen bufonidae Screenshot_2023-08-07-01-05-57-28_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>lichen bufonidae</i>              Screenshot_2023-08-07-01-05-57-28_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/lichen-bufonidae/Screenshot_2023-08-07-01-06-02-18_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="lichen bufonidae Screenshot_2023-08-07-01-06-02-18_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>lichen bufonidae</i>              Screenshot_2023-08-07-01-06-02-18_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/lichen-bufonidae/Screenshot_2023-08-07-01-06-06-94_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="lichen bufonidae Screenshot_2023-08-07-01-06-06-94_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>lichen bufonidae</i>              Screenshot_2023-08-07-01-06-06-94_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/lichen-bufonidae/Screenshot_2023-08-07-01-06-17-19_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="lichen bufonidae Screenshot_2023-08-07-01-06-17-19_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>lichen bufonidae</i>              Screenshot_2023-08-07-01-06-17-19_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>      </div>    </div>  </div></section>]]></content>
    
    
    <summary type="html">Monster lichen bufonidae lichen bufonidae Information from Chimeraland lichen bufonidae default maximum attribute GRADE N/A N/A Attack N/A </summary>
    
    
    
    <category term="games" scheme="https://www.webmanajemen.com/categories/games/"/>
    
    <category term="chimeraland" scheme="https://www.webmanajemen.com/categories/games/chimeraland/"/>
    
    <category term="monsters" scheme="https://www.webmanajemen.com/categories/games/chimeraland/monsters/"/>
    
    
    <category term="chimeraland" scheme="https://www.webmanajemen.com/tags/chimeraland/"/>
    
    <category term="pet" scheme="https://www.webmanajemen.com/tags/pet/"/>
    
    <category term="monster" scheme="https://www.webmanajemen.com/tags/monster/"/>
    
  </entry>
  
  <entry>
    <title>Monster giant dinbear</title>
    <link href="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear.html"/>
    <id>https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear.html</id>
    <published>2023-08-06T14:00:28.000Z</published>
    <updated>2023-08-06T14:11:28.000Z</updated>
    
    <content type="html"><![CDATA[<link  rel="stylesheet"  href="https://rawcdn.githack.com/dimaslanjaka/Web-Manajemen/870a349/css/bootstrap-5-3-0-alpha3-wrapper.css"/><section id="bootstrap-wrapper">  <div data-bs-theme="dark">    <h2>giant dinbear Information from Chimeraland</h2>    <h2 id="attribute"><i>giant dinbear</i> default maximum attribute</h2>    <div class="row">      <div class="col mb-2">        <div class="card">          <div class="card-body">            <table>              <tr>                <th>GRADE</th>                <td>N/A <br />N/A</td>              </tr>              <tr>                <th>Attack</th>                <td>N/A</td>              </tr>              <tr>                <th>Health Point (HP)</th>                <td>N/A</td>              </tr>              <tr>                <th>Defense</th>                <td></td>              </tr>            </table>          </div>        </div>      </div>    </div>    <blockquote class="bd-callout bd-callout-warning">      Note: giant dinbear stat will increase based on their <b>grade</b> and      <b>delicacies/tasty</b>.    </blockquote>    <hr />    <h2 id="delicacies">Delicacies/Tasty for giant dinbear</h2>    <div class="card">      <div class="card-body">        <div class="table-responsive">          <table class="table table-striped">            <thead>              <tr>                <th>Recipe Name</th>                <th>Link</th>              </tr>            </thead>            <tbody></tbody>          </table>        </div>      </div>    </div>    <hr />    <div id="gallery">      <h2>Galleries for giant dinbear</h2>      <div class="row">        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-36-52-84_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-36-52-84_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-36-52-84_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-36-56-30_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-36-56-30_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-36-56-30_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-37-00-52_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-37-00-52_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-37-00-52_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-37-04-50_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-37-04-50_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-37-04-50_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-37-31-36_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-37-31-36_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-37-31-36_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-38-04-16_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-38-04-16_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-38-04-16_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-38-09-67_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-38-09-67_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-38-09-67_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-38-15-48_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-38-15-48_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-38-15-48_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>      </div>    </div>  </div></section>]]></content>
    
    
    <summary type="html">Monster giant dinbearlink rel=stylesheet href=https://rawcdn.githack.com/dimaslanjaka/Web-Manajemen/870a349/css/bootstrap-5-3-0-alpha3-wrapper.css / section id=bootstrap-wrapper div data-bs-theme=dark</summary>
    
    
    
    <category term="games" scheme="https://www.webmanajemen.com/categories/games/"/>
    
    <category term="chimeraland" scheme="https://www.webmanajemen.com/categories/games/chimeraland/"/>
    
    <category term="monsters" scheme="https://www.webmanajemen.com/categories/games/chimeraland/monsters/"/>
    
    
    <category term="chimeraland" scheme="https://www.webmanajemen.com/tags/chimeraland/"/>
    
    <category term="pet" scheme="https://www.webmanajemen.com/tags/pet/"/>
    
    <category term="monster" scheme="https://www.webmanajemen.com/tags/monster/"/>
    
  </entry>
  
</feed>
