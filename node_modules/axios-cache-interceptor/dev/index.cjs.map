{"version":3,"file":"dev/index.cjs","mappings":"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","sources":["webpack://axios-cache-interceptor/webpack/bootstrap","webpack://axios-cache-interceptor/webpack/runtime/define property getters","webpack://axios-cache-interceptor/webpack/runtime/hasOwnProperty shorthand","webpack://axios-cache-interceptor/webpack/runtime/make namespace object","webpack://axios-cache-interceptor/external commonjs2 \"cache-parser\"","webpack://axios-cache-interceptor/./src/header/headers.ts","webpack://axios-cache-interceptor/./src/header/interpreter.ts","webpack://axios-cache-interceptor/external commonjs2 \"fast-defer\"","webpack://axios-cache-interceptor/./src/interceptors/util.ts","webpack://axios-cache-interceptor/./src/interceptors/request.ts","webpack://axios-cache-interceptor/./src/util/cache-predicate.ts","webpack://axios-cache-interceptor/./src/util/update-cache.ts","webpack://axios-cache-interceptor/./src/interceptors/response.ts","webpack://axios-cache-interceptor/./src/storage/build.ts","webpack://axios-cache-interceptor/./src/storage/memory.ts","webpack://axios-cache-interceptor/external commonjs2 \"object-code\"","webpack://axios-cache-interceptor/./src/util/key-generator.ts","webpack://axios-cache-interceptor/./src/cache/create.ts","webpack://axios-cache-interceptor/./src/storage/web-api.ts","webpack://axios-cache-interceptor/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"cache-parser\");","export const Header = Object.freeze({\n    /**\n     * ```txt\n     * If-Modified-Since: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since\n     */\n    IfModifiedSince: 'if-modified-since',\n    /**\n     * ```txt\n     * Last-Modified: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Last-Modified\n     */\n    LastModified: 'last-modified',\n    /**\n     * ```txt\n     * If-None-Match: \"<etag_value>\"\n     * If-None-Match: \"<etag_value>\", \"<etag_value>\", …\n     * If-None-Match: *\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match\n     */\n    IfNoneMatch: 'if-none-match',\n    /**\n     * ```txt\n     * Cache-Control: max-age=604800\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n     */\n    CacheControl: 'cache-control',\n    /**\n     * ```txt\n     * Pragma: no - cache;\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Pragma\n     */\n    Pragma: 'pragma',\n    /**\n     * ```txt\n     * ETag: W / '<etag_value>';\n     * ETag: '<etag_value>';\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag\n     */\n    ETag: 'etag',\n    /**\n     * ```txt\n     * Expires: <http-date>\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expires\n     */\n    Expires: 'expires',\n    /**\n     * ```txt\n     * Age: <delta-seconds>\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Age\n     */\n    Age: 'age',\n    /**\n     * Used internally as metadata to mark the cache item as revalidatable and enabling\n     * stale cache state Contains a string of ASCII characters that can be used as ETag for\n     * `If-Match` header Provided by user using `cache.etag` value.\n     *\n     * ```txt\n     * X-Axios-Cache-Etag: \"<etag_value>\"\n     * ```\n     */\n    XAxiosCacheEtag: 'x-axios-cache-etag',\n    /**\n     * Used internally as metadata to mark the cache item as revalidatable and enabling\n     * stale cache state may contain `'use-cache-timestamp'` if `cache.modifiedSince` is\n     * `true`, otherwise will contain a date from `cache.modifiedSince`. If a date is\n     * provided, it can be used for `If-Modified-Since` header, otherwise the cache\n     * timestamp can be used for `If-Modified-Since` header.\n     *\n     * ```txt\n     * X-Axios-Cache-Last-Modified: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n     * X-Axios-Cache-Last-Modified: use-cache-timestamp\n     * ```\n     */\n    XAxiosCacheLastModified: 'x-axios-cache-last-modified',\n    /**\n     * Used internally as metadata to mark the cache item able to be used if the server\n     * returns an error. The stale-if-error response directive indicates that the cache can\n     * reuse a stale response when any error occurs.\n     *\n     * ```txt\n     * XAxiosCacheStaleIfError: <seconds>\n     * ```\n     */\n    XAxiosCacheStaleIfError: 'x-axios-cache-stale-if-error'\n});\n","import { parse } from 'cache-parser';\nimport { Header } from './headers';\nexport const defaultHeaderInterpreter = (headers) => {\n    if (!headers)\n        return 'not enough headers';\n    const cacheControl = headers[Header.CacheControl];\n    if (cacheControl) {\n        const { noCache, noStore, mustRevalidate, maxAge, immutable } = parse(String(cacheControl));\n        // Header told that this response should not be cached.\n        if (noCache || noStore) {\n            return 'dont cache';\n        }\n        if (immutable) {\n            // 1 year is sufficient, as Infinity may cause problems with certain storages.\n            // It might not be the best way, but a year is better than none.\n            return 1000 * 60 * 60 * 24 * 365;\n        }\n        // Already out of date, for cache can be saved, but must be requested again\n        if (mustRevalidate) {\n            return 0;\n        }\n        if (maxAge !== undefined) {\n            const age = headers[Header.Age];\n            if (!age) {\n                return maxAge * 1000;\n            }\n            return (maxAge - Number(age)) * 1000;\n        }\n    }\n    const expires = headers[Header.Expires];\n    if (expires) {\n        const milliseconds = Date.parse(String(expires)) - Date.now();\n        return milliseconds >= 0 ? milliseconds : 'dont cache';\n    }\n    return 'not enough headers';\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fast-defer\");","import { Header } from '../header/headers';\n/**\n * Creates a new validateStatus function that will use the one already used and also\n * accept status code 304.\n */\nexport function createValidateStatus(oldValidate) {\n    return oldValidate\n        ? (status) => oldValidate(status) || status === 304\n        : (status) => (status >= 200 && status < 300) || status === 304;\n}\n/** Checks if the given method is in the methods array */\nexport function isMethodIn(requestMethod = 'get', methodList = []) {\n    requestMethod = requestMethod.toLowerCase();\n    return methodList.some((method) => method === requestMethod);\n}\n/**\n * This function updates the cache when the request is stale. So, the next request to the\n * server will be made with proper header / settings.\n */\nexport function updateStaleRequest(cache, config) {\n    var _a;\n    config.headers || (config.headers = {});\n    const { etag, modifiedSince } = config.cache;\n    if (etag) {\n        const etagValue = etag === true ? (_a = cache.data) === null || _a === void 0 ? void 0 : _a.headers[Header.ETag] : etag;\n        etagValue && (config.headers[Header.IfNoneMatch] = etagValue);\n    }\n    if (modifiedSince) {\n        config.headers[Header.IfModifiedSince] =\n            modifiedSince === true\n                ? // If last-modified is not present, use the createdAt timestamp\n                    cache.data.headers[Header.LastModified] ||\n                        new Date(cache.createdAt).toUTCString()\n                : modifiedSince.toUTCString();\n    }\n}\n/**\n * Creates the new date to the cache by the provided response. Also handles possible 304\n * Not Modified by updating response properties.\n */\nexport function createCacheResponse(response, previousCache) {\n    if (response.status === 304 && previousCache) {\n        // Set the cache information into the response object\n        response.cached = true;\n        response.data = previousCache.data;\n        response.status = previousCache.status;\n        response.statusText = previousCache.statusText;\n        // Update possible new headers\n        response.headers = Object.assign(Object.assign({}, previousCache.headers), response.headers);\n        // return the old cache\n        return previousCache;\n    }\n    // New Response\n    return {\n        data: response.data,\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers\n    };\n}\n","import { deferred } from 'fast-defer';\nimport { Header } from '../header/headers';\nimport { createValidateStatus, isMethodIn, updateStaleRequest } from './util';\nexport function defaultRequestInterceptor(axios) {\n    const onFulfilled = async (config) => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        var _o, _p, _q, _r, _s, _t;\n        const id = (config.id = axios.generateKey(config));\n        if (config.cache === false) {\n            if (__ACI_DEV__) {\n                (_a = axios.debug) === null || _a === void 0 ? void 0 : _a.call(axios, {\n                    msg: 'Ignoring cache because config.cache === false',\n                    data: config\n                });\n            }\n            return config;\n        }\n        // merge defaults with per request configuration\n        config.cache = Object.assign(Object.assign({}, axios.defaults.cache), config.cache);\n        // Applies sufficient headers to prevent other cache systems to work along with this one\n        //\n        // Its currently used before isMethodIn because if the isMethodIn returns false, the request\n        // shouldn't be cached an therefore neither in the browser.\n        if (config.cache.cacheTakeover) {\n            (_b = config.headers) !== null && _b !== void 0 ? _b : (config.headers = {});\n            (_c = (_o = config.headers)[_p = Header.CacheControl]) !== null && _c !== void 0 ? _c : (_o[_p] = 'no-cache');\n            (_d = (_q = config.headers)[_r = Header.Pragma]) !== null && _d !== void 0 ? _d : (_q[_r] = 'no-cache');\n            (_e = (_s = config.headers)[_t = Header.Expires]) !== null && _e !== void 0 ? _e : (_s[_t] = '0');\n        }\n        if (!isMethodIn(config.method, config.cache.methods)) {\n            if (__ACI_DEV__) {\n                (_f = axios.debug) === null || _f === void 0 ? void 0 : _f.call(axios, {\n                    msg: `Ignored because method (${config.method}) is not in cache.methods (${config.cache.methods})`\n                });\n            }\n            return config;\n        }\n        // Assumes that the storage handled staled responses\n        let cache = await axios.storage.get(id, config);\n        const overrideCache = config.cache.override;\n        // Not cached, continue the request, and mark it as fetching\n        ignoreAndRequest: if (cache.state === 'empty' ||\n            cache.state === 'stale' ||\n            overrideCache) {\n            /**\n             * This checks for simultaneous access to a new key. The js event loop jumps on the\n             * first await statement, so the second (asynchronous call) request may have already\n             * started executing.\n             */\n            if (axios.waiting[id] && !overrideCache) {\n                cache = (await axios.storage.get(id, config));\n                /**\n                 * This check is required when a request has it own cache deleted manually, lets\n                 * say by a `axios.storage.delete(key)` and has a concurrent loading request.\n                 * Because in this case, the cache will be empty and may still has a pending key\n                 * on waiting map.\n                 */\n                //@ts-expect-error read above\n                if (cache.state !== 'empty') {\n                    if (__ACI_DEV__) {\n                        (_g = axios.debug) === null || _g === void 0 ? void 0 : _g.call(axios, {\n                            id,\n                            msg: 'Waiting list had an deferred for this key, waiting for it to finish'\n                        });\n                    }\n                    break ignoreAndRequest;\n                }\n            }\n            // Create a deferred to resolve other requests for the same key when it's completed\n            axios.waiting[id] = deferred();\n            /**\n             * Adds a default reject handler to catch when the request gets aborted without\n             * others waiting for it.\n             */\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            axios.waiting[id].catch(() => undefined);\n            await axios.storage.set(id, {\n                state: 'loading',\n                previous: overrideCache\n                    ? // Simply determine if the request is stale or not\n                        // based if it had previous data or not\n                        cache.data\n                            ? 'stale'\n                            : 'empty'\n                    : // Typescript doesn't know that cache.state here can only be 'empty' or 'stale'\n                        cache.state,\n                // Eslint complains a lot :)\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n                data: cache.data,\n                // If the cache is empty and asked to override it, use the current timestamp\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                createdAt: \n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                overrideCache && !cache.createdAt ? Date.now() : cache.createdAt\n            }, config);\n            if (cache.state === 'stale') {\n                updateStaleRequest(cache, config);\n                if (__ACI_DEV__) {\n                    (_h = axios.debug) === null || _h === void 0 ? void 0 : _h.call(axios, {\n                        id,\n                        msg: 'Updated stale request'\n                    });\n                }\n            }\n            config.validateStatus = createValidateStatus(config.validateStatus);\n            if (__ACI_DEV__) {\n                (_j = axios.debug) === null || _j === void 0 ? void 0 : _j.call(axios, {\n                    id,\n                    msg: 'Sending request, waiting for response',\n                    data: {\n                        overrideCache,\n                        state: cache.state\n                    }\n                });\n            }\n            return config;\n        }\n        let cachedResponse;\n        if (cache.state === 'loading') {\n            const deferred = axios.waiting[id];\n            // Just in case, the deferred doesn't exists.\n            /* istanbul ignore if 'really hard to test' */\n            if (!deferred) {\n                await axios.storage.remove(id, config);\n                return config;\n            }\n            if (__ACI_DEV__) {\n                (_k = axios.debug) === null || _k === void 0 ? void 0 : _k.call(axios, {\n                    id,\n                    msg: 'Detected concurrent request, waiting for it to finish'\n                });\n            }\n            try {\n                cachedResponse = await deferred;\n            }\n            catch (err) {\n                if (__ACI_DEV__) {\n                    (_l = axios.debug) === null || _l === void 0 ? void 0 : _l.call(axios, {\n                        id,\n                        msg: 'Deferred rejected, requesting again',\n                        data: err\n                    });\n                }\n                // The deferred is rejected when the request that we are waiting rejected cache.\n                return config;\n            }\n        }\n        else {\n            cachedResponse = cache.data;\n        }\n        // Even though the response interceptor receives this one from here,\n        // it has been configured to ignore cached responses = true\n        config.adapter = () => Promise.resolve({\n            config,\n            data: cachedResponse.data,\n            headers: cachedResponse.headers,\n            status: cachedResponse.status,\n            statusText: cachedResponse.statusText,\n            cached: true,\n            id\n        });\n        if (__ACI_DEV__) {\n            (_m = axios.debug) === null || _m === void 0 ? void 0 : _m.call(axios, {\n                id,\n                msg: 'Returning cached response'\n            });\n        }\n        return config;\n    };\n    return {\n        onFulfilled,\n        apply: () => axios.interceptors.request.use(onFulfilled)\n    };\n}\n","/** Tests an response against a {@link CachePredicateObject}. */\nexport async function testCachePredicate(response, predicate) {\n    var _a;\n    if (typeof predicate === 'function') {\n        return predicate(response);\n    }\n    const { statusCheck, responseMatch, containsHeaders } = predicate;\n    if ((statusCheck && !(await statusCheck(response.status))) ||\n        (responseMatch && !(await responseMatch(response)))) {\n        return false;\n    }\n    if (containsHeaders) {\n        for (const [header, predicate] of Object.entries(containsHeaders)) {\n            if (!(await predicate(\n            // Axios response headers are in lowercase, but check both just in case.\n            (_a = response.headers[header.toLowerCase()]) !== null && _a !== void 0 ? _a : response.headers[header]))) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","/** Function to update all caches, from CacheProperties.update, with the new data. */\nexport async function updateCache(storage, data, cacheUpdater) {\n    // Global cache update function.\n    if (typeof cacheUpdater === `function`) {\n        return cacheUpdater(data);\n    }\n    for (const [cacheKey, updater] of Object.entries(cacheUpdater)) {\n        if (updater === 'delete') {\n            await storage.remove(cacheKey, data.config);\n            continue;\n        }\n        const value = await storage.get(cacheKey, data.config);\n        if (value.state === 'loading') {\n            continue;\n        }\n        const newValue = await updater(value, data);\n        if (newValue === 'delete') {\n            await storage.remove(cacheKey, data.config);\n            continue;\n        }\n        if (newValue !== 'ignore') {\n            await storage.set(cacheKey, newValue, data.config);\n        }\n    }\n}\n","import { Header } from '../header/headers';\nimport { testCachePredicate } from '../util/cache-predicate';\nimport { updateCache } from '../util/update-cache';\nimport { createCacheResponse } from './util';\nexport function defaultResponseInterceptor(axios) {\n    /**\n     * Rejects cache for an response response.\n     *\n     * Also update the waiting list for this key by rejecting it.\n     */\n    const rejectResponse = async (responseId, config) => {\n        var _a;\n        // Updates the cache to empty to prevent infinite loading state\n        await axios.storage.remove(responseId, config);\n        // Rejects the deferred, if present\n        (_a = axios.waiting[responseId]) === null || _a === void 0 ? void 0 : _a.reject();\n        delete axios.waiting[responseId];\n    };\n    const onFulfilled = async (response) => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        var _l;\n        const id = (response.id = (_a = (_l = response.config).id) !== null && _a !== void 0 ? _a : (_l.id = axios.generateKey(response.config)));\n        (_b = response.cached) !== null && _b !== void 0 ? _b : (response.cached = false);\n        // Response is already cached\n        if (response.cached) {\n            if (__ACI_DEV__) {\n                (_c = axios.debug) === null || _c === void 0 ? void 0 : _c.call(axios, {\n                    id,\n                    msg: 'Returned cached response'\n                });\n            }\n            return response;\n        }\n        // Request interceptor merges defaults with per request configuration\n        const cacheConfig = response.config.cache;\n        // Skip cache: either false or weird behavior\n        // config.cache should always exists, at least from global config merge.\n        if (!cacheConfig) {\n            if (__ACI_DEV__) {\n                (_d = axios.debug) === null || _d === void 0 ? void 0 : _d.call(axios, {\n                    id,\n                    msg: 'Response with config.cache falsy',\n                    data: response\n                });\n            }\n            return Object.assign(Object.assign({}, response), { cached: false });\n        }\n        const config = response.config;\n        const cache = await axios.storage.get(id, config);\n        // Update other entries before updating himself\n        if (cacheConfig === null || cacheConfig === void 0 ? void 0 : cacheConfig.update) {\n            await updateCache(axios.storage, response, cacheConfig.update);\n        }\n        if (\n        // If the request interceptor had a problem or it wasn't cached\n        cache.state !== 'loading') {\n            if (__ACI_DEV__) {\n                (_e = axios.debug) === null || _e === void 0 ? void 0 : _e.call(axios, {\n                    id,\n                    msg: \"Response not cached and storage isn't loading\",\n                    data: { cache, response }\n                });\n            }\n            return response;\n        }\n        // Config told that this response should be cached.\n        if (\n        // For 'loading' values (previous: stale), this check already ran in the past.\n        !cache.data &&\n            !(await testCachePredicate(response, cacheConfig.cachePredicate))) {\n            await rejectResponse(id, config);\n            if (__ACI_DEV__) {\n                (_f = axios.debug) === null || _f === void 0 ? void 0 : _f.call(axios, {\n                    id,\n                    msg: 'Cache predicate rejected this response'\n                });\n            }\n            return response;\n        }\n        // Avoid remnant headers from remote server to break implementation\n        for (const header of Object.keys(response.headers)) {\n            if (header.startsWith('x-axios-cache')) {\n                delete response.headers[header];\n            }\n        }\n        if (cacheConfig.etag && cacheConfig.etag !== true) {\n            response.headers[Header.XAxiosCacheEtag] = cacheConfig.etag;\n        }\n        if (cacheConfig.modifiedSince) {\n            response.headers[Header.XAxiosCacheLastModified] =\n                cacheConfig.modifiedSince === true\n                    ? 'use-cache-timestamp'\n                    : cacheConfig.modifiedSince.toUTCString();\n        }\n        let ttl = cacheConfig.ttl || -1; // always set from global config\n        if (cacheConfig === null || cacheConfig === void 0 ? void 0 : cacheConfig.interpretHeader) {\n            const expirationTime = axios.headerInterpreter(response.headers);\n            // Cache should not be used\n            if (expirationTime === 'dont cache') {\n                await rejectResponse(id, config);\n                if (__ACI_DEV__) {\n                    (_g = axios.debug) === null || _g === void 0 ? void 0 : _g.call(axios, {\n                        id,\n                        msg: `Cache header interpreted as 'dont cache'`,\n                        data: { cache, response, expirationTime }\n                    });\n                }\n                return response;\n            }\n            ttl = expirationTime === 'not enough headers' ? ttl : expirationTime;\n        }\n        const data = createCacheResponse(response, cache.data);\n        if (typeof ttl === 'function') {\n            ttl = await ttl(response);\n        }\n        if (cacheConfig.staleIfError) {\n            response.headers[Header.XAxiosCacheStaleIfError] = String(ttl);\n        }\n        if (__ACI_DEV__) {\n            (_h = axios.debug) === null || _h === void 0 ? void 0 : _h.call(axios, {\n                id,\n                msg: 'Useful response configuration found',\n                data: { cacheConfig, cacheResponse: data }\n            });\n        }\n        const newCache = {\n            state: 'cached',\n            ttl,\n            createdAt: Date.now(),\n            data\n        };\n        // Resolve all other requests waiting for this response\n        const waiting = axios.waiting[id];\n        if (waiting) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            waiting.resolve(newCache.data);\n            delete axios.waiting[id];\n            if (__ACI_DEV__) {\n                (_j = axios.debug) === null || _j === void 0 ? void 0 : _j.call(axios, {\n                    id,\n                    msg: 'Found waiting deferred(s) and resolved them'\n                });\n            }\n        }\n        // Define this key as cache on the storage\n        await axios.storage.set(id, newCache, config);\n        if (__ACI_DEV__) {\n            (_k = axios.debug) === null || _k === void 0 ? void 0 : _k.call(axios, {\n                id,\n                msg: 'Response cached',\n                data: { cache: newCache, response }\n            });\n        }\n        // Return the response with cached as false, because it was not cached at all\n        return response;\n    };\n    const onRejected = async (error) => {\n        var _a, _b, _c, _d, _e, _f;\n        const config = error.config;\n        // config.cache should always exists, at least from global config merge.\n        if (!(config === null || config === void 0 ? void 0 : config.cache) || !config.id) {\n            if (__ACI_DEV__) {\n                (_a = axios.debug) === null || _a === void 0 ? void 0 : _a.call(axios, {\n                    msg: 'Web request returned an error but cache handling is not enabled',\n                    data: { error }\n                });\n            }\n            throw error;\n        }\n        const cache = await axios.storage.get(config.id, config);\n        const cacheConfig = config.cache;\n        if (\n        // This will only not be loading if the interceptor broke\n        cache.state !== 'loading' ||\n            cache.previous !== 'stale') {\n            await rejectResponse(config.id, config);\n            if (__ACI_DEV__) {\n                (_b = axios.debug) === null || _b === void 0 ? void 0 : _b.call(axios, {\n                    msg: 'Caught an error in the request interceptor',\n                    data: { error, config }\n                });\n            }\n            throw error;\n        }\n        if (cacheConfig === null || cacheConfig === void 0 ? void 0 : cacheConfig.staleIfError) {\n            const staleIfError = typeof cacheConfig.staleIfError === 'function'\n                ? await cacheConfig.staleIfError(error.response, cache, error)\n                : cacheConfig.staleIfError;\n            if (__ACI_DEV__) {\n                (_c = axios.debug) === null || _c === void 0 ? void 0 : _c.call(axios, {\n                    msg: 'Found cache if stale config for rejected response',\n                    data: { error, config, staleIfError }\n                });\n            }\n            if (staleIfError === true ||\n                // staleIfError is the number of seconds that stale is allowed to be used\n                (typeof staleIfError === 'number' && cache.createdAt + staleIfError > Date.now())) {\n                // Resolve all other requests waiting for this response\n                (_d = axios.waiting[config.id]) === null || _d === void 0 ? void 0 : _d.resolve(cache.data);\n                delete axios.waiting[config.id];\n                // re-mark the cache as stale\n                await axios.storage.set(config.id, {\n                    state: 'stale',\n                    createdAt: Date.now(),\n                    data: cache.data\n                }, config);\n                if (__ACI_DEV__) {\n                    (_e = axios.debug) === null || _e === void 0 ? void 0 : _e.call(axios, {\n                        msg: 'staleIfError resolved this response with cached data',\n                        data: { error, config, cache }\n                    });\n                }\n                return {\n                    cached: true,\n                    config,\n                    id: config.id,\n                    data: cache.data.data,\n                    headers: cache.data.headers,\n                    status: cache.data.status,\n                    statusText: cache.data.statusText\n                };\n            }\n        }\n        if (__ACI_DEV__) {\n            (_f = axios.debug) === null || _f === void 0 ? void 0 : _f.call(axios, {\n                msg: 'Received an unknown error that could not be handled',\n                data: { error, config }\n            });\n        }\n        throw error;\n    };\n    return {\n        onFulfilled,\n        onRejected,\n        apply: () => axios.interceptors.response.use(onFulfilled, onRejected)\n    };\n}\n","import { Header } from '../header/headers';\n/** Returns true if the provided object was created from {@link buildStorage} function. */\nexport const isStorage = (obj) => !!obj && !!obj['is-storage'];\n/** Returns true if this has sufficient properties to stale instead of expire. */\nexport function canStale(value) {\n    const headers = value.data.headers;\n    return (Header.ETag in headers ||\n        Header.LastModified in headers ||\n        Header.XAxiosCacheEtag in headers ||\n        Header.XAxiosCacheStaleIfError in headers ||\n        Header.XAxiosCacheLastModified in headers);\n}\n/**\n * Checks if the provided cache is expired. You should also check if the cache\n * {@link canStale}\n */\nexport function isExpired(value) {\n    return value.createdAt + value.ttl <= Date.now();\n}\n/**\n * Builds a custom storage.\n *\n * **Note**: You can only create an custom storage with this function.\n *\n * @example\n *\n * ```js\n * const myStorage = buildStorage({\n *   find: () => {...},\n *   set: () => {...},\n *   remove: () => {...}\n * });\n *\n * const axios = setupCache(axios, { storage: myStorage });\n * ```\n */\nexport function buildStorage({ set, find, remove }) {\n    return {\n        //@ts-expect-error - we don't want to expose thi\n        ['is-storage']: 1,\n        set,\n        remove,\n        get: async (key, config) => {\n            const value = await find(key, config);\n            if (!value) {\n                return { state: 'empty' };\n            }\n            if (\n            // Not cached or fresh value\n            value.state !== 'cached' ||\n                !isExpired(value)) {\n                return value;\n            }\n            if (canStale(value)) {\n                const stale = {\n                    state: 'stale',\n                    createdAt: value.createdAt,\n                    data: value.data\n                };\n                await set(key, stale, config);\n                return stale;\n            }\n            await remove(key, config);\n            return { state: 'empty' };\n        }\n    };\n}\n","import { buildStorage } from './build';\n/**\n * Creates a simple in-memory storage. This means that if you need to persist data between\n * page or server reloads, this will not help.\n *\n * This is the storage used by default.\n *\n * If you need to modify it's data, you can do by the `data` property.\n *\n * @example\n *\n * ```js\n * const memoryStorage = buildMemoryStorage();\n *\n * setupCache(axios, { storage: memoryStorage });\n *\n * // Simple example to force delete the request cache\n *\n * const { id } = axios.get('url');\n *\n * delete memoryStorage.data[id];\n * ```\n *\n * @param {boolean} cloneData If the data returned by `find()` should be cloned to avoid\n *   mutating the original data outside the `set()` method.\n */\nexport function buildMemoryStorage(cloneData = false) {\n    const storage = buildStorage({\n        set: (key, value) => {\n            storage.data[key] = value;\n        },\n        remove: (key) => {\n            delete storage.data[key];\n        },\n        find: (key) => {\n            const value = storage.data[key];\n            if (cloneData && value !== undefined) {\n                /* istanbul ignore if 'only available on super recent browsers' */\n                if (typeof structuredClone === 'function') {\n                    return structuredClone(value);\n                }\n                return JSON.parse(JSON.stringify(value));\n            }\n            return value;\n        }\n    });\n    storage.data = Object.create(null);\n    return storage;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"object-code\");","import { hash } from 'object-code';\n// Remove first and last '/' char, if present\nconst SLASHES_REGEX = /^\\/|\\/$/g;\n/**\n * Builds an generator that receives a {@link CacheRequestConfig} and returns a value\n * hashed by {@link hash}.\n *\n * The value is hashed into a signed integer when the returned value from the provided\n * generator is not a `string` or a `number`.\n *\n * You can return any type of data structure.\n *\n * @example\n *\n * ```js\n * // This generator will return a hash code.\n * // The code will only be the same if url, method and data are the same.\n * const generator = buildKeyGenerator(({ url, method, data }) => ({\n *   url,\n *   method,\n *   data\n * }));\n * ```\n */\nexport function buildKeyGenerator(generator) {\n    return (request) => {\n        if (request.id) {\n            return request.id;\n        }\n        const key = generator(request);\n        if (typeof key === 'string' || typeof key === 'number') {\n            return `${key}`;\n        }\n        return `${hash(key)}`;\n    };\n}\nexport const defaultKeyGenerator = buildKeyGenerator(({ baseURL = '', url = '', method = 'get', params, data }) => {\n    // Remove trailing slashes to avoid generating different keys for the \"same\" final url.\n    baseURL && (baseURL = baseURL.replace(SLASHES_REGEX, ''));\n    url && (url = url.replace(SLASHES_REGEX, ''));\n    // lowercase method\n    method && (method = method.toLowerCase());\n    return {\n        url: baseURL + (baseURL && url ? '/' : '') + url,\n        params: params,\n        method,\n        data\n    };\n});\n","import { defaultHeaderInterpreter } from '../header/interpreter';\nimport { defaultRequestInterceptor } from '../interceptors/request';\nimport { defaultResponseInterceptor } from '../interceptors/response';\nimport { isStorage } from '../storage/build';\nimport { buildMemoryStorage } from '../storage/memory';\nimport { defaultKeyGenerator } from '../util/key-generator';\n/**\n * Apply the caching interceptors for a already created axios instance.\n *\n * @example\n *\n * ```ts\n * import Axios from 'axios';\n * import { setupCache, AxiosCacheInstance } from 'axios-cache-interceptor';\n *\n * // instance will have our custom typings from the return of this function\n * const instance = setupCache(\n *   Axios.create({\n *     // Axios options\n *   }),\n *   {\n *     // Axios-cache-interceptor options\n *   }\n * );\n *\n * // OR\n *\n * const instance = axios.create({\n *   // Axios options\n * }) as AxiosCacheInstance;\n *\n * // As this functions returns the same axios instance but only with\n * // different typings, you can ignore the function return.\n * setupCache(instance, {\n *   // Axios-cache-interceptor options\n * });\n * ```\n *\n * @param axios The already created axios instance\n * @param config The config for the caching interceptors\n * @returns The same instance with extended typescript types.\n */\nexport function setupCache(axios, options = {}) {\n    var _a, _b, _c, _d, _e, _f;\n    const axiosCache = axios;\n    axiosCache.storage = options.storage || buildMemoryStorage();\n    if (!isStorage(axiosCache.storage)) {\n        throw new Error('Use buildStorage() function');\n    }\n    axiosCache.waiting = options.waiting || {};\n    axiosCache.generateKey = options.generateKey || defaultKeyGenerator;\n    axiosCache.headerInterpreter = options.headerInterpreter || defaultHeaderInterpreter;\n    axiosCache.requestInterceptor =\n        options.requestInterceptor || defaultRequestInterceptor(axiosCache);\n    axiosCache.responseInterceptor =\n        options.responseInterceptor || defaultResponseInterceptor(axiosCache);\n    axiosCache.debug = options.debug;\n    // CacheRequestConfig values\n    axiosCache.defaults.cache = {\n        update: options.update || {},\n        ttl: (_a = options.ttl) !== null && _a !== void 0 ? _a : 1000 * 60 * 5,\n        methods: options.methods || ['get'],\n        cachePredicate: options.cachePredicate || {\n            statusCheck: (status) => status >= 200 && status < 400\n        },\n        etag: (_b = options.etag) !== null && _b !== void 0 ? _b : true,\n        // This option is going to be ignored by servers when ETag is enabled\n        // Checks strict equality to false to avoid undefined-ish values\n        modifiedSince: (_c = options.modifiedSince) !== null && _c !== void 0 ? _c : options.etag === false,\n        interpretHeader: (_d = options.interpretHeader) !== null && _d !== void 0 ? _d : true,\n        cacheTakeover: (_e = options.cacheTakeover) !== null && _e !== void 0 ? _e : true,\n        staleIfError: (_f = options.staleIfError) !== null && _f !== void 0 ? _f : true,\n        override: false\n    };\n    // Apply interceptors\n    axiosCache.requestInterceptor.apply();\n    axiosCache.responseInterceptor.apply();\n    return axiosCache;\n}\n","import { buildStorage, canStale, isExpired } from './build';\n/**\n * Creates a simple storage. You can persist his data by using `sessionStorage` or\n * `localStorage` with it.\n *\n * **ImplNote**: Without polyfill, this storage only works on browser environments.\n *\n * @example\n *\n * ```js\n * const fromLocalStorage = buildWebStorage(localStorage);\n * const fromSessionStorage = buildWebStorage(sessionStorage);\n *\n * const myStorage = new Storage();\n * const fromMyStorage = buildWebStorage(myStorage);\n * ```\n *\n * @param storage The type of web storage to use. localStorage or sessionStorage.\n * @param prefix The prefix to index the storage. Useful to prevent collision between\n *   multiple places using the same storage.\n */\nexport function buildWebStorage(storage, prefix = 'axios-cache-') {\n    return buildStorage({\n        find: (key) => {\n            const json = storage.getItem(prefix + key);\n            return json ? JSON.parse(json) : undefined;\n        },\n        remove: (key) => {\n            storage.removeItem(prefix + key);\n        },\n        set: (key, value) => {\n            const save = () => storage.setItem(prefix + key, JSON.stringify(value));\n            try {\n                return save();\n            }\n            catch (error) {\n                const allValues = Object.entries(storage)\n                    .filter((item) => item[0].startsWith(prefix))\n                    .map((item) => [item[0], JSON.parse(item[1])]);\n                // Remove all expired values\n                for (const value of allValues) {\n                    if (value[1].state === 'cached' && isExpired(value[1]) && !canStale(value[1])) {\n                        storage.removeItem(value[0]);\n                    }\n                }\n                // Try save again after removing expired values\n                try {\n                    return save();\n                }\n                catch (_a) {\n                    // Storage still full, try removing the oldest value until it can be saved\n                    // Descending sort by createdAt\n                    const sortedItems = allValues.sort((a, b) => (a[1].createdAt || 0) - (b[1].createdAt || 0));\n                    for (const item of sortedItems) {\n                        storage.removeItem(item[0]);\n                        try {\n                            return save();\n                        }\n                        catch (_b) {\n                            // This key didn't free all the required space\n                        }\n                    }\n                }\n                // Clear the cache for the specified key\n                storage.removeItem(prefix + key);\n            }\n        }\n    });\n}\n","export * from './cache/axios';\nexport * from './cache/cache';\nexport * from './cache/create';\nexport * from './header/headers';\nexport * from './header/interpreter';\nexport * from './header/types';\nexport * from './interceptors/build';\nexport * from './interceptors/request';\nexport * from './interceptors/response';\nexport * from './interceptors/util';\nexport * from './storage/build';\nexport * from './storage/memory';\nexport * from './storage/types';\nexport * from './storage/web-api';\nexport * from './util/cache-predicate';\nexport * from './util/key-generator';\nexport * from './util/types';\nexport * from './util/update-cache';\nif (__ACI_DEV__) {\n    console.error('You are using a development build. Make sure to use the correct build in production\\nhttps://axios-cache-interceptor.js.org/#/pages/installing\\n\\n');\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","Header","freeze","IfModifiedSince","LastModified","IfNoneMatch","CacheControl","Pragma","ETag","Expires","Age","XAxiosCacheEtag","XAxiosCacheLastModified","XAxiosCacheStaleIfError","defaultHeaderInterpreter","headers","cacheControl","noCache","noStore","mustRevalidate","maxAge","immutable","parse","String","undefined","age","Number","expires","milliseconds","Date","now","createValidateStatus","oldValidate","status","isMethodIn","requestMethod","methodList","toLowerCase","some","method","updateStaleRequest","cache","config","_a","etag","modifiedSince","etagValue","data","createdAt","toUTCString","createCacheResponse","response","previousCache","cached","statusText","assign","defaultRequestInterceptor","axios","onFulfilled","async","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","id","generateKey","debug","msg","defaults","cacheTakeover","methods","storage","overrideCache","override","ignoreAndRequest","state","waiting","deferred","catch","set","previous","validateStatus","cachedResponse","remove","err","adapter","Promise","resolve","apply","interceptors","request","use","testCachePredicate","predicate","statusCheck","responseMatch","containsHeaders","header","entries","updateCache","cacheUpdater","cacheKey","updater","newValue","defaultResponseInterceptor","rejectResponse","responseId","reject","cacheConfig","update","cachePredicate","keys","startsWith","ttl","interpretHeader","expirationTime","headerInterpreter","staleIfError","cacheResponse","newCache","onRejected","error","isStorage","canStale","isExpired","buildStorage","find","stale","buildMemoryStorage","cloneData","structuredClone","JSON","stringify","create","SLASHES_REGEX","buildKeyGenerator","generator","hash","defaultKeyGenerator","baseURL","url","params","replace","setupCache","options","axiosCache","Error","requestInterceptor","responseInterceptor","buildWebStorage","prefix","json","getItem","removeItem","save","setItem","allValues","filter","item","map","sortedItems","sort","a","b","console"],"sourceRoot":""}