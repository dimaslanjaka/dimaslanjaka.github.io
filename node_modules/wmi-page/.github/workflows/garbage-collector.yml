name: Garbage Collector

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - '**/*.tgz'
      - '**/*.gz'
      - '**/*.zip'
      - '**garbage-collector**'
      - '**/.git*'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions: read-all

# cancel previous workflows, run only one workflow
concurrency:
  group: 'garbage-collector'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: read-all
    timeout-minutes: 120

    steps:
      - uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: 'Asia/Jakarta'
          timezoneMacos: 'Asia/Jakarta'
          timezoneWindows: 'Western Indonesia Time'
      - uses: actions/checkout@v3
        with:
          ref: master
          token: '${{ secrets.ACCESS_TOKEN }}'
          submodules: recursive
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: install git-filter-repo
        run: |
          python3 -m pip install --user git-filter-repo
      - name: set env
        id: set-env
        shell: bash
        run: |
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          echo "GITHUB_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "GITHUB_COMMIT_URL=https://github.com/${{github.repository}}/commit/$(echo $GITHUB_SHA)" >> $GITHUB_ENV
          echo "GITHUB_RUNNER_URL=https://github.com/${{github.repository}}/commit/${{github.sha}}/checks/${{github.run_id}}" >> $GITHUB_ENV
      - run: git reflog expire --all --expire=now
      - run: git gc --prune=now --aggressive
      - shell: bash
        name: filter large files
        run: |
          # Find the largest files in .git:
          git rev-list --objects --all | grep -f <(git verify-pack -v  .git/objects/pack/*.idx| sort -k 3 -n | cut -f 1 -d " " | tail -10)
          # Start filtering these large files:
          git filter-repo --path-glob '*.zip' --invert-paths --force
          git filter-repo --path-glob '*.tgz' --invert-paths --force
          git filter-repo --path-glob '*.gz' --invert-paths --force
          git filter-repo --path-glob '*.tar' --invert-paths --force
          git filter-repo --path-glob '*.rar' --invert-paths --force

      - name: push changes
        shell: bash
        id: push-manual
        continue-on-error: true
        run: |
          git config --global user.name 'dimaslanjaka'
          git config --global user.email 'dimaslanjaka@gmail.com'
          git add .
          git commit -m "Update build from ${{ env.GITHUB_COMMIT_URL }}" -m "commit hash: ${{ env.GITHUB_SHA_SHORT }}" -m "commit url: ${{ env.GITHUB_COMMIT_URL }}" -m "runner: ${{ env.GITHUB_RUNNER_URL }}"
          git push --all
          git push --tags
          # git push --all --force
          # git push --tags --force
