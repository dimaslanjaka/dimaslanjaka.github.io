{"version":3,"file":"dev/index.bundle.js","mappings":"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","sources":["webpack://AxiosCacheInterceptor/webpack/universalModuleDefinition","webpack://AxiosCacheInterceptor/webpack/bootstrap","webpack://AxiosCacheInterceptor/webpack/runtime/define property getters","webpack://AxiosCacheInterceptor/webpack/runtime/hasOwnProperty shorthand","webpack://AxiosCacheInterceptor/webpack/runtime/make namespace object","webpack://AxiosCacheInterceptor/./node_modules/.pnpm/cache-parser@1.2.4/node_modules/cache-parser/dist/index.mjs","webpack://AxiosCacheInterceptor/./src/header/headers.ts","webpack://AxiosCacheInterceptor/./src/header/interpreter.ts","webpack://AxiosCacheInterceptor/./node_modules/.pnpm/fast-defer@1.1.7/node_modules/fast-defer/dist/index.mjs","webpack://AxiosCacheInterceptor/./src/interceptors/util.ts","webpack://AxiosCacheInterceptor/./src/interceptors/request.ts","webpack://AxiosCacheInterceptor/./src/util/cache-predicate.ts","webpack://AxiosCacheInterceptor/./src/util/update-cache.ts","webpack://AxiosCacheInterceptor/./src/interceptors/response.ts","webpack://AxiosCacheInterceptor/./src/storage/build.ts","webpack://AxiosCacheInterceptor/./src/storage/memory.ts","webpack://AxiosCacheInterceptor/./node_modules/.pnpm/object-code@1.3.0/node_modules/object-code/dist/index.mjs","webpack://AxiosCacheInterceptor/./src/util/key-generator.ts","webpack://AxiosCacheInterceptor/./src/cache/create.ts","webpack://AxiosCacheInterceptor/./src/storage/web-api.ts","webpack://AxiosCacheInterceptor/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AxiosCacheInterceptor\"] = factory();\n\telse\n\t\troot[\"AxiosCacheInterceptor\"] = factory();\n})(typeof self !== 'undefined' ? self : this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var e=Symbol(\"cache-parser\");function a(e){return(\"string\"==typeof e||\"number\"==typeof e)&&(e=Number(e))>=0&&e<Infinity}function r(e){return!0===e||\"number\"==typeof e||\"string\"==typeof e&&\"false\"!==e}var t=Number;function s(s){var n=Object.defineProperty({},e,{enumerable:!1,value:1});if(!s||\"string\"!=typeof s)return n;var i=function(e){var a={},r=e.toLowerCase().replace(/\\s+/g,\"\").split(\",\");for(var t in r){var s,n=r[t].split(\"=\",2);a[n[0]]=null==(s=n[1])||s}return a}(s),u=i[\"max-age\"],l=i[\"max-stale\"],o=i[\"min-fresh\"],m=i[\"s-maxage\"],p=i[\"stale-if-error\"],h=i[\"stale-while-revalidate\"];return r(i.immutable)&&(n.immutable=!0),a(u)&&(n.maxAge=t(u)),a(l)&&(n.maxStale=t(l)),a(o)&&(n.minFresh=t(o)),r(i[\"must-revalidate\"])&&(n.mustRevalidate=!0),r(i[\"must-understand\"])&&(n.mustUnderstand=!0),r(i[\"no-cache\"])&&(n.noCache=!0),r(i[\"no-store\"])&&(n.noStore=!0),r(i[\"no-transform\"])&&(n.noTransform=!0),r(i[\"only-if-cached\"])&&(n.onlyIfCached=!0),r(i.private)&&(n.private=!0),r(i[\"proxy-revalidate\"])&&(n.proxyRevalidate=!0),r(i.public)&&(n.public=!0),a(m)&&(n.sMaxAge=t(m)),a(p)&&(n.staleIfError=t(p)),a(h)&&(n.staleWhileRevalidate=t(h)),n}function n(e){if(!e||\"object\"!=typeof e)return[];var t=[];return r(e.immutable)&&t.push(\"immutable\"),a(e.maxAge)&&t.push(\"max-age=\"+e.maxAge),a(e.maxStale)&&t.push(\"max-stale=\"+e.maxStale),a(e.minFresh)&&t.push(\"min-fresh=\"+e.minFresh),r(e.mustRevalidate)&&t.push(\"must-revalidate\"),r(e.mustUnderstand)&&t.push(\"must-understand\"),r(e.noCache)&&t.push(\"no-cache\"),r(e.noStore)&&t.push(\"no-store\"),r(e.noTransform)&&t.push(\"no-transform\"),r(e.onlyIfCached)&&t.push(\"only-if-cached\"),r(e.private)&&t.push(\"private\"),r(e.proxyRevalidate)&&t.push(\"proxy-revalidate\"),r(e.public)&&t.push(\"public\"),a(e.sMaxAge)&&t.push(\"s-maxage=\"+e.sMaxAge),a(e.staleIfError)&&t.push(\"stale-if-error=\"+e.staleIfError),a(e.staleWhileRevalidate)&&t.push(\"stale-while-revalidate=\"+e.staleWhileRevalidate),t}function i(a){return!!a&&!!a[e]}export{i as isCacheControl,s as parse,n as tokenize};\n//# sourceMappingURL=index.mjs.map\n","export const Header = Object.freeze({\n    /**\n     * ```txt\n     * If-Modified-Since: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since\n     */\n    IfModifiedSince: 'if-modified-since',\n    /**\n     * ```txt\n     * Last-Modified: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Last-Modified\n     */\n    LastModified: 'last-modified',\n    /**\n     * ```txt\n     * If-None-Match: \"<etag_value>\"\n     * If-None-Match: \"<etag_value>\", \"<etag_value>\", …\n     * If-None-Match: *\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match\n     */\n    IfNoneMatch: 'if-none-match',\n    /**\n     * ```txt\n     * Cache-Control: max-age=604800\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n     */\n    CacheControl: 'cache-control',\n    /**\n     * ```txt\n     * Pragma: no - cache;\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Pragma\n     */\n    Pragma: 'pragma',\n    /**\n     * ```txt\n     * ETag: W / '<etag_value>';\n     * ETag: '<etag_value>';\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag\n     */\n    ETag: 'etag',\n    /**\n     * ```txt\n     * Expires: <http-date>\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expires\n     */\n    Expires: 'expires',\n    /**\n     * ```txt\n     * Age: <delta-seconds>\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Age\n     */\n    Age: 'age',\n    /**\n     * Used internally as metadata to mark the cache item as revalidatable and enabling\n     * stale cache state Contains a string of ASCII characters that can be used as ETag for\n     * `If-Match` header Provided by user using `cache.etag` value.\n     *\n     * ```txt\n     * X-Axios-Cache-Etag: \"<etag_value>\"\n     * ```\n     */\n    XAxiosCacheEtag: 'x-axios-cache-etag',\n    /**\n     * Used internally as metadata to mark the cache item as revalidatable and enabling\n     * stale cache state may contain `'use-cache-timestamp'` if `cache.modifiedSince` is\n     * `true`, otherwise will contain a date from `cache.modifiedSince`. If a date is\n     * provided, it can be used for `If-Modified-Since` header, otherwise the cache\n     * timestamp can be used for `If-Modified-Since` header.\n     *\n     * ```txt\n     * X-Axios-Cache-Last-Modified: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n     * X-Axios-Cache-Last-Modified: use-cache-timestamp\n     * ```\n     */\n    XAxiosCacheLastModified: 'x-axios-cache-last-modified',\n    /**\n     * Used internally as metadata to mark the cache item able to be used if the server\n     * returns an error. The stale-if-error response directive indicates that the cache can\n     * reuse a stale response when any error occurs.\n     *\n     * ```txt\n     * XAxiosCacheStaleIfError: <seconds>\n     * ```\n     */\n    XAxiosCacheStaleIfError: 'x-axios-cache-stale-if-error'\n});\n","import { parse } from 'cache-parser';\nimport { Header } from './headers';\nexport const defaultHeaderInterpreter = (headers) => {\n    if (!headers)\n        return 'not enough headers';\n    const cacheControl = headers[Header.CacheControl];\n    if (cacheControl) {\n        const { noCache, noStore, maxAge, maxStale, immutable, staleWhileRevalidate } = parse(String(cacheControl));\n        // Header told that this response should not be cached.\n        if (noCache || noStore) {\n            return 'dont cache';\n        }\n        if (immutable) {\n            // 1 year is sufficient, as Infinity may cause problems with certain storages.\n            // It might not be the best way, but a year is better than none. Facebook shows\n            // that a browser session stays at the most 1 month.\n            return {\n                cache: 1000 * 60 * 60 * 24 * 365\n            };\n        }\n        if (maxAge !== undefined) {\n            const age = headers[Header.Age];\n            return {\n                cache: age\n                    ? // If age is present, we must subtract it from maxAge\n                        (maxAge - Number(age)) * 1000\n                    : maxAge * 1000,\n                // Already out of date, must be requested again\n                stale: \n                // I couldn't find any documentation about who should be used, as they\n                // are not meant to overlap each other. But, as we cannot request in the\n                // background, as the stale-while-revalidate says, and we just increase\n                // its staleTtl when its present, max-stale is being preferred over\n                // stale-while-revalidate.\n                maxStale !== undefined\n                    ? maxStale * 1000\n                    : staleWhileRevalidate !== undefined\n                        ? staleWhileRevalidate * 1000\n                        : undefined\n            };\n        }\n    }\n    const expires = headers[Header.Expires];\n    if (expires) {\n        const milliseconds = Date.parse(String(expires)) - Date.now();\n        return milliseconds >= 0 ? { cache: milliseconds } : 'dont cache';\n    }\n    return 'not enough headers';\n};\n","var r=Symbol();function e(){var e,n,o=new Promise(function(r,o){e=r,n=o});return o.resolve=e,o.reject=n,o[r]=1,o}function n(e){return!!e&&!!e[r]}export{e as deferred,n as isDeferred};\n//# sourceMappingURL=index.mjs.map\n","import { Header } from '../header/headers';\n/**\n * Creates a new validateStatus function that will use the one already used and also\n * accept status code 304.\n */\nexport function createValidateStatus(oldValidate) {\n    return oldValidate\n        ? (status) => oldValidate(status) || status === 304\n        : (status) => (status >= 200 && status < 300) || status === 304;\n}\n/** Checks if the given method is in the methods array */\nexport function isMethodIn(requestMethod = 'get', methodList = []) {\n    requestMethod = requestMethod.toLowerCase();\n    return methodList.some((method) => method === requestMethod);\n}\n/**\n * This function updates the cache when the request is stale. So, the next request to the\n * server will be made with proper header / settings.\n */\nexport function updateStaleRequest(cache, config) {\n    var _a;\n    config.headers || (config.headers = {});\n    const { etag, modifiedSince } = config.cache;\n    if (etag) {\n        const etagValue = etag === true ? (_a = cache.data) === null || _a === void 0 ? void 0 : _a.headers[Header.ETag] : etag;\n        if (etagValue) {\n            config.headers[Header.IfNoneMatch] = etagValue;\n        }\n    }\n    if (modifiedSince) {\n        config.headers[Header.IfModifiedSince] =\n            modifiedSince === true\n                ? // If last-modified is not present, use the createdAt timestamp\n                    cache.data.headers[Header.LastModified] ||\n                        new Date(cache.createdAt).toUTCString()\n                : modifiedSince.toUTCString();\n    }\n}\n/**\n * Creates the new date to the cache by the provided response. Also handles possible 304\n * Not Modified by updating response properties.\n */\nexport function createCacheResponse(response, previousCache) {\n    if (response.status === 304 && previousCache) {\n        // Set the cache information into the response object\n        response.cached = true;\n        response.data = previousCache.data;\n        response.status = previousCache.status;\n        response.statusText = previousCache.statusText;\n        // Update possible new headers\n        response.headers = Object.assign(Object.assign({}, previousCache.headers), response.headers);\n        // return the old cache\n        return previousCache;\n    }\n    // New Response\n    return {\n        data: response.data,\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers\n    };\n}\n","import { deferred } from 'fast-defer';\nimport { Header } from '../header/headers';\nimport { createValidateStatus, isMethodIn, updateStaleRequest } from './util';\nexport function defaultRequestInterceptor(axios) {\n    const onFulfilled = async (config) => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        var _k, _l, _m, _o, _p, _q;\n        config.id = axios.generateKey(config);\n        if (config.cache === false) {\n            if (__ACI_DEV__) {\n                axios.debug({\n                    msg: 'Ignoring cache because config.cache === false',\n                    data: config\n                });\n            }\n            return config;\n        }\n        // merge defaults with per request configuration\n        config.cache = Object.assign(Object.assign({}, axios.defaults.cache), config.cache);\n        // Applies sufficient headers to prevent other cache systems to work along with this one\n        //\n        // Its currently used before isMethodIn because if the isMethodIn returns false, the request\n        // shouldn't be cached an therefore neither in the browser.\n        if (config.cache.cacheTakeover) {\n            (_a = (_k = config.headers)[_l = Header.CacheControl]) !== null && _a !== void 0 ? _a : (_k[_l] = 'no-cache');\n            (_b = (_m = config.headers)[_o = Header.Pragma]) !== null && _b !== void 0 ? _b : (_m[_o] = 'no-cache');\n            (_c = (_p = config.headers)[_q = Header.Expires]) !== null && _c !== void 0 ? _c : (_p[_q] = '0');\n        }\n        if (!isMethodIn(config.method, config.cache.methods)) {\n            if (__ACI_DEV__) {\n                axios.debug({\n                    msg: `Ignored because method (${config.method}) is not in cache.methods (${config.cache.methods})`\n                });\n            }\n            return config;\n        }\n        // Assumes that the storage handled staled responses\n        let cache = await axios.storage.get(config.id, config);\n        const overrideCache = config.cache.override;\n        // Not cached, continue the request, and mark it as fetching\n        ignoreAndRequest: if (cache.state === 'empty' ||\n            cache.state === 'stale' ||\n            overrideCache) {\n            /**\n             * This checks for simultaneous access to a new key. The js event loop jumps on the\n             * first await statement, so the second (asynchronous call) request may have already\n             * started executing.\n             */\n            if (axios.waiting[config.id] && !overrideCache) {\n                cache = (await axios.storage.get(config.id, config));\n                /**\n                 * This check is required when a request has it own cache deleted manually, lets\n                 * say by a `axios.storage.delete(key)` and has a concurrent loading request.\n                 * Because in this case, the cache will be empty and may still has a pending key\n                 * on waiting map.\n                 */\n                //@ts-expect-error read above\n                if (cache.state !== 'empty') {\n                    if (__ACI_DEV__) {\n                        axios.debug({\n                            id: config.id,\n                            msg: 'Waiting list had an deferred for this key, waiting for it to finish'\n                        });\n                    }\n                    break ignoreAndRequest;\n                }\n            }\n            // Create a deferred to resolve other requests for the same key when it's completed\n            axios.waiting[config.id] = deferred();\n            /**\n             * Adds a default reject handler to catch when the request gets aborted without\n             * others waiting for it.\n             */\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            axios.waiting[config.id].catch(() => undefined);\n            await axios.storage.set(config.id, {\n                state: 'loading',\n                previous: overrideCache\n                    ? // Simply determine if the request is stale or not\n                        // based if it had previous data or not\n                        cache.data\n                            ? 'stale'\n                            : 'empty'\n                    : // Typescript doesn't know that cache.state here can only be 'empty' or 'stale'\n                        cache.state,\n                // Eslint complains a lot :)\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n                data: cache.data,\n                // If the cache is empty and asked to override it, use the current timestamp\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                createdAt: \n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                overrideCache && !cache.createdAt ? Date.now() : cache.createdAt\n            }, config);\n            if (cache.state === 'stale') {\n                updateStaleRequest(cache, config);\n                if (__ACI_DEV__) {\n                    axios.debug({\n                        id: config.id,\n                        msg: 'Updated stale request'\n                    });\n                }\n            }\n            config.validateStatus = createValidateStatus(config.validateStatus);\n            if (__ACI_DEV__) {\n                axios.debug({\n                    id: config.id,\n                    msg: 'Sending request, waiting for response',\n                    data: {\n                        overrideCache,\n                        state: cache.state\n                    }\n                });\n            }\n            // Hydrates any UI temporarily, if cache is available\n            if (cache.state === 'stale' || cache.data) {\n                await ((_e = (_d = config.cache).hydrate) === null || _e === void 0 ? void 0 : _e.call(_d, cache));\n            }\n            return config;\n        }\n        let cachedResponse;\n        if (cache.state === 'loading') {\n            const deferred = axios.waiting[config.id];\n            // The deferred may not exists when the process is using a persistent\n            // storage and cancelled  in the middle of a request, this would result in\n            // a pending loading state in the storage but no current promises to resolve\n            if (!deferred) {\n                // Hydrates any UI temporarily, if cache is available\n                if (cache.data) {\n                    await ((_g = (_f = config.cache).hydrate) === null || _g === void 0 ? void 0 : _g.call(_f, cache));\n                }\n                return config;\n            }\n            if (__ACI_DEV__) {\n                axios.debug({\n                    id: config.id,\n                    msg: 'Detected concurrent request, waiting for it to finish'\n                });\n            }\n            try {\n                cachedResponse = await deferred;\n            }\n            catch (err) {\n                if (__ACI_DEV__) {\n                    axios.debug({\n                        id: config.id,\n                        msg: 'Deferred rejected, requesting again',\n                        data: err\n                    });\n                }\n                // Hydrates any UI temporarily, if cache is available\n                /* c8 ignore next 3 */\n                if (cache.data) {\n                    await ((_j = (_h = config.cache).hydrate) === null || _j === void 0 ? void 0 : _j.call(_h, cache));\n                }\n                // The deferred is rejected when the request that we are waiting rejects its cache.\n                // In this case, we need to redo the request all over again.\n                return onFulfilled(config);\n            }\n        }\n        else {\n            cachedResponse = cache.data;\n        }\n        // Even though the response interceptor receives this one from here,\n        // it has been configured to ignore cached responses = true\n        config.adapter = function cachedAdapter() {\n            return Promise.resolve({\n                config,\n                data: cachedResponse.data,\n                headers: cachedResponse.headers,\n                status: cachedResponse.status,\n                statusText: cachedResponse.statusText,\n                cached: true,\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                id: config.id\n            });\n        };\n        if (__ACI_DEV__) {\n            axios.debug({\n                id: config.id,\n                msg: 'Returning cached response'\n            });\n        }\n        return config;\n    };\n    return {\n        onFulfilled,\n        apply: () => axios.interceptors.request.use(onFulfilled)\n    };\n}\n","/** Tests an response against a {@link CachePredicateObject}. */\nexport async function testCachePredicate(response, predicate) {\n    var _a;\n    if (typeof predicate === 'function') {\n        return predicate(response);\n    }\n    const { statusCheck, responseMatch, containsHeaders } = predicate;\n    if ((statusCheck && !(await statusCheck(response.status))) ||\n        (responseMatch && !(await responseMatch(response)))) {\n        return false;\n    }\n    if (containsHeaders) {\n        for (const [header, predicate] of Object.entries(containsHeaders)) {\n            if (!(await predicate(\n            // Avoid bugs in case the header is not in lower case\n            (_a = response.headers[header.toLowerCase()]) !== null && _a !== void 0 ? _a : response.headers[header]))) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","/** Function to update all caches, from CacheProperties.update, with the new data. */\nexport async function updateCache(storage, data, cacheUpdater) {\n    // Global cache update function.\n    if (typeof cacheUpdater === `function`) {\n        return cacheUpdater(data);\n    }\n    for (const [cacheKey, updater] of Object.entries(cacheUpdater)) {\n        if (updater === 'delete') {\n            await storage.remove(cacheKey, data.config);\n            continue;\n        }\n        const value = await storage.get(cacheKey, data.config);\n        if (value.state === 'loading') {\n            continue;\n        }\n        const newValue = await updater(value, data);\n        if (newValue === 'delete') {\n            await storage.remove(cacheKey, data.config);\n            continue;\n        }\n        if (newValue !== 'ignore') {\n            await storage.set(cacheKey, newValue, data.config);\n        }\n    }\n}\n","import { parse } from 'cache-parser';\nimport { Header } from '../header/headers';\nimport { testCachePredicate } from '../util/cache-predicate';\nimport { updateCache } from '../util/update-cache';\nimport { createCacheResponse, isMethodIn } from './util';\nexport function defaultResponseInterceptor(axios) {\n    /**\n     * Rejects cache for an response response.\n     *\n     * Also update the waiting list for this key by rejecting it.\n     */\n    const rejectResponse = async (responseId, config) => {\n        var _a;\n        // Updates the cache to empty to prevent infinite loading state\n        await axios.storage.remove(responseId, config);\n        // Rejects the deferred, if present\n        (_a = axios.waiting[responseId]) === null || _a === void 0 ? void 0 : _a.reject();\n        delete axios.waiting[responseId];\n    };\n    const onFulfilled = async (response) => {\n        var _a;\n        // When response.config is not present, the response is indeed a error.\n        if (!(response === null || response === void 0 ? void 0 : response.config)) {\n            if (__ACI_DEV__) {\n                axios.debug({\n                    msg: 'Response interceptor received an unknown response.',\n                    data: response\n                });\n            }\n            // Re-throws the error\n            throw response;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        response.id = response.config.id;\n        (_a = response.cached) !== null && _a !== void 0 ? _a : (response.cached = false);\n        const config = response.config;\n        // Request interceptor merges defaults with per request configuration\n        const cacheConfig = config.cache;\n        // Response is already cached\n        if (response.cached) {\n            if (__ACI_DEV__) {\n                axios.debug({\n                    id: response.id,\n                    msg: 'Returned cached response'\n                });\n            }\n            return response;\n        }\n        // Skip cache: either false or weird behavior\n        // config.cache should always exists, at least from global config merge.\n        if (!cacheConfig) {\n            if (__ACI_DEV__) {\n                axios.debug({\n                    id: response.id,\n                    msg: 'Response with config.cache falsy',\n                    data: response\n                });\n            }\n            response.cached = false;\n            return response;\n        }\n        // Update other entries before updating himself\n        if (cacheConfig.update) {\n            await updateCache(axios.storage, response, cacheConfig.update);\n        }\n        if (!isMethodIn(config.method, cacheConfig.methods)) {\n            if (__ACI_DEV__) {\n                axios.debug({\n                    id: response.id,\n                    msg: `Ignored because method (${config.method}) is not in cache.methods (${cacheConfig.methods})`,\n                    data: { config, cacheConfig }\n                });\n            }\n            return response;\n        }\n        const cache = await axios.storage.get(response.id, config);\n        if (\n        // If the request interceptor had a problem or it wasn't cached\n        cache.state !== 'loading') {\n            if (__ACI_DEV__) {\n                axios.debug({\n                    id: response.id,\n                    msg: \"Response not cached and storage isn't loading\",\n                    data: { cache, response }\n                });\n            }\n            return response;\n        }\n        // Config told that this response should be cached.\n        if (\n        // For 'loading' values (previous: stale), this check already ran in the past.\n        !cache.data &&\n            !(await testCachePredicate(response, cacheConfig.cachePredicate))) {\n            await rejectResponse(response.id, config);\n            if (__ACI_DEV__) {\n                axios.debug({\n                    id: response.id,\n                    msg: 'Cache predicate rejected this response'\n                });\n            }\n            return response;\n        }\n        // Avoid remnant headers from remote server to break implementation\n        for (const header of Object.keys(response.headers)) {\n            if (header.startsWith('x-axios-cache')) {\n                delete response.headers[header];\n            }\n        }\n        if (cacheConfig.etag && cacheConfig.etag !== true) {\n            response.headers[Header.XAxiosCacheEtag] = cacheConfig.etag;\n        }\n        if (cacheConfig.modifiedSince) {\n            response.headers[Header.XAxiosCacheLastModified] =\n                cacheConfig.modifiedSince === true\n                    ? 'use-cache-timestamp'\n                    : cacheConfig.modifiedSince.toUTCString();\n        }\n        let ttl = cacheConfig.ttl || -1; // always set from global config\n        let staleTtl;\n        if (cacheConfig.interpretHeader) {\n            const expirationTime = axios.headerInterpreter(response.headers);\n            // Cache should not be used\n            if (expirationTime === 'dont cache') {\n                await rejectResponse(response.id, config);\n                if (__ACI_DEV__) {\n                    axios.debug({\n                        id: response.id,\n                        msg: `Cache header interpreted as 'dont cache'`,\n                        data: { cache, response, expirationTime }\n                    });\n                }\n                return response;\n            }\n            if (expirationTime !== 'not enough headers') {\n                if (typeof expirationTime === 'number') {\n                    ttl = expirationTime;\n                }\n                else {\n                    ttl = expirationTime.cache;\n                    staleTtl = expirationTime.stale;\n                }\n            }\n        }\n        const data = createCacheResponse(response, cache.data);\n        if (typeof ttl === 'function') {\n            ttl = await ttl(response);\n        }\n        if (cacheConfig.staleIfError) {\n            response.headers[Header.XAxiosCacheStaleIfError] = String(ttl);\n        }\n        if (__ACI_DEV__) {\n            axios.debug({\n                id: response.id,\n                msg: 'Useful response configuration found',\n                data: { cacheConfig, cacheResponse: data }\n            });\n        }\n        const newCache = {\n            state: 'cached',\n            ttl,\n            staleTtl,\n            createdAt: Date.now(),\n            data\n        };\n        // Resolve all other requests waiting for this response\n        const waiting = axios.waiting[response.id];\n        if (waiting) {\n            waiting.resolve(newCache.data);\n            delete axios.waiting[response.id];\n            if (__ACI_DEV__) {\n                axios.debug({\n                    id: response.id,\n                    msg: 'Found waiting deferred(s) and resolved them'\n                });\n            }\n        }\n        // Define this key as cache on the storage\n        await axios.storage.set(response.id, newCache, config);\n        if (__ACI_DEV__) {\n            axios.debug({\n                id: response.id,\n                msg: 'Response cached',\n                data: { cache: newCache, response }\n            });\n        }\n        // Return the response with cached as false, because it was not cached at all\n        return response;\n    };\n    const onRejected = async (error) => {\n        var _a;\n        // When response.config is not present, the response is indeed a error.\n        if (!error.isAxiosError || !error.config) {\n            if (__ACI_DEV__) {\n                axios.debug({\n                    msg: 'FATAL: Received an non axios error in the rejected response interceptor, ignoring.',\n                    data: error\n                });\n            }\n            // We should probably re-request the response to avoid an infinite loading state here\n            // but, since this is an unknown error, we cannot figure out what request ID to use.\n            // And the only solution is to let the storage actively reject the current loading state.\n            throw error;\n        }\n        const config = error.config;\n        const id = config.id;\n        const cacheConfig = config.cache;\n        const response = error.response;\n        // config.cache should always exist, at least from global config merge.\n        if (!cacheConfig || !id) {\n            if (__ACI_DEV__) {\n                axios.debug({\n                    msg: 'Web request returned an error but cache handling is not enabled',\n                    data: { error }\n                });\n            }\n            throw error;\n        }\n        if (!isMethodIn(config.method, cacheConfig.methods)) {\n            if (__ACI_DEV__) {\n                axios.debug({\n                    id,\n                    msg: `Ignored because method (${config.method}) is not in cache.methods (${cacheConfig.methods})`,\n                    data: { config, cacheConfig }\n                });\n            }\n            // Rejects all other requests waiting for this response\n            await rejectResponse(id, config);\n            throw error;\n        }\n        const cache = await axios.storage.get(id, config);\n        if (\n        // This will only not be loading if the interceptor broke\n        cache.state !== 'loading' ||\n            cache.previous !== 'stale') {\n            if (__ACI_DEV__) {\n                axios.debug({\n                    id,\n                    msg: 'Caught an error in the request interceptor',\n                    data: { cache, error, config }\n                });\n            }\n            // Rejects all other requests waiting for this response\n            await rejectResponse(id, config);\n            throw error;\n        }\n        if (cacheConfig.staleIfError) {\n            const cacheControl = String(response === null || response === void 0 ? void 0 : response.headers[Header.CacheControl]);\n            const staleHeader = cacheControl && parse(cacheControl).staleIfError;\n            const staleIfError = typeof cacheConfig.staleIfError === 'function'\n                ? await cacheConfig.staleIfError(response, cache, error)\n                : cacheConfig.staleIfError === true && staleHeader\n                    ? staleHeader * 1000 //staleIfError is in seconds\n                    : cacheConfig.staleIfError;\n            if (__ACI_DEV__) {\n                axios.debug({\n                    id,\n                    msg: 'Found cache if stale config for rejected response',\n                    data: { error, config, staleIfError }\n                });\n            }\n            if (staleIfError === true ||\n                // staleIfError is the number of seconds that stale is allowed to be used\n                (typeof staleIfError === 'number' && cache.createdAt + staleIfError > Date.now())) {\n                // Resolve all other requests waiting for this response\n                (_a = axios.waiting[id]) === null || _a === void 0 ? void 0 : _a.resolve(cache.data);\n                delete axios.waiting[id];\n                // re-mark the cache as stale\n                await axios.storage.set(id, {\n                    state: 'stale',\n                    createdAt: Date.now(),\n                    data: cache.data\n                }, config);\n                if (__ACI_DEV__) {\n                    axios.debug({\n                        id,\n                        msg: 'staleIfError resolved this response with cached data',\n                        data: { error, config, cache }\n                    });\n                }\n                return {\n                    cached: true,\n                    config,\n                    id,\n                    data: cache.data.data,\n                    headers: cache.data.headers,\n                    status: cache.data.status,\n                    statusText: cache.data.statusText\n                };\n            }\n        }\n        if (__ACI_DEV__) {\n            axios.debug({\n                id,\n                msg: 'Received an unknown error that could not be handled',\n                data: { error, config }\n            });\n        }\n        // Rejects all other requests waiting for this response\n        await rejectResponse(id, config);\n        throw error;\n    };\n    return {\n        onFulfilled,\n        onRejected,\n        apply: () => axios.interceptors.response.use(onFulfilled, onRejected)\n    };\n}\n","import { Header } from '../header/headers';\n/** Returns true if the provided object was created from {@link buildStorage} function. */\nexport const isStorage = (obj) => !!obj && !!obj['is-storage'];\nfunction hasUniqueIdentifierHeader(value) {\n    const headers = value.data.headers;\n    return (Header.ETag in headers ||\n        Header.LastModified in headers ||\n        Header.XAxiosCacheEtag in headers ||\n        Header.XAxiosCacheLastModified in headers);\n}\n/** Returns true if this has sufficient properties to stale instead of expire. */\nexport function canStale(value) {\n    // Must revalidate is a special case and should not be staled\n    if (String(value.data.headers[Header.CacheControl])\n        // We could use cache-control's parse function, but this is way faster and simpler\n        .includes('must-revalidate')) {\n        return false;\n    }\n    if (hasUniqueIdentifierHeader(value)) {\n        return true;\n    }\n    return (value.state === 'cached' &&\n        value.staleTtl !== undefined &&\n        // Only allow stale values after the ttl is already in the past and the staleTtl is in the future.\n        // In cases that just createdAt + ttl > Date.now(), isn't enough because the staleTtl could be <= 0.\n        // This logic only returns true when Date.now() is between the (createdAt + ttl) and (createdAt + ttl + staleTtl).\n        // Following the example below:\n        // |--createdAt--:--ttl--:---staleTtl--->\n        // [        past        ][now is in here]\n        Math.abs(Date.now() - (value.createdAt + value.ttl)) <= value.staleTtl);\n}\n/**\n * Checks if the provided cache is expired. You should also check if the cache\n * {@link canStale}\n */\nexport function isExpired(value) {\n    return value.ttl !== undefined && value.createdAt + value.ttl <= Date.now();\n}\n/**\n * All integrated storages are wrappers around the `buildStorage` function. External\n * libraries use it and if you want to build your own, `buildStorage` is the way to go!\n *\n * The exported `buildStorage` function abstracts the storage interface and requires a\n * super simple object to build the storage.\n *\n * **Note**: You can only create an custom storage with this function.\n *\n * @example\n *\n * ```js\n * const myStorage = buildStorage({\n *   find: () => {...},\n *   set: () => {...},\n *   remove: () => {...}\n * });\n *\n * const axios = setupCache(axios, { storage: myStorage });\n * ```\n *\n * @see https://axios-cache-interceptor.js.org/guide/storages#buildstorage\n */\nexport function buildStorage({ set, find, remove }) {\n    return {\n        //@ts-expect-error - we don't want to expose this\n        ['is-storage']: 1,\n        set,\n        remove,\n        get: async (key, config) => {\n            let value = await find(key, config);\n            if (!value) {\n                return { state: 'empty' };\n            }\n            if (value.state === 'empty' || value.state === 'loading') {\n                return value;\n            }\n            // Handle cached values\n            if (value.state === 'cached') {\n                if (!isExpired(value)) {\n                    return value;\n                }\n                // Tries to stale expired value\n                if (!canStale(value)) {\n                    await remove(key, config);\n                    return { state: 'empty' };\n                }\n                value = {\n                    state: 'stale',\n                    createdAt: value.createdAt,\n                    data: value.data,\n                    ttl: value.staleTtl !== undefined ? value.staleTtl + value.ttl : undefined\n                };\n                await set(key, value, config);\n            }\n            // A second check in case the new stale value was created already expired.\n            if (!isExpired(value)) {\n                return value;\n            }\n            if (hasUniqueIdentifierHeader(value)) {\n                return value;\n            }\n            await remove(key, config);\n            return { state: 'empty' };\n        }\n    };\n}\n","import { buildStorage, canStale, isExpired } from './build';\n/**\n * Creates a simple in-memory storage. This means that if you need to persist data between\n * page or server reloads, this will not help.\n *\n * This is the storage used by default.\n *\n * If you need to modify it's data, you can do by the `data` property.\n *\n * @example\n *\n * ```js\n * const memoryStorage = buildMemoryStorage();\n *\n * setupCache(axios, { storage: memoryStorage });\n *\n * // Simple example to force delete the request cache\n *\n * const { id } = axios.get('url');\n *\n * delete memoryStorage.data[id];\n * ```\n *\n * @param {boolean | 'double'} cloneData Use `true` if the data returned by `find()`\n *   should be cloned to avoid mutating the original data outside the `set()` method. Use\n *   `'double'` to also clone before saving value in storage using `set()`. Disabled is\n *   default\n * @param {number | false} cleanupInterval The interval in milliseconds to run a\n *   setInterval job of cleaning old entries. If false, the job will not be created.\n *   Disabled is default\n * @param {number | false} maxEntries The maximum number of entries to keep in the\n *   storage. Its hard to determine the size of the entries, so a smart FIFO order is used\n *   to determine eviction. If false, no check will be done and you may grow up memory\n *   usage. Disabled is default\n */\nexport function buildMemoryStorage(cloneData = false, cleanupInterval = false, maxEntries = false) {\n    const storage = buildStorage({\n        set: (key, value) => {\n            if (maxEntries) {\n                let keys = Object.keys(storage.data);\n                // Tries to cleanup first\n                if (keys.length >= maxEntries) {\n                    storage.cleanup();\n                    // Recalculates the keys\n                    keys = Object.keys(storage.data);\n                    // Keeps deleting until there's space\n                    while (keys.length >= maxEntries) {\n                        // There's always at least one key here, otherwise it would not be\n                        // in the loop.\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        delete storage.data[keys.shift()];\n                    }\n                }\n            }\n            storage.data[key] =\n                // Clone the value before storing to prevent future mutations\n                // from affecting cached data.\n                cloneData === 'double'\n                    ? /* c8 ignore next 3 */\n                        typeof structuredClone === 'function'\n                            ? structuredClone(value)\n                            : JSON.parse(JSON.stringify(value))\n                    : value;\n        },\n        remove: (key) => {\n            delete storage.data[key];\n        },\n        find: (key) => {\n            const value = storage.data[key];\n            /* c8 ignore next 7 */\n            if (cloneData && value !== undefined) {\n                if (typeof structuredClone === 'function') {\n                    return structuredClone(value);\n                }\n                return JSON.parse(JSON.stringify(value));\n            }\n            return value;\n        }\n    });\n    storage.data = Object.create(null);\n    // When this program gets running for more than the specified interval, there's a good\n    // chance of it being a long-running process or at least have a lot of entries. Therefore,\n    // \"faster\" loop is more important than code readability.\n    storage.cleanup = () => {\n        const keys = Object.keys(storage.data);\n        let i = -1, value, key;\n        // Looping forward, as older entries are more likely to be expired\n        // than newer ones.\n        while (++i < keys.length) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            (key = keys[i]), (value = storage.data[key]);\n            if (value.state === 'empty') {\n                // this storage returns void.\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                storage.remove(key);\n                continue;\n            }\n            // If the value is expired and can't be stale, remove it\n            if (value.state === 'cached' && isExpired(value) && !canStale(value)) {\n                // this storage returns void.\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                storage.remove(key);\n            }\n        }\n    };\n    if (cleanupInterval) {\n        storage.cleaner = setInterval(storage.cleanup, cleanupInterval);\n    }\n    return storage;\n}\n","function t(n,e){void 0===e&&(e=new WeakMap);var r=typeof n;if(n&&\"object\"===r&&!(n instanceof Date||n instanceof RegExp)){for(var o=Array.isArray(n)?[]:{},i=Object.keys(n).sort(function(t,n){return t>n?1:-1}),a=i.length;a--;){var f=i[a],c=n[f];if(\"object\"==typeof c&&null!==c&&!(c instanceof Date||c instanceof RegExp)){if(e.has(c))continue;e.set(c,!0)}o[f]=t(c,e)}return String(n.constructor)+JSON.stringify(o,i)}return r+String(n)}function n(n){n=t(n);for(var e=5381,r=0;r<n.length;)e=33*e^n.charCodeAt(r++);return e}export{n as hash,t as serialize};\n//# sourceMappingURL=index.mjs.map\n","import { hash } from 'object-code';\n// Remove first and last '/' char, if present\nconst SLASHES_REGEX = /^\\/|\\/$/g;\n/**\n * Builds an generator that receives a {@link CacheRequestConfig} and returns a value\n * hashed by {@link hash}.\n *\n * The value is hashed into a signed integer when the returned value from the provided\n * generator is not a `string` or a `number`.\n *\n * You can return any type of data structure.\n *\n * @example\n *\n * ```js\n * // This generator will return a hash code.\n * // The code will only be the same if url, method and data are the same.\n * const generator = buildKeyGenerator(({ url, method, data }) => ({\n *   url,\n *   method,\n *   data\n * }));\n * ```\n */\nexport function buildKeyGenerator(generator) {\n    return (request) => {\n        if (request.id) {\n            return request.id;\n        }\n        const key = generator(request);\n        if (typeof key === 'string' || typeof key === 'number') {\n            return `${key}`;\n        }\n        return `${hash(key)}`;\n    };\n}\nexport const defaultKeyGenerator = buildKeyGenerator(({ baseURL = '', url = '', method = 'get', params, data }) => {\n    // Remove trailing slashes to avoid generating different keys for the \"same\" final url.\n    baseURL && (baseURL = baseURL.replace(SLASHES_REGEX, ''));\n    url && (url = url.replace(SLASHES_REGEX, ''));\n    // lowercase method\n    method && (method = method.toLowerCase());\n    return {\n        url: baseURL + (baseURL && url ? '/' : '') + url,\n        params: params,\n        method,\n        data\n    };\n});\n","import { defaultHeaderInterpreter } from '../header/interpreter';\nimport { defaultRequestInterceptor } from '../interceptors/request';\nimport { defaultResponseInterceptor } from '../interceptors/response';\nimport { isStorage } from '../storage/build';\nimport { buildMemoryStorage } from '../storage/memory';\nimport { defaultKeyGenerator } from '../util/key-generator';\n/**\n * Apply the caching interceptors for a already created axios instance.\n *\n * ```ts\n * const axios = setupCache(axios, OPTIONS);\n * ```\n *\n * The `setupCache` function receives global options and all [request\n * specifics](https://axios-cache-interceptor.js.org/config/request-specifics) ones too.\n * This way, you can customize the defaults for all requests.\n *\n * @param axios The already created axios instance\n * @param config The config for the caching interceptors\n * @returns The same instance with extended typescript types.\n * @see https://axios-cache-interceptor.js.org/config\n */\nexport function setupCache(axios, options = {}) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const axiosCache = axios;\n    if (axiosCache.defaults.cache) {\n        throw new Error('setupCache() should be called only once');\n    }\n    axiosCache.storage = options.storage || buildMemoryStorage();\n    if (!isStorage(axiosCache.storage)) {\n        throw new Error('Use buildStorage() function');\n    }\n    axiosCache.waiting = options.waiting || {};\n    axiosCache.generateKey = options.generateKey || defaultKeyGenerator;\n    axiosCache.headerInterpreter = options.headerInterpreter || defaultHeaderInterpreter;\n    axiosCache.requestInterceptor =\n        options.requestInterceptor || defaultRequestInterceptor(axiosCache);\n    axiosCache.responseInterceptor =\n        options.responseInterceptor || defaultResponseInterceptor(axiosCache);\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    axiosCache.debug = options.debug || function noop() { };\n    // CacheRequestConfig values\n    axiosCache.defaults.cache = {\n        update: options.update || {},\n        ttl: (_a = options.ttl) !== null && _a !== void 0 ? _a : 1000 * 60 * 5,\n        // Although RFC 7231 also marks POST as cacheable, most users don't know that\n        // and may have problems about why their \"create X\" route not working.\n        methods: options.methods || ['get', 'head'],\n        cachePredicate: options.cachePredicate || {\n            // All cacheable status codes defined in RFC 7231\n            statusCheck: (status) => [200, 203, 300, 301, 302, 404, 405, 410, 414, 501].includes(status)\n        },\n        etag: (_b = options.etag) !== null && _b !== void 0 ? _b : true,\n        // This option is going to be ignored by servers when ETag is enabled\n        // Checks strict equality to false to avoid undefined-ish values\n        modifiedSince: (_c = options.modifiedSince) !== null && _c !== void 0 ? _c : options.etag === false,\n        interpretHeader: (_d = options.interpretHeader) !== null && _d !== void 0 ? _d : true,\n        cacheTakeover: (_e = options.cacheTakeover) !== null && _e !== void 0 ? _e : true,\n        staleIfError: (_f = options.staleIfError) !== null && _f !== void 0 ? _f : true,\n        override: (_g = options.override) !== null && _g !== void 0 ? _g : false,\n        hydrate: (_h = options.hydrate) !== null && _h !== void 0 ? _h : undefined\n    };\n    // Apply interceptors\n    axiosCache.requestInterceptor.apply();\n    axiosCache.responseInterceptor.apply();\n    return axiosCache;\n}\n","import { buildStorage, canStale, isExpired } from './build';\n/**\n * Creates a simple storage. You can persist his data by using `sessionStorage` or\n * `localStorage` with it.\n *\n * **ImplNote**: Without polyfill, this storage only works on browser environments.\n *\n * @example\n *\n * ```js\n * const fromLocalStorage = buildWebStorage(localStorage);\n * const fromSessionStorage = buildWebStorage(sessionStorage);\n *\n * const myStorage = new Storage();\n * const fromMyStorage = buildWebStorage(myStorage);\n * ```\n *\n * @param storage The type of web storage to use. localStorage or sessionStorage.\n * @param prefix The prefix to index the storage. Useful to prevent collision between\n *   multiple places using the same storage.\n */\nexport function buildWebStorage(storage, prefix = 'axios-cache-') {\n    return buildStorage({\n        find: (key) => {\n            const json = storage.getItem(prefix + key);\n            return json ? JSON.parse(json) : undefined;\n        },\n        remove: (key) => {\n            storage.removeItem(prefix + key);\n        },\n        set: (key, value) => {\n            const save = () => storage.setItem(prefix + key, JSON.stringify(value));\n            try {\n                return save();\n            }\n            catch (error) {\n                const allValues = Object.entries(storage)\n                    .filter((item) => item[0].startsWith(prefix))\n                    .map((item) => [item[0], JSON.parse(item[1])]);\n                // Remove all expired values\n                for (const value of allValues) {\n                    if (value[1].state === 'cached' && isExpired(value[1]) && !canStale(value[1])) {\n                        storage.removeItem(value[0]);\n                    }\n                }\n                // Try save again after removing expired values\n                try {\n                    return save();\n                }\n                catch (_a) {\n                    // Storage still full, try removing the oldest value until it can be saved\n                    // Descending sort by createdAt\n                    const sortedItems = allValues.sort((a, b) => (a[1].createdAt || 0) - (b[1].createdAt || 0));\n                    for (const item of sortedItems) {\n                        storage.removeItem(item[0]);\n                        try {\n                            return save();\n                        }\n                        catch (_b) {\n                            // This key didn't free all the required space\n                        }\n                    }\n                }\n                // Clear the cache for the specified key\n                storage.removeItem(prefix + key);\n            }\n        }\n    });\n}\n","export * from './cache/axios';\nexport * from './cache/cache';\nexport * from './cache/create';\nexport * from './header/headers';\nexport * from './header/interpreter';\nexport * from './header/types';\nexport * from './interceptors/build';\nexport * from './interceptors/request';\nexport * from './interceptors/response';\nexport * from './interceptors/util';\nexport * from './storage/build';\nexport * from './storage/memory';\nexport * from './storage/types';\nexport * from './storage/web-api';\nexport * from './util/cache-predicate';\nexport * from './util/key-generator';\nexport * from './util/types';\nexport * from './util/update-cache';\nif (__ACI_DEV__) {\n    console.error('You are using a development build. Make sure to use the correct build in production\\nhttps://axios-cache-interceptor.js.org/guide/getting-started\\n\\n');\n}\n"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","e","a","Number","Infinity","r","t","s","n","i","toLowerCase","replace","split","u","l","m","p","h","immutable","maxAge","maxStale","minFresh","mustRevalidate","mustUnderstand","noCache","noStore","noTransform","onlyIfCached","private","proxyRevalidate","public","sMaxAge","staleIfError","staleWhileRevalidate","Header","freeze","IfModifiedSince","LastModified","IfNoneMatch","CacheControl","Pragma","ETag","Expires","Age","XAxiosCacheEtag","XAxiosCacheLastModified","XAxiosCacheStaleIfError","defaultHeaderInterpreter","headers","cacheControl","String","cache","undefined","age","stale","expires","milliseconds","Date","parse","now","createValidateStatus","oldValidate","status","isMethodIn","requestMethod","methodList","some","method","updateStaleRequest","config","_a","etag","modifiedSince","etagValue","data","createdAt","toUTCString","createCacheResponse","response","previousCache","cached","statusText","assign","defaultRequestInterceptor","axios","onFulfilled","async","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","id","generateKey","debug","msg","defaults","cacheTakeover","methods","storage","overrideCache","override","ignoreAndRequest","state","waiting","Promise","resolve","reject","catch","set","previous","validateStatus","hydrate","cachedResponse","deferred","err","adapter","apply","interceptors","request","use","testCachePredicate","predicate","statusCheck","responseMatch","containsHeaders","header","entries","updateCache","cacheUpdater","cacheKey","updater","remove","newValue","defaultResponseInterceptor","rejectResponse","responseId","cacheConfig","update","cachePredicate","keys","startsWith","staleTtl","ttl","interpretHeader","expirationTime","headerInterpreter","cacheResponse","newCache","onRejected","error","isAxiosError","staleHeader","isStorage","hasUniqueIdentifierHeader","canStale","includes","Math","abs","isExpired","buildStorage","find","buildMemoryStorage","cloneData","cleanupInterval","maxEntries","length","cleanup","shift","structuredClone","JSON","stringify","create","cleaner","setInterval","WeakMap","RegExp","Array","isArray","sort","f","c","has","constructor","charCodeAt","SLASHES_REGEX","buildKeyGenerator","generator","defaultKeyGenerator","baseURL","url","params","setupCache","options","axiosCache","Error","requestInterceptor","responseInterceptor","buildWebStorage","prefix","json","getItem","removeItem","save","setItem","allValues","filter","item","map","sortedItems","b","console"],"sourceRoot":""}