<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>WMI</title>
    <link>https://www.webmanajemen.com/</link>
    
    <image>
      <url>https://www.webmanajemen.com/logo.png</url>
      <title>WMI</title>
      <link>https://www.webmanajemen.com/</link>
    </image>
    
    <atom:link href="https://www.webmanajemen.com/rss.xml" rel="self" type="application/rss+xml"/>
    
    <description>Website Management Indonesia is a blog about scripts, tips and tricks, games, software. Covering php, javascript, jquery, mysql, seo, e-commerce and others.</description>
    <pubDate>Mon, 02 Oct 2023 13:25:32 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Catatan Muslim</title>
      <link>https://www.webmanajemen.com/notes/catatan-muslim.html</link>
      <guid>https://www.webmanajemen.com/notes/catatan-muslim.html</guid>
      <pubDate>Sun, 01 Oct 2023 19:09:45 GMT</pubDate>
      
      <description>Catatan Muslim Barang siapa membaca attaubah ayat 128-129 enam puluh enam kali kepada orang yang terkena bisa binatang maka akan sembuh seketika Asy-Syaikh At-Tijani Barang siapa menghafal sepuluh aya</description>
      
      
      
      <content:encoded><![CDATA[<p>Barang siapa membaca attaubah ayat 128-129 enam puluh enam kali kepada orang yang terkena bisa binatang maka akan sembuh seketika (Asy-Syaikh At-Tijani)</p><p>Barang siapa menghafal sepuluh ayat terakhir dari surah Al kahfi, maka ia akan terlindungi dari fitnah dajjal (HR Muslim)</p><p>Barang siapa yang membacakan do’a ini di depan kuburan minimal 3 kali, maka Allah akan mengangkat siksa kuburnya hingga hari kiamat nanti.</p><blockquote><p>Allahumma Bihakki sayyidina Muhammadin wa’Ali Muhammadin la tu’adzib hadzal mayyit</p></blockquote>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/uncategorized/">uncategorized</category>
      
      
      
      <comments>https://www.webmanajemen.com/notes/catatan-muslim.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>react-dom server generate static html from react elements</title>
      <link>https://www.webmanajemen.com/2023/09/react-dom-server-generate-static-html-from-react.html</link>
      <guid>https://www.webmanajemen.com/2023/09/react-dom-server-generate-static-html-from-react.html</guid>
      <pubDate>Wed, 27 Sep 2023 23:34:23 GMT</pubDate>
      
      <description>react-dom server generate static html from react elements import as fs from fs;import prettier from prettier;import React from react;import ReactDOMServer from react-dom/server;render;function render </description>
      
      
      
      <content:encoded><![CDATA[<pre><code class="highlight tsx"><span class="keyword">import</span> * <span class="keyword">as</span> fs <span class="keyword">from</span> <span class="string">&quot;fs&quot;</span>;<span class="keyword">import</span> prettier <span class="keyword">from</span> <span class="string">&quot;prettier&quot;</span>;<span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;<span class="keyword">import</span> <span class="title class_">ReactDOMServer</span> <span class="keyword">from</span> <span class="string">&quot;react-dom/server&quot;</span>;<span class="title function_">render</span>();<span class="keyword">function</span> <span class="title function_">render</span>(<span class="params"></span>) &#123;  <span class="keyword">let</span> html = <span class="title class_">ReactDOMServer</span>.<span class="title function_">renderToStaticMarkup</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">HelloWorldPage</span> /&gt;</span></span>);  <span class="keyword">let</span> htmlWDoc = <span class="string">&quot;&lt;!DOCTYPE html&gt;&quot;</span> + html;  <span class="keyword">let</span> prettyHtml = prettier.<span class="title function_">format</span>(htmlWDoc, &#123; <span class="attr">parser</span>: <span class="string">&quot;html&quot;</span> &#125;);  <span class="keyword">let</span> outputFile = <span class="string">&quot;./output.html&quot;</span>;  fs.<span class="title function_">writeFileSync</span>(outputFile, prettyHtml);  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Wrote <span class="subst">$&#123;outputFile&#125;</span>`</span>);&#125;<span class="keyword">function</span> <span class="title function_">HelloWorldPage</span>(<span class="params"></span>) &#123;  <span class="keyword">return</span> (    <span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charSet</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello world<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><span class="language-xml">    <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span>  );&#125;</code></pre><h2 id="Conclusion">Conclusion</h2><p>generated static html result at <code>output.html</code></p>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/programming/">programming</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/javascript/">javascript</category>
      
      <category domain="https://www.webmanajemen.com/tags/typescript/">typescript</category>
      
      <category domain="https://www.webmanajemen.com/tags/react/">react</category>
      
      
      <comments>https://www.webmanajemen.com/2023/09/react-dom-server-generate-static-html-from-react.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>How to use react suite toaster in reactjs</title>
      <link>https://www.webmanajemen.com/2023/09/how-to-use-react-suite-toaster-in-reactjs.html</link>
      <guid>https://www.webmanajemen.com/2023/09/how-to-use-react-suite-toaster-in-reactjs.html</guid>
      <pubDate>Tue, 26 Sep 2023 01:00:44 GMT</pubDate>
      
      <description>How to use react suite toaster in reactjs React Hook useToaster cannot be called in a class component You cannot using useToaster in class component, use rsuite.toaster instead. useToaster rsuite.toas</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="React-Hook-“useToaster”-cannot-be-called-in-a-class-component">React Hook “useToaster” cannot be called in a class component</h2><blockquote><p>You cannot using <code>useToaster</code> in class component, use <a href="#using-in-class-component"><code>rsuite.toaster</code></a> instead.</p></blockquote><h2 id="Using-in-function-component">Using in function component</h2><pre><code class="highlight tsx"><span class="keyword">import</span> &#123;  <span class="title class_">Notification</span>,  useToaster,  <span class="title class_">Placeholder</span>,  <span class="title class_">Uploader</span>,  <span class="title class_">ButtonToolbar</span>,  <span class="title class_">SelectPicker</span>,  <span class="title class_">Button</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;rsuite&#x27;</span>;<span class="keyword">const</span> <span class="title function_">App</span> = (<span class="params"></span>) =&gt; &#123;  <span class="keyword">const</span> [<span class="keyword">type</span>, setType] = <span class="title class_">React</span>.<span class="title function_">useState</span>(<span class="string">&#x27;info&#x27;</span>);  <span class="keyword">const</span> [placement, setPlacement] = <span class="title class_">React</span>.<span class="title function_">useState</span>(<span class="string">&#x27;topStart&#x27;</span>);  <span class="keyword">const</span> toaster = <span class="title function_">useToaster</span>();  <span class="keyword">const</span> message = (    <span class="language-xml"><span class="tag">&lt;<span class="name">Notification</span> <span class="attr">type</span>=<span class="string">&#123;type&#125;</span> <span class="attr">header</span>=<span class="string">&#123;type&#125;</span> <span class="attr">closable</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;<span class="name">Placeholder.Paragraph</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">width:</span> <span class="attr">320</span> &#125;&#125; <span class="attr">rows</span>=<span class="string">&#123;3&#125;</span> /&gt;</span></span><span class="language-xml">      <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><span class="language-xml">      <span class="tag">&lt;<span class="name">Uploader</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> /&gt;</span></span><span class="language-xml">    <span class="tag">&lt;/<span class="name">Notification</span>&gt;</span></span>  );  <span class="keyword">return</span> (    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><span class="language-xml">      &#123;message&#125;</span><span class="language-xml">      <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><span class="language-xml">      <span class="tag">&lt;<span class="name">ButtonToolbar</span>&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">SelectPicker</span></span></span><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;type&#125;</span></span></span><span class="tag"><span class="language-xml">          <span class="attr">data</span>=<span class="string">&#123;[</span></span></span><span class="tag"><span class="language-xml">            &#123; <span class="attr">label:</span> &#x27;<span class="attr">info</span>&#x27;, <span class="attr">value:</span> &#x27;<span class="attr">info</span>&#x27; &#125;,</span></span><span class="tag"><span class="language-xml">            &#123; <span class="attr">label:</span> &#x27;<span class="attr">success</span>&#x27;, <span class="attr">value:</span> &#x27;<span class="attr">success</span>&#x27; &#125;,</span></span><span class="tag"><span class="language-xml">            &#123; <span class="attr">label:</span> &#x27;<span class="attr">warning</span>&#x27;, <span class="attr">value:</span> &#x27;<span class="attr">warning</span>&#x27; &#125;,</span></span><span class="tag"><span class="language-xml">            &#123; <span class="attr">label:</span> &#x27;<span class="attr">error</span>&#x27;, <span class="attr">value:</span> &#x27;<span class="attr">error</span>&#x27; &#125;</span></span><span class="tag"><span class="language-xml">          ]&#125;</span></span><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;setType&#125;</span></span></span><span class="tag"><span class="language-xml">          <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">width:</span> <span class="attr">200</span> &#125;&#125;</span></span><span class="tag"><span class="language-xml">        /&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">SelectPicker</span></span></span><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;placement&#125;</span></span></span><span class="tag"><span class="language-xml">          <span class="attr">data</span>=<span class="string">&#123;[</span></span></span><span class="tag"><span class="language-xml">            &#123; <span class="attr">label:</span> &#x27;<span class="attr">topStart</span>&#x27;, <span class="attr">value:</span> &#x27;<span class="attr">topStart</span>&#x27; &#125;,</span></span><span class="tag"><span class="language-xml">            &#123; <span class="attr">label:</span> &#x27;<span class="attr">topCenter</span>&#x27;, <span class="attr">value:</span> &#x27;<span class="attr">topCenter</span>&#x27; &#125;,</span></span><span class="tag"><span class="language-xml">            &#123; <span class="attr">label:</span> &#x27;<span class="attr">topEnd</span>&#x27;, <span class="attr">value:</span> &#x27;<span class="attr">topEnd</span>&#x27; &#125;,</span></span><span class="tag"><span class="language-xml">            &#123; <span class="attr">label:</span> &#x27;<span class="attr">bottomStart</span>&#x27;, <span class="attr">value:</span> &#x27;<span class="attr">bottomStart</span>&#x27; &#125;,</span></span><span class="tag"><span class="language-xml">            &#123; <span class="attr">label:</span> &#x27;<span class="attr">bottomCenter</span>&#x27;, <span class="attr">value:</span> &#x27;<span class="attr">bottomCenter</span>&#x27; &#125;,</span></span><span class="tag"><span class="language-xml">            &#123; <span class="attr">label:</span> &#x27;<span class="attr">bottomEnd</span>&#x27;, <span class="attr">value:</span> &#x27;<span class="attr">bottomEnd</span>&#x27; &#125;</span></span><span class="tag"><span class="language-xml">          ]&#125;</span></span><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;setPlacement&#125;</span></span></span><span class="tag"><span class="language-xml">          <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">width:</span> <span class="attr">200</span> &#125;&#125;</span></span><span class="tag"><span class="language-xml">        /&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> toaster.push(message, &#123; placement &#125;)&#125;&gt;Push<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> toaster.remove()&#125;&gt;Remove<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> toaster.clear()&#125;&gt;Clear<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;/<span class="name">ButtonToolbar</span>&gt;</span></span><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>  );&#125;;<span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">App</span> /&gt;</span></span>, <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>));</code></pre><h2 id="Using-in-class-component">Using in class component</h2><pre><code class="highlight jsx"><span class="keyword">class</span> <span class="title class_">AppClass</span> <span class="keyword">extends</span> <span class="title class_ inherited__">React.Component</span> &#123;  toaster;  <span class="title function_">constructor</span>(<span class="params">props</span>) &#123;    <span class="variable language_">super</span>(props);    <span class="variable language_">this</span>.<span class="property">state</span> = &#123;      <span class="attr">type</span>: <span class="string">&quot;info&quot;</span>,      <span class="attr">placement</span>: <span class="string">&quot;topStart&quot;</span>    &#125;;  &#125;  <span class="title function_">componentDidMount</span>(<span class="params"></span>) &#123;    <span class="keyword">import</span>(<span class="string">&quot;rsuite&quot;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">modules</span>) =&gt;</span> &#123;      <span class="variable language_">this</span>.<span class="property">toaster</span> = modules.<span class="property">toaster</span>;    &#125;);  &#125;  <span class="title function_">render</span>(<span class="params"></span>) &#123;    <span class="keyword">const</span> &#123; type, placement &#125; = <span class="variable language_">this</span>.<span class="property">state</span>;    <span class="keyword">const</span> message = (      <span class="language-xml"><span class="tag">&lt;<span class="name">Notification</span> <span class="attr">type</span>=<span class="string">&#123;type&#125;</span> <span class="attr">header</span>=<span class="string">&#123;type&#125;</span> <span class="attr">closable</span>&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">Placeholder.Paragraph</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">width:</span> <span class="attr">320</span> &#125;&#125; <span class="attr">rows</span>=<span class="string">&#123;3&#125;</span> /&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">Uploader</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> /&gt;</span></span><span class="language-xml">      <span class="tag">&lt;/<span class="name">Notification</span>&gt;</span></span>    );    <span class="keyword">return</span> (      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><span class="language-xml">        &#123;message&#125;</span><span class="language-xml">        <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">ButtonToolbar</span>&gt;</span></span><span class="language-xml">          <span class="tag">&lt;<span class="name">SelectPicker</span></span></span><span class="tag"><span class="language-xml">            <span class="attr">value</span>=<span class="string">&#123;type&#125;</span></span></span><span class="tag"><span class="language-xml">            <span class="attr">data</span>=<span class="string">&#123;[</span></span></span><span class="tag"><span class="language-xml">              &#123; <span class="attr">label:</span> &quot;<span class="attr">info</span>&quot;, <span class="attr">value:</span> &quot;<span class="attr">info</span>&quot; &#125;,</span></span><span class="tag"><span class="language-xml">              &#123; <span class="attr">label:</span> &quot;<span class="attr">success</span>&quot;, <span class="attr">value:</span> &quot;<span class="attr">success</span>&quot; &#125;,</span></span><span class="tag"><span class="language-xml">              &#123; <span class="attr">label:</span> &quot;<span class="attr">warning</span>&quot;, <span class="attr">value:</span> &quot;<span class="attr">warning</span>&quot; &#125;,</span></span><span class="tag"><span class="language-xml">              &#123; <span class="attr">label:</span> &quot;<span class="attr">error</span>&quot;, <span class="attr">value:</span> &quot;<span class="attr">error</span>&quot; &#125;</span></span><span class="tag"><span class="language-xml">            ]&#125;</span></span><span class="tag"><span class="language-xml">            <span class="attr">onChange</span>=<span class="string">&#123;(e)</span> =&gt;</span> console.log(&quot;label&quot;, e)&#125;</span><span class="language-xml">            style=&#123;&#123; width: 200 &#125;&#125;</span><span class="language-xml">          /&gt;</span><span class="language-xml">          <span class="tag">&lt;<span class="name">SelectPicker</span></span></span><span class="tag"><span class="language-xml">            <span class="attr">value</span>=<span class="string">&#123;placement&#125;</span></span></span><span class="tag"><span class="language-xml">            <span class="attr">data</span>=<span class="string">&#123;[</span></span></span><span class="tag"><span class="language-xml">              &#123; <span class="attr">label:</span> &quot;<span class="attr">topStart</span>&quot;, <span class="attr">value:</span> &quot;<span class="attr">topStart</span>&quot; &#125;,</span></span><span class="tag"><span class="language-xml">              &#123; <span class="attr">label:</span> &quot;<span class="attr">topCenter</span>&quot;, <span class="attr">value:</span> &quot;<span class="attr">topCenter</span>&quot; &#125;,</span></span><span class="tag"><span class="language-xml">              &#123; <span class="attr">label:</span> &quot;<span class="attr">topEnd</span>&quot;, <span class="attr">value:</span> &quot;<span class="attr">topEnd</span>&quot; &#125;,</span></span><span class="tag"><span class="language-xml">              &#123; <span class="attr">label:</span> &quot;<span class="attr">bottomStart</span>&quot;, <span class="attr">value:</span> &quot;<span class="attr">bottomStart</span>&quot; &#125;,</span></span><span class="tag"><span class="language-xml">              &#123; <span class="attr">label:</span> &quot;<span class="attr">bottomCenter</span>&quot;, <span class="attr">value:</span> &quot;<span class="attr">bottomCenter</span>&quot; &#125;,</span></span><span class="tag"><span class="language-xml">              &#123; <span class="attr">label:</span> &quot;<span class="attr">bottomEnd</span>&quot;, <span class="attr">value:</span> &quot;<span class="attr">bottomEnd</span>&quot; &#125;</span></span><span class="tag"><span class="language-xml">            ]&#125;</span></span><span class="tag"><span class="language-xml">            <span class="attr">onChange</span>=<span class="string">&#123;(e)</span> =&gt;</span> console.log(&quot;placement&quot;, e)&#125;</span><span class="language-xml">            style=&#123;&#123; width: 200 &#125;&#125;</span><span class="language-xml">          /&gt;</span><span class="language-xml">          <span class="tag">&lt;<span class="name">Button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> this.toaster.push(message, &#123; placement &#125;)&#125;&gt;</span><span class="language-xml">            Push</span><span class="language-xml">          <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><span class="language-xml">          <span class="tag">&lt;<span class="name">Button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> this.toaster.remove()&#125;&gt;Remove<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><span class="language-xml">          <span class="tag">&lt;<span class="name">Button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> this.toaster.clear()&#125;&gt;Clear<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span><span class="language-xml">        <span class="tag">&lt;/<span class="name">ButtonToolbar</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>    );  &#125;&#125;</code></pre><h2 id="react-suite-toaster-live-playground">react suite toaster live playground</h2><p><a href="https://codesandbox.io/s/billowing-rain-dn9r2y?fontsize=14&amp;hidenavigation=1&amp;theme=dark"><img src="https://codesandbox.io/static/img/play-codesandbox.svg" alt=""></a></p><iframe src="https://codesandbox.io/embed/billowing-rain-dn9r2y?fontsize=14&hidenavigation=1&theme=dark"     style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"     title="billowing-rain-dn9r2y"     allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"     sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"   ></iframe>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/programming/">programming</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/javascript/">javascript</category>
      
      <category domain="https://www.webmanajemen.com/tags/typescript/">typescript</category>
      
      <category domain="https://www.webmanajemen.com/tags/react/">react</category>
      
      
      <comments>https://www.webmanajemen.com/2023/09/how-to-use-react-suite-toaster-in-reactjs.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>How to fix vscode settings sync in linux</title>
      <link>https://www.webmanajemen.com/2023/09/fix-vscode-settings-sync-linux.html</link>
      <guid>https://www.webmanajemen.com/2023/09/fix-vscode-settings-sync-linux.html</guid>
      <pubDate>Mon, 18 Sep 2023 20:37:50 GMT</pubDate>
      
      <description>How to fix vscode settings sync in linux Ensure gnome-keyring is running systemctl --user status gnome-keyring-daemon gnome-keyring-daemon.service - GNOME Keyring daemon Loaded: loaded /usr/lib/system</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Ensure-gnome-keyring-is-running">Ensure gnome-keyring is running</h2><pre><code class="highlight bash">$ systemctl --user status gnome-keyring-daemon● gnome-keyring-daemon.service - GNOME Keyring daemon     Loaded: loaded (/usr/lib/systemd/user/gnome-keyring-daemon.service; enabled; preset: enabled)     Active: active (running) since Thu 2023-06-15 12:36:32 CEST; 3h 43min agoTriggeredBy: ● gnome-keyring-daemon.socket   Main PID: 16317 (gnome-keyring-d)      Tasks: 4 (<span class="built_in">limit</span>: 67352)     Memory: 3.5M        CPU: 1.067s     CGroup: /user.slice/user-1000.slice/user@1000.service/app.slice/gnome-keyring-daemon.service             └─16317 /usr/bin/gnome-keyring-daemon --foreground --components=pkcs11,secrets --control-directory=/run/user/1000/keyring</code></pre><p>Otherwise</p><h3 id="enable-gnome-keyring-daemon-manually">enable <code>gnome-keyring-daemon</code> manually</h3><pre><code class="highlight bash">gnome-keyring-daemon --replace --daemonize --components=pkcs11,secrets,ssh</code></pre><h4 id="Show-installed-gnome-keyring">Show installed <code>gnome-keyring</code></h4><pre><code class="highlight bash">$ dpkg -l | grep gnome-keyringii  gnome-keyring                                               42.1-1+b2                                            amd64        GNOME keyring services (daemon and tools)ii  gnome-keyring-pkcs11:amd64                                  42.1-1+b2                                            amd64        GNOME keyring module <span class="keyword">for</span> the PKCS<span class="comment">#11 module loading library</span>ii  libgnome-keyring-common                                     3.12.0-1                                             all          GNOME keyring services library - data filesii  libgnome-keyring-dev                                        3.12.0-1+b2                                          amd64        Development files <span class="keyword">for</span> GNOME keyring serviceii  libgnome-keyring0:amd64                                     3.12.0-1+b2                                          amd64        GNOME keyring services libraryii  libpam-gnome-keyring:amd64                                  42.1-1+b2                                            amd64        PAM module to unlock the GNOME keyring upon login</code></pre><h4 id="Show-installed-libsecret">Show installed <code>libsecret</code></h4><pre><code class="highlight bash">$ dpkg -l | grep libsecretii  libsecret-1-0:amd64                                         0.20.5-3                                             amd64        Secret storeii  libsecret-common                                            0.20.5-3                                             all          Secret store (common files)</code></pre><h4 id="Show-installed-dbus-x11">Show installed <code>dbus-x11</code></h4><pre><code class="highlight bash">$ dpkg -l | grep -i dbus-x11ii  dbus-x11                                                    1.14.6-1                                             amd64        simple interprocess messaging system (X11 deps)</code></pre><h2 id="Open-VSCode-argument-settings">Open VSCode argument settings</h2><p>open the Command Palette (<code>Ctrl+Shift+P</code>) and type <strong>Preferences: Configure Runtime Arguments</strong></p><p><img src="/2023/09/fix-vscode-settings-sync-linux/image.png" alt=""></p><h2 id="Add-settings">Add settings</h2><p>add the setting <code>&quot;password-store&quot;:&quot;gnome&quot;</code></p><p><img src="/2023/09/fix-vscode-settings-sync-linux/add-settings.png" alt=""></p><h2 id="Restart-VSCode">Restart VSCode</h2><p>after added the password-store to settings, clean restart VSCode.</p><p>Close the window (<code>X</code>) then re-open VSCode from start menu or desktop icon.</p><h2 id="Relogin">Relogin</h2><p>Try relogin VSCode with github or microsoft account</p>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/programming/">programming</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/vscode/">vscode</category>
      
      <category domain="https://www.webmanajemen.com/tags/tips-tricks/">tips &amp; tricks</category>
      
      
      <comments>https://www.webmanajemen.com/2023/09/fix-vscode-settings-sync-linux.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>How to lazy loading JSX react module with dots notation</title>
      <link>https://www.webmanajemen.com/2023/09/how-to-react-lazy-load-module-with-dot-notation.html</link>
      <guid>https://www.webmanajemen.com/2023/09/how-to-react-lazy-load-module-with-dot-notation.html</guid>
      <pubDate>Sun, 17 Sep 2023 23:18:02 GMT</pubDate>
      
      <description>React lazy loading module with dot notation such as subclass or non default export</description>
      
      
      
      <content:encoded><![CDATA[<p>How to React lazy loading module with dot notation such as subclass or non default export ?</p><h2 id="Original-code-without-react-lazy">Original code without react lazy</h2><pre><code class="highlight tsx"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;<span class="keyword">import</span> &#123; <span class="title class_">Navbar</span>, <span class="title class_">Nav</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;rsuite&#x27;</span>;<span class="keyword">import</span> <span class="title class_">HomeIcon</span> <span class="keyword">from</span> <span class="string">&#x27;@rsuite/icons/legacy/Home&#x27;</span>;<span class="keyword">import</span> <span class="title class_">CogIcon</span> <span class="keyword">from</span> <span class="string">&#x27;@rsuite/icons/legacy/Cog&#x27;</span>;<span class="keyword">const</span> <span class="title function_">MyNavbar</span> = (<span class="params"></span>) =&gt; (  <span class="language-xml"><span class="tag">&lt;<span class="name">Navbar</span>&gt;</span></span><span class="language-xml">    <span class="tag">&lt;<span class="name">Navbar.Brand</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>RSUITE<span class="tag">&lt;/<span class="name">Navbar.Brand</span>&gt;</span></span><span class="language-xml">    <span class="tag">&lt;<span class="name">Nav</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;<span class="name">Nav.Item</span> <span class="attr">icon</span>=<span class="string">&#123;</span>&lt;<span class="attr">HomeIcon</span> /&gt;</span>&#125;&gt;Home<span class="tag">&lt;/<span class="name">Nav.Item</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;<span class="name">Nav.Item</span>&gt;</span>News<span class="tag">&lt;/<span class="name">Nav.Item</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;<span class="name">Nav.Item</span>&gt;</span>Products<span class="tag">&lt;/<span class="name">Nav.Item</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;<span class="name">Nav.Menu</span> <span class="attr">title</span>=<span class="string">&quot;About&quot;</span>&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">Nav.Item</span>&gt;</span>Company<span class="tag">&lt;/<span class="name">Nav.Item</span>&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">Nav.Item</span>&gt;</span>Team<span class="tag">&lt;/<span class="name">Nav.Item</span>&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">Nav.Menu</span> <span class="attr">title</span>=<span class="string">&quot;Contact&quot;</span>&gt;</span></span><span class="language-xml">          <span class="tag">&lt;<span class="name">Nav.Item</span>&gt;</span>Via email<span class="tag">&lt;/<span class="name">Nav.Item</span>&gt;</span></span><span class="language-xml">          <span class="tag">&lt;<span class="name">Nav.Item</span>&gt;</span>Via telephone<span class="tag">&lt;/<span class="name">Nav.Item</span>&gt;</span></span><span class="language-xml">        <span class="tag">&lt;/<span class="name">Nav.Menu</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;/<span class="name">Nav.Menu</span>&gt;</span></span><span class="language-xml">    <span class="tag">&lt;/<span class="name">Nav</span>&gt;</span></span><span class="language-xml">    <span class="tag">&lt;<span class="name">Nav</span> <span class="attr">pullRight</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;<span class="name">Nav.Item</span> <span class="attr">icon</span>=<span class="string">&#123;</span>&lt;<span class="attr">CogIcon</span> /&gt;</span>&#125;&gt;Settings<span class="tag">&lt;/<span class="name">Nav.Item</span>&gt;</span></span><span class="language-xml">    <span class="tag">&lt;/<span class="name">Nav</span>&gt;</span></span><span class="language-xml">  <span class="tag">&lt;/<span class="name">Navbar</span>&gt;</span></span>);</code></pre><h2 id="Convert-to-react-lazy">Convert to react lazy</h2><pre><code class="highlight tsx"><span class="comment">// below is turn them into react lazy loading</span><span class="keyword">const</span> <span class="title class_">Nav</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;rsuite/esm/Nav&#x27;</span>));<span class="keyword">const</span> <span class="title class_">NavItem</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span>  <span class="keyword">import</span>(<span class="string">&#x27;rsuite/esm/Nav&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">module</span> =&gt;</span> (&#123;    <span class="attr">default</span>: <span class="variable language_">module</span>.<span class="property">default</span>.<span class="property">Item</span>,  &#125;)),);<span class="keyword">const</span> <span class="title class_">NavMenu</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span>  <span class="keyword">import</span>(<span class="string">&#x27;rsuite/esm/Nav&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">module</span> =&gt;</span> (&#123;    <span class="attr">default</span>: <span class="variable language_">module</span>.<span class="property">default</span>.<span class="property">Menu</span>,  &#125;)),);<span class="keyword">const</span> <span class="title class_">Navbar</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;rsuite/esm/Navbar&#x27;</span>));<span class="keyword">const</span> <span class="title class_">NavbarBrand</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span>  <span class="keyword">import</span>(<span class="string">&#x27;rsuite/esm/Navbar&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">module</span> =&gt;</span> (&#123;    <span class="attr">default</span>: <span class="variable language_">module</span>.<span class="property">default</span>.<span class="property">Brand</span>,  &#125;)),);</code></pre><h2 id="How-to-lazy-import-SVG-Icon-in-ReactJS">How to lazy import SVG Icon in ReactJS</h2><p>sample codes to import SVG ICON with react lazy using library <strong>React Suite</strong></p><h3 id="Original-imports-SVG-Icon-without-react-lazy">Original imports SVG Icon without react lazy</h3><pre><code class="highlight tsx"><span class="keyword">import</span> <span class="title class_">HomeIcon</span> <span class="keyword">from</span> <span class="string">&#x27;@rsuite/icons/legacy/Home&#x27;</span>;<span class="keyword">import</span> <span class="title class_">CogIcon</span> <span class="keyword">from</span> <span class="string">&#x27;@rsuite/icons/legacy/Cog&#x27;</span>;</code></pre><h3 id="Import-SVG-Icon-using-react-lazy">Import SVG Icon using react lazy</h3><pre><code class="highlight tsx"><span class="keyword">const</span> <span class="title class_">HomeIcon</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@rsuite/icons/legacy/Home&#x27;</span>));<span class="keyword">const</span> <span class="title class_">CogIcon</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@rsuite/icons/legacy/Cog&#x27;</span>));</code></pre><h2 id="Full-Code-Sample">Full Code Sample</h2><p>my full sample code to lazy import <strong>React Suite</strong> components</p><p><strong>filename</strong>: MyNavbar.tsx</p><pre><code class="highlight tsx"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;<span class="comment">//</span><span class="comment">// import HomeIcon from &#x27;@rsuite/icons/legacy/Home&#x27;;</span><span class="comment">// import &#123; Nav, Navbar &#125; from &#x27;rsuite&#x27;;</span><span class="keyword">const</span> <span class="title class_">Nav</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;rsuite/esm/Nav&#x27;</span>));<span class="keyword">const</span> <span class="title class_">NavItem</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span>  <span class="keyword">import</span>(<span class="string">&#x27;rsuite/esm/Nav&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">module</span> =&gt;</span> (&#123;    <span class="attr">default</span>: <span class="variable language_">module</span>.<span class="property">default</span>.<span class="property">Item</span>,  &#125;)),);<span class="keyword">const</span> <span class="title class_">NavMenu</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span>  <span class="keyword">import</span>(<span class="string">&#x27;rsuite/esm/Nav&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">module</span> =&gt;</span> (&#123;    <span class="attr">default</span>: <span class="variable language_">module</span>.<span class="property">default</span>.<span class="property">Menu</span>,  &#125;)),);<span class="keyword">const</span> <span class="title class_">Navbar</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;rsuite/esm/Navbar&#x27;</span>));<span class="keyword">const</span> <span class="title class_">NavbarBrand</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span>  <span class="keyword">import</span>(<span class="string">&#x27;rsuite/esm/Navbar&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">module</span> =&gt;</span> (&#123;    <span class="attr">default</span>: <span class="variable language_">module</span>.<span class="property">default</span>.<span class="property">Brand</span>,  &#125;)),);<span class="keyword">const</span> <span class="title class_">HomeIcon</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@rsuite/icons/legacy/Home&#x27;</span>));<span class="keyword">const</span> <span class="title function_">MyNavbar</span> = (<span class="params">&#123; ...props &#125;</span>) =&gt; &#123;  <span class="keyword">return</span> (    <span class="language-xml"><span class="tag">&lt;<span class="name">Navbar</span> &#123;<span class="attr">...props</span>&#125;&gt;</span></span><span class="language-xml">      <span class="tag">&lt;<span class="name">NavbarBrand</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>WMI<span class="tag">&lt;/<span class="name">NavbarBrand</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;<span class="name">Nav</span>&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">NavItem</span> <span class="attr">icon</span>=<span class="string">&#123;</span>&lt;<span class="attr">HomeIcon</span> /&gt;</span>&#125; href=&quot;/page&quot;&gt;</span><span class="language-xml">          Home</span><span class="language-xml">        <span class="tag">&lt;/<span class="name">NavItem</span>&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">NavItem</span> <span class="attr">href</span>=<span class="string">&quot;/page/google/login&quot;</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">NavItem</span>&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">NavMenu</span> <span class="attr">title</span>=<span class="string">&quot;Tools&quot;</span>&gt;</span></span><span class="language-xml">          <span class="tag">&lt;<span class="name">NavItem</span> <span class="attr">onClick</span>=<span class="string">&#123;navItemClick&#125;</span> <span class="attr">href</span>=<span class="string">&quot;/page/bot-detect&quot;</span>&gt;</span></span><span class="language-xml">            Selenium Checker</span><span class="language-xml">          <span class="tag">&lt;/<span class="name">NavItem</span>&gt;</span></span><span class="language-xml">          <span class="tag">&lt;<span class="name">NavItem</span> <span class="attr">onClick</span>=<span class="string">&#123;navItemClick&#125;</span> <span class="attr">href</span>=<span class="string">&quot;/page/moment-timezone&quot;</span>&gt;</span></span><span class="language-xml">            Moment Timezone Playground</span><span class="language-xml">          <span class="tag">&lt;/<span class="name">NavItem</span>&gt;</span></span><span class="language-xml">          <span class="tag">&lt;<span class="name">NavItem</span> <span class="attr">onClick</span>=<span class="string">&#123;navItemClick&#125;</span> <span class="attr">href</span>=<span class="string">&quot;/page/cookies&quot;</span>&gt;</span></span><span class="language-xml">            Cookie Manager</span><span class="language-xml">          <span class="tag">&lt;/<span class="name">NavItem</span>&gt;</span></span><span class="language-xml">        <span class="tag">&lt;/<span class="name">NavMenu</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;/<span class="name">Nav</span>&gt;</span></span><span class="language-xml">      &#123;/* <span class="tag">&lt;<span class="name">Nav</span> <span class="attr">pullRight</span>&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">NavItem</span> <span class="attr">icon</span>=<span class="string">&#123;</span>&lt;<span class="attr">CogIcon</span> /&gt;</span>&#125;&gt;Settings<span class="tag">&lt;/<span class="name">NavItem</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;/<span class="name">Nav</span>&gt;</span> */&#125;</span><span class="language-xml">    <span class="tag">&lt;/<span class="name">Navbar</span>&gt;</span></span>  );&#125;;<span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">MyNavbar</span>;<span class="keyword">function</span> <span class="title function_">navItemClick</span>(<span class="params">e: &#123; target: <span class="built_in">any</span> &#125;</span>): <span class="built_in">any</span> &#123;  <span class="keyword">const</span> el = e.<span class="property">target</span> <span class="keyword">as</span> <span class="title class_">HTMLElement</span>;  <span class="keyword">if</span> (el.<span class="title function_">hasAttribute</span>(<span class="string">&#x27;href&#x27;</span>)) &#123;    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = el.<span class="title function_">getAttribute</span>(<span class="string">&#x27;href&#x27;</span>);  &#125;&#125;</code></pre><p><strong>filename</strong>: MyTheme.tsx</p><pre><code class="highlight tsx"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;<span class="comment">// lazy import react suite custom navbar</span><span class="keyword">const</span> <span class="title class_">MyNavbar</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;./Navbar&quot;</span>));<span class="comment">// lazy import other react suite components</span><span class="keyword">const</span> <span class="title class_">Container</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;rsuite/esm/Container&#x27;</span>));<span class="keyword">const</span> <span class="title class_">Sidebar</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;rsuite/esm/Sidebar&#x27;</span>));<span class="keyword">const</span> <span class="title class_">Header</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;rsuite/esm/Header&#x27;</span>));<span class="keyword">const</span> <span class="title class_">Content</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;rsuite/esm/Content&#x27;</span>));<span class="keyword">const</span> <span class="title class_">Footer</span> = <span class="title class_">React</span>.<span class="title function_">lazy</span>(<span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;rsuite/esm/Footer&#x27;</span>));<span class="comment">// export the theme</span><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">MyTheme</span>(<span class="params">props</span>) &#123;  <span class="keyword">return</span> (    <span class="language-xml"><span class="tag">&lt;<span class="name">Container</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;<span class="name">Header</span> <span class="attr">className</span>=<span class="string">&quot;fixed-top&quot;</span>&gt;</span></span><span class="language-xml">        <span class="tag">&lt;<span class="name">MyNavbar</span> /&gt;</span></span><span class="language-xml">      <span class="tag">&lt;/<span class="name">Header</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;<span class="name">Container</span> <span class="attr">id</span>=<span class="string">&quot;content-wrapper&quot;</span>&gt;</span></span><span class="language-xml">        &#123;/* using children property */&#125;</span><span class="language-xml">        &#123;/* <span class="tag">&lt;<span class="name">Content</span>&gt;</span>&#123;this.props.children&#125;<span class="tag">&lt;/<span class="name">Content</span>&gt;</span> */&#125;</span><span class="language-xml">        <span class="tag">&lt;<span class="name">Content</span>&gt;</span></span><span class="language-xml">          &#123;/* using react-router-dom */&#125;</span><span class="language-xml">          <span class="tag">&lt;<span class="name">Outlet</span> /&gt;</span></span><span class="language-xml">        <span class="tag">&lt;/<span class="name">Content</span>&gt;</span></span><span class="language-xml">      <span class="tag">&lt;/<span class="name">Container</span>&gt;</span></span><span class="language-xml">    <span class="tag">&lt;/<span class="name">Container</span>&gt;</span></span>  );&#125;</code></pre><h2 id="conclusion">conclusion</h2><p>now you learned How to lazy loading module without default export in reactjs, and this method also works on <code>typescript</code>.</p>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/programming/">programming</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/javascript/">javascript</category>
      
      <category domain="https://www.webmanajemen.com/tags/typescript/">typescript</category>
      
      <category domain="https://www.webmanajemen.com/tags/react/">react</category>
      
      
      <comments>https://www.webmanajemen.com/2023/09/how-to-react-lazy-load-module-with-dot-notation.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Setup VSCode for typescript with css modules</title>
      <link>https://www.webmanajemen.com/NodeJS/setup-vscode-for-typescript-with-scss-modules.html</link>
      <guid>https://www.webmanajemen.com/NodeJS/setup-vscode-for-typescript-with-scss-modules.html</guid>
      <pubDate>Fri, 15 Sep 2023 15:59:55 GMT</pubDate>
      
      <description>Setup VSCode for typescript with css modules import support. You can be able import css,scss,less,stylus file as modular import in typescriptreactwebpack project</description>
      
      
      
      <content:encoded><![CDATA[<p>Setup VSCode for typescript with css modules import support. You can be able import css,scss,less,stylus file as modular import in typescript+react+webpack project.</p><p>This method also has the following functions and advantages:</p><ul><li>fix issues react bundle all things together.<ul><li><a href="https://stackoverflow.com/a/62361595/6404439">style each React route independently</a></li><li><a href="https://stackoverflow.com/questions/62360776/react-js-react-router-dom-applying-css-on-every-routes">React.JS React-Router-Dom applying css on every routes</a></li></ul></li></ul><h2 id="Install-typescript-plugin">Install typescript plugin</h2><pre><code class="highlight bash">yarn add -D typescript-plugin-css-modules</code></pre><p>or</p><pre><code class="highlight bash">npm install -D typescript-plugin-css-modules</code></pre><h2 id="Change-VSCode-USER-SETTINGS-json">Change VSCode USER SETTINGS json</h2><p>add these configuration to your user settings json by <code>CTRL+SHIFT+P</code></p><p><img src="https://github.com/dimaslanjaka/source-posts/assets/12471057/d6c87041-8545-49af-b71a-70f575829cca" alt=""></p><pre><code class="highlight jsonc">&#123;  // prompt using local project typescript version  &quot;typescript.enablePromptUseWorkspaceTsdk&quot;: true,  // add plugin to vscode typescript server language  &quot;typescript.tsserver.pluginPaths&quot;: [    &quot;typescript-plugin-css-modules&quot;  ]&#125;</code></pre><h2 id="Change-VSCode-PROJECT-SETTINGS-json">Change VSCode PROJECT SETTINGS json</h2><p>add these configuration to your project settings json</p><pre><code class="highlight jsonc">&#123;  // tell vscode to using local project typescript version  &quot;typescript.tsdk&quot;: &quot;./node_modules/typescript/lib&quot;&#125;</code></pre><h2 id="Modify-tsconfig-json">Modify tsconfig.json</h2><p>enable css modules plugin in project typescript configuration by editing <code>tsconfig.json</code></p><pre><code class="highlight jsonc">&#123;  &quot;compilerOptions&quot;: &#123;    // enable css modules plugin    &quot;plugins&quot;: [&#123; &quot;name&quot;: &quot;typescript-plugin-css-modules&quot; &#125;],    &quot;lib&quot;: [      &quot;DOM&quot;, // browser DOM support such as (window, document.*, etc)      &quot;ES2020&quot; // enable modern ECMAScript prototype support    ]   &#125;,  &quot;include&quot;: [    &quot;src&quot;, // include all typescript and javascript files    &quot;src/**/*.json&quot;, // json file import support    &quot;src/**/*.css&quot;, // css file import support    &quot;src/**/*.scss&quot;, // scss file import support    &quot;src/**/*.less&quot; // less file import support  ],  &quot;exclude&quot;: [    &quot;**/node_modules/**&quot;, // exclude node_modules folder from compilation    &quot;**/dist/**&quot; // exclude dist folder  ]&#125;</code></pre><h3 id="Full-example-of-tsconfig-json">Full example of <code>tsconfig.json</code></h3><p>Or use my typescript config then modify it according to your project structure</p><pre><code class="highlight jsonc">&#123;  &quot;extends&quot;: &quot;./tsconfig.base.json&quot;,  &quot;compilerOptions&quot;: &#123;    &quot;jsx&quot;: &quot;react&quot;,    &quot;module&quot;: &quot;CommonJS&quot;,    &quot;moduleResolution&quot;: &quot;Node&quot;,    &quot;esModuleInterop&quot;: true,    &quot;outDir&quot;: &quot;tmp/tsc&quot;,    &quot;checkJs&quot;: false,    &quot;composite&quot;: true,    &quot;allowJs&quot;: true,    &quot;resolveJsonModule&quot;: true,    &quot;downlevelIteration&quot;: true,    &quot;allowSyntheticDefaultImports&quot;: true,    &quot;skipDefaultLibCheck&quot;: true,    &quot;skipLibCheck&quot;: true,    &quot;strict&quot;: false,    &quot;lib&quot;: [      &quot;DOM&quot;,      &quot;ES2020&quot;    ],    &quot;typeRoots&quot;: [      &quot;./typings&quot;,      &quot;./node_modules/@types&quot;,      &quot;./node_modules/nodejs-package-types/typings&quot;    ],    &quot;types&quot;: [      &quot;rsuite&quot;    ],    &quot;plugins&quot;: [      &#123;        &quot;name&quot;: &quot;typescript-plugin-css-modules&quot;      &#125;    ]  &#125;,  &quot;include&quot;: [    &quot;src&quot;,    &quot;src/**/*.json&quot;,    &quot;src/**/*.css&quot;,    &quot;src/**/*.scss&quot;,    &quot;src/**/*.less&quot;,    &quot;typings&quot;  ],  &quot;exclude&quot;: [    &quot;**/node_modules/**&quot;,    &quot;./page/**/*&quot;,    &quot;**/dist/**&quot;  ]&#125;</code></pre><h2 id="Create-or-modify-src-global-d-ts">Create or modify <code>src/global.d.ts</code></h2><p>create or modify <code>src/global.d.ts</code> to apply css modules to typescriptreact project, by adding below declarations:</p><pre><code class="highlight jsonc">// typescript css modulesdeclare module &#x27;*.module.css&#x27; &#123;  const classes: &#123; [key: string]: string &#125;;  export default classes;&#125;declare module &#x27;*.module.scss&#x27; &#123;  const classes: &#123; [key: string]: string &#125;;  export default classes;&#125;declare module &#x27;*.module.sass&#x27; &#123;  const classes: &#123; [key: string]: string &#125;;  export default classes;&#125;declare module &#x27;*.module.less&#x27; &#123;  const classes: &#123; [key: string]: string &#125;;  export default classes;&#125;declare module &#x27;*.module.styl&#x27; &#123;  const classes: &#123; [key: string]: string &#125;;  export default classes;&#125;// additional configsdeclare global &#123;  interface Window &#123;    // custom global window properties    [key: string]: any; // enable dynamic object support    dataLayer: Record&lt;string, any&gt;[]; // google analytics    opera: Record&lt;string, any&gt;;    opr: Record&lt;string, any&gt;;    safari: Record&lt;string, any&gt;;    adsbygoogle: any; // google adsense    clipboardData?: any; // safari clipboard    google: import(&#x27;@types/google.accounts&#x27;); // google new API GSI client  &#125;  interface Event &#123;    // custom global event properties    clipboardData?: any; // safari clipboard  &#125;&#125;</code></pre><h2 id="Conclusion">Conclusion</h2><p>Now reload window and your vscode now supported import css modules into typescript or javascript files (react or non-react).<br>To test create new file:</p><p>create the style <code>src/Layout.module.scss</code></p><pre><code class="highlight scss"><span class="selector-class">.myLayout</span> &#123; <span class="selector-tag">h1</span> &#123; <span class="attribute">color</span>: blue; <span class="attribute">background-color</span>: white; &#125;&#125;</code></pre><p>create the component <code>src/Layout.tsx</code></p><pre><code class="highlight typescript"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;<span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">&#x27;./Layout.module.scss&#x27;</span>;<span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">Layout</span>(<span class="params"></span>) &#123;  <span class="keyword">return</span> (    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&#123;styles.myLayout&#125;</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>  );&#125;</code></pre>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/programming/">programming</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/javascript/">javascript</category>
      
      <category domain="https://www.webmanajemen.com/tags/typescript/">typescript</category>
      
      <category domain="https://www.webmanajemen.com/tags/vscode/">vscode</category>
      
      <category domain="https://www.webmanajemen.com/tags/react/">react</category>
      
      
      <comments>https://www.webmanajemen.com/NodeJS/setup-vscode-for-typescript-with-scss-modules.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>create interface class and function in typescript d.ts</title>
      <link>https://www.webmanajemen.com/NodeJS/d-ts-create-interface-class-and-function.html</link>
      <guid>https://www.webmanajemen.com/NodeJS/d-ts-create-interface-class-and-function.html</guid>
      <pubDate>Wed, 06 Sep 2023 18:46:43 GMT</pubDate>
      
      <description>create interface class and function in typescript d.ts Summary when you create an library which is can be function or class like below sample import Client from ./client;// The following two lines bot</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Summary">Summary</h2><p>when you create an library which is can be function or class like below sample</p><pre><code class="highlight ts"><span class="keyword">import</span> <span class="title class_">Client</span> <span class="keyword">from</span> <span class="string">&quot;./client&quot;</span>;<span class="comment">// The following two lines both achieve the same result.</span><span class="keyword">const</span> clas = <span class="keyword">new</span> <span class="title class_">Client</span>();<span class="keyword">const</span> fun = <span class="title class_">Client</span>();</code></pre><p>The <code>client</code> may be constructed via the new keyword or implicitly without as a function call.<br>How you can express this in a types.d.ts file?</p><h2 id="Conclusion">Conclusion</h2><p>The conventional way something like this is done in TypeScript’s own standard library (see <a href="https://github.com/microsoft/TypeScript/blob/ec77bff33226fb01f4e38b20e481f8c1fcd9e6c0/lib/lib.es5.d.ts#L729-L907">the typings for <code>Date</code></a> for example) is to declare two <code>interface</code>s; one for the instance type (with the intended <code>class</code> name) and another for the constructor type (usually the same name with <code>Constructor</code> appended to it).<br>And then you declare the class constructor value as a <code>var</code> or <code>const</code>.<br>If you want to give the constructor added functionality, such as being callable without <code>new</code>, you can do it inside the <code>XXXConstructor</code> interface.<br>Like so: (Making a class and function interchangeable in Typescript types.d.ts library definition)</p><pre><code class="highlight ts"><span class="comment">// this you class import, were assumed like this</span><span class="keyword">interface</span> <span class="title class_">Client</span> &#123;  <span class="title function_">foo</span>(): <span class="built_in">void</span>;&#125;<span class="comment">// create new client constructor</span><span class="keyword">interface</span> <span class="title class_">ClientConstructor</span> &#123;  <span class="title function_">new</span>(): <span class="title class_">Client</span>;  (): <span class="title class_">Client</span>;&#125;<span class="comment">// export them</span><span class="keyword">declare</span> <span class="keyword">const</span> <span class="title class_">Client</span>: <span class="title class_">ClientConstructor</span>;<span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Client</span>;</code></pre><p><a href="https://www.typescriptlang.org/play?module=1#code/PTAEGMBsEsFMDsAuA6RBnAUCUiAW01QBPAewFcJIBDNQ6AWwAcSAnRAGlAHdYXZQaaMvVgATUDADW-PAQzQkvAGZVw-AJIBhGAkSgA3hlCglJEgApkVqiwDmaAFwD4RAJROAbiWiiA3BgBfDAwlMnhwRGgSeFBtOCRzWUdQLR0kVwMjCGi0PVMSUABeUHNGPiVoAA8nXJYFWwzCgD4DbPg0EkhYZEgSW1Lyqs4AcnzhjKDjaCUSpIzDY2Mk5HyikzN-Y0nQPkQyFhiFxfysoKCsMHA+KkR+eFguSni9cBzEFjII1nlFFhU1WJpRCaN4fL4sTLGe5cczuFJxXSbEpw1LPfznbCwSrMNg4XCwegYLE4vT6QHPEHtd6fRCsUBBYmsPSiWAqMiQPQIpACQhc4GgmmsfwXUAAGVg6BwsFyoGgiBFDBJ5N0JhYJHooGGyGAUGew2F2CusBu-HoJHAklAaCoTC66whSVAjGoRFsarC4luuQwrypoHoRD5ayDNGVSEptUFLGFvplsepETEa2h-sDQNh-njYNuohWZnMACIAEZEUApvkF1wxt4QKiQLriYoBvnIIsKUTmfQBVwZn11ht5izF0uhcKV3xAA">Sample mock demo typescript playground</a></p>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/programming/">programming</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/typescript/">typescript</category>
      
      
      <comments>https://www.webmanajemen.com/NodeJS/d-ts-create-interface-class-and-function.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Fix rollup eval warning</title>
      <link>https://www.webmanajemen.com/NodeJS/fix-rollup-eval-warning.html</link>
      <guid>https://www.webmanajemen.com/NodeJS/fix-rollup-eval-warning.html</guid>
      <pubDate>Mon, 04 Sep 2023 13:02:20 GMT</pubDate>
      
      <description>Fix rollup eval warning Error summary _freeGlobal appears to be imported at https://github.com/lodash/lodash/blob/master/.internal/nodeUtil.jsL1. It looks like lodash is a dependency of Bluebird https</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Error-summary">Error summary</h2><p>_freeGlobal appears to be imported at <a href="https://github.com/lodash/lodash/blob/master/.internal/nodeUtil.js#L1">https://github.com/lodash/lodash/blob/master/.internal/nodeUtil.js#L1</a>. It looks like lodash is a dependency of Bluebird (<a href="https://github.com/request/promise-core/blob/master/package.json#L36">https://github.com/request/promise-core/blob/master/package.json#L36</a>).</p><p>If I try to add lodash to the fuzzymatchingjs’s dependencies directly, this require for freeGlobal is resolved and the JavaScript is usable in a browser context.</p><p>some looks error logs</p><pre><code class="highlight log">(!) Use of eval is strongly discouragedhttps://rollupjs.org/troubleshooting/#avoiding-evalnode_modules/bluebird/js/browser/bluebird.js</code></pre><h2 id="How-to-fix">How to fix</h2><ul><li>change orders of plugins</li></ul><blockquote><p>Fixed by putting <code>rollup-commonjs</code> plugin just after <code>rollup-plugin-node-resolve</code> plugin and it is working like a charm! :)</p><p>Or newer version<br>putting <code>@rollup/plugin-commonjs</code> plugin just after <code>@rollup/plugin-node-resolve</code> plugin</p></blockquote><h2 id="Conclusion">Conclusion</h2><p>this warning easily fixed by change orders of plugin</p><p>full <code>rollup.config.js</code> working example:</p><pre><code class="highlight js"><span class="comment">// bundle for browser and ESM module</span><span class="keyword">const</span> resolve = <span class="built_in">require</span>(<span class="string">&#x27;@rollup/plugin-node-resolve&#x27;</span>);<span class="keyword">const</span> commonjs = <span class="built_in">require</span>(<span class="string">&#x27;@rollup/plugin-commonjs&#x27;</span>);<span class="keyword">const</span> &#123; terser &#125; = <span class="built_in">require</span>(<span class="string">&#x27;rollup-plugin-terser&#x27;</span>);<span class="keyword">const</span> json = <span class="built_in">require</span>(<span class="string">&#x27;@rollup/plugin-json&#x27;</span>);<span class="comment">//const typescript = require(&#x27;@rollup/plugin-typescript&#x27;);</span><span class="comment">//const tsconfig = require(&#x27;./tsconfig.build.json&#x27;);</span><span class="comment">//const tsbase = require(&#x27;./tsconfig.base.json&#x27;);</span><span class="keyword">const</span> lib = <span class="built_in">require</span>(<span class="string">&#x27;./package.json&#x27;</span>);<span class="keyword">const</span> outputFileName = <span class="string">&#x27;sbg-utility&#x27;</span>;<span class="keyword">const</span> name = <span class="string">&#x27;sbg-utility&#x27;</span>;<span class="keyword">const</span> input = <span class="string">&#x27;./dist/index.js&#x27;</span>;<span class="keyword">const</span> polyfill = <span class="built_in">require</span>(<span class="string">&#x27;rollup-plugin-polyfill-node&#x27;</span>);<span class="comment">/**</span><span class="comment"> *</span><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">import(&#x27;rollup&#x27;).RollupOptions</span>&#125; <span class="variable">config</span></span><span class="comment"> * <span class="doctag">@returns</span></span><span class="comment"> */</span><span class="keyword">const</span> <span class="title function_">buildConfig</span> = (<span class="params">config</span>) =&gt; &#123;  <span class="comment">/*const tsOpt = Object.assign(tsbase, tsconfig, &#123;</span><span class="comment">    compilerOptions: &#123;</span><span class="comment">      module: &#x27;esnext&#x27;,</span><span class="comment">      lib: [&#x27;es2020&#x27;, &#x27;dom&#x27;],</span><span class="comment">      target: &#x27;es5&#x27;,</span><span class="comment">      allowSyntheticDefaultImports: true,</span><span class="comment">      skipLibCheck: true</span><span class="comment">    &#125;</span><span class="comment">  &#125;);</span><span class="comment">  if (tsOpt.extends) delete tsOpt.extends;*/</span>  <span class="comment">// plugins: [typescript(tsOpt)]</span>  <span class="keyword">const</span> <span class="title function_">build</span> = (<span class="params">&#123; minified &#125;</span>) =&gt; (&#123;    input,    ...config,    <span class="attr">output</span>: &#123;      ...config.<span class="property">output</span>,      <span class="attr">file</span>: <span class="string">`<span class="subst">$&#123;config.output.file&#125;</span>.<span class="subst">$&#123;minified ? <span class="string">&#x27;min.js&#x27;</span> : <span class="string">&#x27;js&#x27;</span>&#125;</span>`</span>    &#125;,    <span class="attr">plugins</span>: [      <span class="title function_">json</span>(),      <span class="title function_">polyfill</span>(),      <span class="title function_">commonjs</span>(),      <span class="title function_">resolve</span>(&#123; <span class="attr">preferBuiltins</span>: <span class="literal">true</span>, <span class="attr">browser</span>: <span class="literal">true</span> &#125;),      minified &amp;&amp; <span class="title function_">terser</span>(),      ...(config.<span class="property">plugins</span> || [])    ]  &#125;);  <span class="keyword">return</span> [<span class="title function_">build</span>(&#123; <span class="attr">minified</span>: <span class="literal">false</span> &#125;), <span class="title function_">build</span>(&#123; <span class="attr">minified</span>: <span class="literal">true</span> &#125;)];&#125;;<span class="keyword">const</span> <span class="title function_">defaults</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;  <span class="keyword">const</span> year = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();  <span class="keyword">const</span> banner = <span class="string">`// <span class="subst">$&#123;lib.name&#125;</span> v<span class="subst">$&#123;lib.version&#125;</span> Copyright (c) <span class="subst">$&#123;year&#125;</span> <span class="subst">$&#123;lib.author&#125;</span>`</span>;  <span class="keyword">return</span> [    ...<span class="title function_">buildConfig</span>(&#123;      <span class="attr">output</span>: &#123;        <span class="attr">file</span>: <span class="string">`dist/browser/<span class="subst">$&#123;outputFileName&#125;</span>`</span>,        name,        <span class="attr">format</span>: <span class="string">&#x27;umd&#x27;</span>,        <span class="attr">exports</span>: <span class="string">&#x27;default&#x27;</span>,        banner      &#125;    &#125;),    ...<span class="title function_">buildConfig</span>(&#123;      <span class="attr">output</span>: &#123;        <span class="attr">file</span>: <span class="string">`dist/esm/<span class="subst">$&#123;outputFileName&#125;</span>`</span>,        <span class="attr">format</span>: <span class="string">&#x27;esm&#x27;</span>,        <span class="attr">preferConst</span>: <span class="literal">true</span>,        <span class="attr">exports</span>: <span class="string">&#x27;named&#x27;</span>,        banner      &#125;    &#125;)  ];&#125;;<span class="variable language_">module</span>.<span class="property">exports</span> = defaults;</code></pre><p>then run this config using <code>rollup -c -m</code></p><ul><li><a href="https://github.com/rollup/rollup-plugin-commonjs/issues/210">issue references</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/programming/">programming</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/javascript/">javascript</category>
      
      
      <comments>https://www.webmanajemen.com/NodeJS/fix-rollup-eval-warning.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Prettier VSCode TypeError A dynamic import callback was not specified fix</title>
      <link>https://www.webmanajemen.com/NodeJS/prettier-vscode-error-a-dynamic-import-callback-was-not-specified-fix.html</link>
      <guid>https://www.webmanajemen.com/NodeJS/prettier-vscode-error-a-dynamic-import-callback-was-not-specified-fix.html</guid>
      <pubDate>Sun, 03 Sep 2023 18:58:44 GMT</pubDate>
      
      <description>Prettier VSCode TypeError A dynamic import callback was not specified fix How to fix Prettier VSCode TypeError A dynamic import callback was not specified only occurs for JSX/TSX file. JSX TSX Summary</description>
      
      
      
      <content:encoded><![CDATA[<p>How to fix Prettier VSCode TypeError A dynamic import callback was not specified only occurs for <code>JSX</code>/<code>TSX</code> file.</p><p><img src="https://github.com/dimaslanjaka/source-posts/assets/12471057/ae48bdb0-479c-4dca-b52d-2d458e07ef4d" alt=""></p><h2 id="Summary">Summary</h2><p>prettier version</p><pre><code class="highlight jsonc">&#123;    &quot;prettier&quot;: &quot;^3.0.3&quot;&#125;</code></pre><p>plugin information</p><pre><code class="highlight log">Prettier - Code formatter v10.1.0</code></pre><p>vscode version</p><pre><code class="highlight log">Version: 1.81.1 (user setup)Commit: 6c3e3dba23e8fadc360aed75ce363ba185c49794Date: 2023-08-09T22:22:42.175ZElectron: 22.3.18ElectronBuildId: 22689846Chromium: 108.0.5359.215Node.js: 16.17.1V8: 10.8.168.25-electron.0OS: Windows_NT x64 10.0.19045</code></pre><p>error logs</p><pre><code class="highlight log">[&quot;ERROR&quot; - 8:41:13 AM] Error handling text editor change[&quot;ERROR&quot; - 8:41:13 AM] A dynamic import callback was not specified.TypeError: A dynamic import callback was not specified.  at new NodeError (node:internal/errors:387:5)  at importModuleDynamicallyCallback (node:internal/process/esm_loader:39:9)  at Object.&lt;anonymous&gt; (d:\Repositories\page\node_modules\prettier\index.cjs:600:23)  at u._compile (d:\ProgramData\Microsoft VS Code\resources\app\out\vs\loader.js:4:1271)  at Module._extensions..js (node:internal/modules/cjs/loader:1243:10)  at Module.load (node:internal/modules/cjs/loader:1058:32)  at Module._load (node:internal/modules/cjs/loader:893:12)  at f._load (node:electron/js2c/asar_bundle:2:13330)  at o._load (d:\ProgramData\Microsoft VS Code\resources\app\out\vs\workbench\api\node\extensionHostProcess.js:130:28084)  at f._load (d:\ProgramData\Microsoft VS Code\resources\app\out\vs\workbench\api\node\extensionHostProcess.js:130:25418)  at C._load (d:\ProgramData\Microsoft VS Code\resources\app\out\vs\workbench\api\node\extensionHostProcess.js:94:19511)  at Module.require (node:internal/modules/cjs/loader:1082:19)  at g (d:\ProgramData\Microsoft VS Code\resources\app\out\vs\loader.js:4:647)  at t.loadNodeModule (c:\Users\dimas\.vscode\extensions\esbenp.prettier-vscode-10.1.0\dist\extension.js:1:2829)  at t.PrettierMainThreadInstance.import (c:\Users\dimas\.vscode\extensions\esbenp.prettier-vscode-10.1.0\dist\extension.js:1:17760)  at t.PrettierMainThreadInstance.resolveConfigFile (c:\Users\dimas\.vscode\extensions\esbenp.prettier-vscode-10.1.0\dist\extension.js:1:18457)  at t.ModuleResolver.resolveConfig (c:\Users\dimas\.vscode\extensions\esbenp.prettier-vscode-10.1.0\dist\extension.js:1:6705)  at t.ModuleResolver.getResolvedConfig (c:\Users\dimas\.vscode\extensions\esbenp.prettier-vscode-10.1.0\dist\extension.js:1:7540)  at async t.default.format (c:\Users\dimas\.vscode\extensions\esbenp.prettier-vscode-10.1.0\dist\extension.js:1:14563)  at async t.PrettierEditProvider.provideEdits (c:\Users\dimas\.vscode\extensions\esbenp.prettier-vscode-10.1.0\dist\extension.js:1:12672)</code></pre><h2 id="How-to-fix-prettier-error">How to fix prettier error</h2><p>but when i ran the prettier using ESLint, no errors occurs and successful format when ran <code>eslint --fix</code></p><p>package.json</p><pre><code class="highlight json"><span class="punctuation">&#123;</span>    <span class="attr">&quot;eslint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.48.0&quot;</span><span class="punctuation">,</span>    <span class="attr">&quot;eslint-config-prettier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^9.0.0&quot;</span><span class="punctuation">,</span>    <span class="attr">&quot;eslint-plugin-prettier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.0.0&quot;</span><span class="punctuation">,</span>    <span class="attr">&quot;prettier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.0.3&quot;</span><span class="punctuation">,</span>    <span class="attr">&quot;@typescript-eslint/eslint-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.4.1&quot;</span><span class="punctuation">,</span>    <span class="attr">&quot;@typescript-eslint/parser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.4.1&quot;</span><span class="punctuation">,</span>    <span class="attr">&quot;ts-node&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^10.9.1&quot;</span><span class="punctuation">,</span>    <span class="attr">&quot;typescript&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4.9.5&quot;</span><span class="punctuation">,</span><span class="punctuation">&#125;</span></code></pre><p>.prettierrc.json</p><pre><code class="highlight json"><span class="punctuation">&#123;</span>  <span class="attr">&quot;$schema&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://json.schemastore.org/prettierrc&quot;</span><span class="punctuation">,</span>  <span class="attr">&quot;printWidth&quot;</span><span class="punctuation">:</span> <span class="number">120</span><span class="punctuation">,</span>  <span class="attr">&quot;useTabs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span>  <span class="attr">&quot;semi&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>  <span class="attr">&quot;singleQuote&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>  <span class="attr">&quot;trailingComma&quot;</span><span class="punctuation">:</span> <span class="string">&quot;all&quot;</span><span class="punctuation">,</span>  <span class="attr">&quot;bracketSpacing&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>  <span class="attr">&quot;jsxBracketSameLine&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span>  <span class="attr">&quot;arrowParens&quot;</span><span class="punctuation">:</span> <span class="string">&quot;avoid&quot;</span><span class="punctuation">,</span>  <span class="attr">&quot;prettier.cssEnable&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>    <span class="string">&quot;css&quot;</span><span class="punctuation">,</span>    <span class="string">&quot;less&quot;</span><span class="punctuation">,</span>    <span class="string">&quot;sass&quot;</span>  <span class="punctuation">]</span><span class="punctuation">&#125;</span></code></pre><p>.eslintrc.js</p><pre><code class="highlight js"><span class="keyword">const</span> prettier = <span class="built_in">require</span>(<span class="string">&#x27;./.prettierrc.json&#x27;</span>);<span class="comment">/**</span><span class="comment"> * <span class="doctag">@type</span> &#123;<span class="type">import(&#x27;eslint&#x27;).ESLint.ConfigData</span>&#125;</span><span class="comment"> */</span><span class="keyword">const</span> config = &#123;  <span class="attr">root</span>: <span class="literal">true</span>, <span class="comment">// Specifies your current project has own eslint rules without extends parent folder eslint rules</span>  <span class="attr">parser</span>: <span class="string">&#x27;@typescript-eslint/parser&#x27;</span>, <span class="comment">// Specifies the ESLint parser</span>  <span class="attr">env</span>: &#123;    <span class="attr">browser</span>: <span class="literal">true</span>, <span class="comment">// add support for browser js (window,document,location,etc)</span>    <span class="attr">amd</span>: <span class="literal">true</span>, <span class="comment">// add amd support</span>    <span class="attr">node</span>: <span class="literal">true</span>, <span class="comment">// add node support (module.export,etc)</span>    <span class="attr">jquery</span>: <span class="literal">true</span>, <span class="comment">// add jquery support</span>  &#125;,  <span class="attr">globals</span>: &#123;    <span class="attr">adsbygoogle</span>: <span class="literal">true</span>, <span class="comment">// add google adsense support</span>    <span class="attr">gtag</span>: <span class="literal">true</span>, <span class="comment">// add google analytics support</span>    <span class="attr">$</span>: <span class="literal">true</span>, <span class="comment">// add jquery support</span>    <span class="attr">safelink</span>: <span class="literal">true</span>, <span class="comment">// add safelinkify support</span>    <span class="attr">google</span>: <span class="string">&#x27;readonly&#x27;</span>, <span class="comment">// add new google GSI authentication support</span>    <span class="attr">gapi</span>: <span class="string">&#x27;readonly&#x27;</span>, <span class="comment">// add google apis support</span>  &#125;,  <span class="attr">parserOptions</span>: &#123;    <span class="attr">ecmaVersion</span>: <span class="number">2020</span>, <span class="comment">// Allows for the parsing of modern ECMAScript features</span>    <span class="attr">sourceType</span>: <span class="string">&#x27;module&#x27;</span>, <span class="comment">// Allows for the use of imports</span>  &#125;,  <span class="attr">extends</span>: [    <span class="string">&#x27;eslint:recommended&#x27;</span>, <span class="comment">// uses eslint default recommended</span>    <span class="string">&#x27;plugin:@typescript-eslint/eslint-recommended&#x27;</span>, <span class="comment">// Uses the recommended rules from the @typescript-eslint/eslint-plugin</span>    <span class="string">&#x27;plugin:@typescript-eslint/recommended&#x27;</span>, <span class="comment">// Uses the recommended rules from the @typescript-eslint/eslint-plugin</span>    <span class="string">&#x27;plugin:prettier/recommended&#x27;</span>, <span class="comment">// Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.</span>  ],  <span class="comment">// override rules for js files</span>  <span class="attr">overrides</span>: [    &#123;      <span class="attr">files</span>: [<span class="string">&#x27;*.js&#x27;</span>],      <span class="attr">rules</span>: &#123;        <span class="string">&#x27;@typescript-eslint/no-var-requires&#x27;</span>: <span class="string">&#x27;off&#x27;</span>, <span class="comment">// disable require warning on js files</span>        <span class="string">&#x27;@typescript-eslint/triple-slash-reference&#x27;</span>: <span class="string">&#x27;off&#x27;</span>, <span class="comment">// disable include refenrences definition files on js</span>      &#125;,    &#125;,  ],  <span class="comment">// specify your desired rules for eslint</span>  <span class="attr">rules</span>: &#123;    <span class="string">&#x27;prettier/prettier&#x27;</span>: [<span class="string">&#x27;error&#x27;</span>, prettier],    <span class="string">&#x27;@typescript-eslint/explicit-function-return-type&#x27;</span>: <span class="string">&#x27;off&#x27;</span>, <span class="comment">// disable function without return type</span>    <span class="string">&#x27;no-unused-vars&#x27;</span>: <span class="string">&#x27;off&#x27;</span>, <span class="comment">// disable original eslint unused-vars</span>    <span class="string">&#x27;@typescript-eslint/no-unused-vars&#x27;</span>: [      <span class="string">&#x27;error&#x27;</span>,      &#123;        <span class="attr">argsIgnorePattern</span>: <span class="string">&#x27;^_&#x27;</span>,        <span class="attr">varsIgnorePattern</span>: <span class="string">&#x27;^_&#x27;</span>,        <span class="attr">caughtErrorsIgnorePattern</span>: <span class="string">&#x27;^_&#x27;</span>,      &#125;,    ], <span class="comment">// enable typescript-eslint unused-vars and allow unused vars start with underscore (_)</span>    <span class="string">&#x27;sort-imports&#x27;</span>: [      <span class="string">&#x27;warn&#x27;</span>,      &#123;        <span class="attr">ignoreDeclarationSort</span>: <span class="literal">true</span>,      &#125;,    ],    <span class="string">&#x27;@typescript-eslint/no-explicit-any&#x27;</span>: <span class="string">&#x27;off&#x27;</span>, <span class="comment">// allow any types</span>    <span class="string">&#x27;@typescript-eslint/no-this-alias&#x27;</span>: [      <span class="comment">// rules for this binding</span>      <span class="string">&#x27;error&#x27;</span>,      &#123;        <span class="attr">allowDestructuring</span>: <span class="literal">false</span>, <span class="comment">// Disallow `const &#123; props, state &#125; = this`; true by default</span>        <span class="attr">allowedNames</span>: [<span class="string">&#x27;self&#x27;</span>], <span class="comment">// Allow `const self = this`; `[]` by default</span>      &#125;,    ],    <span class="comment">// &quot;arrow-body-style&quot; and &quot;prefer-arrow-callback&quot; are two ESLint core rules that can cause issues with prettier/prettier plugin, so turn them off.</span>    <span class="string">&#x27;arrow-body-style&#x27;</span>: <span class="string">&#x27;off&#x27;</span>,    <span class="string">&#x27;prefer-arrow-callback&#x27;</span>: <span class="string">&#x27;off&#x27;</span>,  &#125;,&#125;;<span class="variable language_">module</span>.<span class="property">exports</span> = config;</code></pre><ul><li>source config from <a href="https://www.webmanajemen.com/NodeJS/eslint-prettier-typescript-vscode.html">https://www.webmanajemen.com/NodeJS/eslint-prettier-typescript-vscode.html</a></li><li>issues <a href="https://github.com/prettier/prettier-vscode/issues/3007">https://github.com/prettier/prettier-vscode/issues/3007</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/programming/">programming</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/vscode/">vscode</category>
      
      <category domain="https://www.webmanajemen.com/tags/prettier/">prettier</category>
      
      
      <comments>https://www.webmanajemen.com/NodeJS/prettier-vscode-error-a-dynamic-import-callback-was-not-specified-fix.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>cara mengakses css github menjadi cdn</title>
      <link>https://www.webmanajemen.com/2023/09/cara-mengakses-css-github-menjadi-cdn.html</link>
      <guid>https://www.webmanajemen.com/2023/09/cara-mengakses-css-github-menjadi-cdn.html</guid>
      <pubDate>Sat, 02 Sep 2023 14:46:42 GMT</pubDate>
      
      <description>Cara Mengambil URL CSS dan JavaScript. Untuk URL CSS atau JavaScript dan mengaksesnya dari website</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Cara-mengakses-css-dari-github">Cara mengakses css dari github</h2><p>Cara Mengambil URL CSS dan JavaScript dan mengaksesnya dari website.</p><h3 id="Copy-url-file-dari-github">Copy url file dari github</h3><p><img src="/2023/09/cara-mengakses-css-github-menjadi-cdn/image.png" alt=""></p><h3 id="Buka-salah-satu-provider-CDN-berikut">Buka salah satu provider CDN berikut</h3><ol><li><a href="https://statically.io/">Statically</a></li><li><a href="https://raw.githack.com/">GitHack</a></li></ol><h3 id="Paste-URL-tadi">Paste URL tadi</h3><p><img src="/2023/09/cara-mengakses-css-github-menjadi-cdn/paste-url.png" alt=""></p><h3 id="Copy-URL-CDN">Copy URL CDN</h3><p>Copy URL CDN yang sudah digenerate</p><h3 id="Selesai">Selesai</h3>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/programming/">programming</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/javascript/">javascript</category>
      
      <category domain="https://www.webmanajemen.com/tags/github/">github</category>
      
      <category domain="https://www.webmanajemen.com/tags/css/">css</category>
      
      
      <comments>https://www.webmanajemen.com/2023/09/cara-mengakses-css-github-menjadi-cdn.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>fix end of line on github repository</title>
      <link>https://www.webmanajemen.com/GitHub/fix-end-of-line.html</link>
      <guid>https://www.webmanajemen.com/GitHub/fix-end-of-line.html</guid>
      <pubDate>Wed, 30 Aug 2023 20:06:28 GMT</pubDate>
      
      <description>fix end of line on github repository force end of line using LF For repos Git repositories that were checked out after those global settings were set, everythin</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="force-end-of-line-using-LF">force end of line using LF</h2><p>For repos (Git repositories) that were checked out after those global settings were set, everything will be checked out as whatever it is in the repo – hopefully <code>LF</code> (<code>\n</code>).<br>Any <code>CRLF</code> will be converted to just <code>LF</code> on check-in (commit).</p><p>With an existing repo that you have already checked out – that has the correct line endings in the repo but not your working copy – you can run the following commands to fix it:</p><pre><code class="highlight bash">git config --global core.eol lfgit config --global core.autocrlf inputgit <span class="built_in">rm</span> -rf --cached .git reset --hard HEAD</code></pre><p><code>git rm -rf --cached .</code> will delete (<code>rm</code>) recursively (<code>-r</code>) without prompt (<code>-f</code>), all files except those that you have edited (<code>--cached</code>), from the current directory (<code>.</code>). The <code>reset</code> then returns all those files to a state where they have their true line endings (matching what’s in the repo).</p><p>If you need to fix the line endings of files in a repo, I recommend grabbing an editor that will let you do that in bulk like IntelliJ or Sublime Text, but I’m sure any good one will likely support this.</p><h3 id="Put-a-gitattributes-file-in-the-root-of-your-git-repository-having-following-contents">Put a <code>.gitattributes</code> file in the root of your git repository having following contents:</h3><pre><code class="highlight plaintext">* text=auto eol=lf</code></pre><p>Commit the <code>.gitattributes</code></p><h3 id="Optional-tweaks-for-all-IDE">Optional tweaks for all IDE</h3><p>You can also add an <a href="http://EditorConfig.org"><code>.editorconfig</code></a> in the root of your repository to ensure that modern tooling creates new files with the desired line endings.</p><pre><code class="highlight plaintext"># EditorConfig is awesome: http://EditorConfig.org# top-most EditorConfig fileroot = true# Unix-style newlines with a newline ending every file[*]end_of_line = lfinsert_final_newline = true</code></pre>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/programming/">programming</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/bash/">bash</category>
      
      <category domain="https://www.webmanajemen.com/tags/github/">github</category>
      
      
      <comments>https://www.webmanajemen.com/GitHub/fix-end-of-line.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>How to add path folder to github workflows CI</title>
      <link>https://www.webmanajemen.com/2023/08/how-to-add-paths-to-github-workflows-ci.html</link>
      <guid>https://www.webmanajemen.com/2023/08/how-to-add-paths-to-github-workflows-ci.html</guid>
      <pubDate>Sun, 27 Aug 2023 07:09:03 GMT</pubDate>
      
      <description>How to add path folder to github workflows CI Sometimes when you try to use a command and Bash displays the Command not found error, it might be because the pro</description>
      
      
      
      <content:encoded><![CDATA[<p>Sometimes when you try to use a command and Bash displays the “Command not found” error, it might be because the program is not installed on your system. Correct this by installing a software package containing the command and add them into <strong>PATH</strong> enviroment variable.</p><p>In <strong>Github Workflows</strong> also has ability to add <em>PATH enviroment variable</em>. below is sample codes:</p><h2 id="add-local-bin-to-PATH-CI">add ~/.local/bin to PATH CI</h2><pre><code class="highlight yaml"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">add</span> <span class="string">~/.local/bin</span> <span class="string">to</span> <span class="string">PATH</span>  <span class="attr">shell:</span> <span class="string">bash</span>  <span class="attr">run:</span> <span class="string">|</span>    <span class="string">echo</span> <span class="string">&quot;$&#123;HOME&#125;/.local/bin&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">$GITHUB_PATH</span></code></pre><h2 id="add-CI-PATH-node-modules-bin">add CI PATH ./node_modules/.bin</h2><pre><code class="highlight yaml"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">add</span> <span class="string">./node_modules/.bin</span> <span class="string">to</span> <span class="string">PATH</span>  <span class="attr">shell:</span> <span class="string">bash</span>  <span class="attr">run:</span> <span class="string">|</span>    <span class="string">echo</span> <span class="string">&quot;$&#123;GITHUB_WORKSPACE&#125;/node_modules/.bin&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">$GITHUB_PATH</span></code></pre>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/programming/">programming</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/bash/">bash</category>
      
      <category domain="https://www.webmanajemen.com/tags/github/">github</category>
      
      
      <comments>https://www.webmanajemen.com/2023/08/how-to-add-paths-to-github-workflows-ci.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>How to make husky support for multiple platform</title>
      <link>https://www.webmanajemen.com/2023/08/how-to-make-husky-support-for-multiplatform.html</link>
      <guid>https://www.webmanajemen.com/2023/08/how-to-make-husky-support-for-multiplatform.html</guid>
      <pubDate>Sun, 27 Aug 2023 07:09:03 GMT</pubDate>
      
      <description>husky support for linux, husky support for windows, husky support for cygwin, husky support for WSL</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="husky-support-for-cygwin">husky support for cygwin</h2><pre><code class="highlight bash"><span class="meta">#!/bin/sh</span>(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># determine current platform shell is Cygwin bash</span><span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*)    basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`    <span class="comment"># make cygwin bin as priority</span>    <span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>    <span class="comment"># add ../node_modules/.bin to PATH enviroment</span>    <span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span> ]; <span class="keyword">then</span>      <span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span>    <span class="keyword">fi</span>    ;;<span class="keyword">esac</span><span class="comment"># initialize husky</span>. <span class="string">&quot;<span class="subst">$(dirname <span class="string">&quot;<span class="variable">$0</span>&quot;</span>)</span>/_/husky.sh&quot;</span><span class="comment">## YOUR CODE HERE</span></code></pre><h2 id="husky-support-for-windows">husky support for windows</h2><pre><code class="highlight bash"><span class="meta">#!/bin/sh</span><span class="comment"># export ../node_modules/.bin</span><span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span> ]; <span class="keyword">then</span>  <span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span><span class="keyword">fi</span><span class="comment"># initialize husky</span>. <span class="string">&quot;<span class="subst">$(dirname <span class="string">&quot;<span class="variable">$0</span>&quot;</span>)</span>/_/husky.sh&quot;</span><span class="comment">## YOUR CODE HERE</span></code></pre><h2 id="husky-support-for-WSL-2">husky support for WSL 2</h2><pre><code class="highlight bash"><span class="comment"># determine current platform shell is WSL bash</span>IS_WSL=<span class="string">&quot;false&quot;</span><span class="keyword">if</span> [ -x <span class="string">&quot;<span class="subst">$(command -v wslpath)</span>&quot;</span> ]; <span class="keyword">then</span>  <span class="keyword">if</span> [ `<span class="built_in">uname</span>` = <span class="string">&quot;Linux&quot;</span> ] &amp;&amp; <span class="built_in">type</span> wslpath &amp;&gt;/dev/null ; <span class="keyword">then</span>    IS_WSL=<span class="string">&quot;true&quot;</span>  <span class="keyword">fi</span><span class="keyword">fi</span><span class="comment"># declare functions</span><span class="function"><span class="title">no_node_dir</span></span>() &#123;  <span class="comment"># if this didn&#x27;t work, then everything else below will fail</span>  <span class="built_in">echo</span> <span class="string">&quot;Could not determine Node.js install directory&quot;</span> &gt;&amp;2  <span class="built_in">exit</span> 1&#125;<span class="comment"># determine node path</span><span class="comment">## determine when this package installed in global</span>NODE_EXE=<span class="string">&quot;<span class="variable">$basedir</span>/node.exe&quot;</span><span class="keyword">if</span> ! [ -x <span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> ]; <span class="keyword">then</span>  NODE_EXE=<span class="string">&quot;<span class="variable">$basedir</span>/node&quot;</span><span class="keyword">fi</span><span class="comment">## fallback to default node</span><span class="keyword">if</span> ! [ -x <span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> ]; <span class="keyword">then</span>  NODE_EXE=node<span class="keyword">fi</span><span class="comment"># determine npx path</span><span class="comment">## this path is passed to node.exe, so it needs to match whatever</span><span class="comment">## kind of paths Node.js thinks it&#x27;s using, typically win32 paths.</span>CLI_BASEDIR=<span class="string">&quot;<span class="subst">$(<span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> -p &#x27;require(<span class="string">&quot;path&quot;</span>)</span>.dirname(process.execPath)&#x27; 2&gt; /dev/null)&quot;</span><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span>  <span class="comment"># this fails under WSL 1 so add an additional message. we also suppress stderr above</span>  <span class="comment"># because the actual error raised is not helpful. in WSL 1 node.exe cannot handle</span>  <span class="comment"># output redirection properly. See https://github.com/microsoft/WSL/issues/2370</span>  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$IS_WSL</span>&quot;</span> == <span class="string">&quot;true&quot;</span> ]; <span class="keyword">then</span>    <span class="built_in">echo</span> <span class="string">&quot;WSL 1 is not supported. Please upgrade to WSL 2 or above.&quot;</span> &gt;&amp;2  <span class="keyword">fi</span>  no_node_dir<span class="keyword">fi</span>NPM_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/node_modules/npm/bin/npm-cli.js&quot;</span><span class="comment">## check is linux symlink</span><span class="comment">## $NPM_CLI_JS on windows found but not in linux</span><span class="comment">## global node_modules located in &lt;node bin&gt;/../lib</span><span class="keyword">if</span> ! [ -f <span class="string">&quot;<span class="variable">$NPM_CLI_JS</span>&quot;</span> ]; <span class="keyword">then</span>  NPM_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/../lib/node_modules/npm/bin/npm-cli.js&quot;</span><span class="keyword">fi</span>NPX_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/node_modules/npm/bin/npx-cli.js&quot;</span><span class="keyword">if</span> ! [ -f <span class="string">&quot;<span class="variable">$NPX_CLI_JS</span>&quot;</span> ]; <span class="keyword">then</span>  NPX_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/../lib/node_modules/npm/bin/npx-cli.js&quot;</span><span class="keyword">fi</span><span class="comment">## get node home</span>NODE_HOME=`<span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> <span class="string">&quot;<span class="variable">$NPM_CLI_JS</span>&quot;</span> prefix -g`<span class="comment">## throw when not found (node not installed correctly)</span><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span>  no_node_dir<span class="keyword">fi</span><span class="comment">## a path that will fail -f test on any posix bash</span>NPX_WSL_PATH=<span class="string">&quot;/..&quot;</span><span class="comment">## WSL can run Windows binaries, so we have to give it the win32 path</span><span class="comment">## however, WSL bash tests against posix paths, so we need to construct that</span><span class="comment">## to know if npm is installed globally.</span><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$IS_WSL</span>&quot;</span> == <span class="string">&quot;true&quot;</span> ]; <span class="keyword">then</span>  NPX_WSL_PATH=`wslpath <span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span>`<span class="keyword">fi</span><span class="comment">## overriding $NPX_CLI_JS on WSL</span><span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span> ] || [ -f <span class="string">&quot;<span class="variable">$NPX_WSL_PATH</span>&quot;</span> ]; <span class="keyword">then</span>  NPX_CLI_JS=<span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span><span class="keyword">fi</span><span class="comment">## YOUR CODES HERE</span></code></pre><h2 id="husky-support-for-multiplatform-ALL-IN-ONE">husky support for multiplatform (ALL IN ONE)</h2><p>full support for multiplatform example run <code>npx lint-staged</code></p><pre><code class="highlight bash"><span class="meta">#!/bin/sh</span>(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># absolute path script directory</span>SCRIPT_DIR=$(<span class="built_in">cd</span> -- <span class="string">&quot;<span class="subst">$( dirname -- <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">pwd</span>)<span class="comment"># determine current platform shell is Cygwin bash</span><span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*)    basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`    <span class="comment"># make cygwin bin as priority</span>    <span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>    ;;<span class="keyword">esac</span><span class="comment"># add ../node_modules/.bin to PATH enviroment</span><span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span> ]; <span class="keyword">then</span>  <span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:<span class="variable">$&#123;basedir&#125;</span>/../node_modules/.bin&quot;</span><span class="keyword">fi</span><span class="comment"># determine current platform shell is WSL bash</span>IS_WSL=<span class="string">&quot;false&quot;</span><span class="keyword">if</span> [ -x <span class="string">&quot;<span class="subst">$(command -v wslpath)</span>&quot;</span> ]; <span class="keyword">then</span>  <span class="keyword">if</span> [ `<span class="built_in">uname</span>` = <span class="string">&quot;Linux&quot;</span> ] &amp;&amp; <span class="built_in">type</span> wslpath &amp;&gt;/dev/null ; <span class="keyword">then</span>    IS_WSL=<span class="string">&quot;true&quot;</span>  <span class="keyword">fi</span><span class="keyword">fi</span><span class="comment"># initialize husky</span>. <span class="string">&quot;<span class="subst">$(dirname <span class="string">&quot;<span class="variable">$0</span>&quot;</span>)</span>/_/husky.sh&quot;</span><span class="comment"># declare functions</span><span class="function"><span class="title">no_node_dir</span></span>() &#123;  <span class="comment"># if this didn&#x27;t work, then everything else below will fail</span>  <span class="built_in">echo</span> <span class="string">&quot;Could not determine Node.js install directory&quot;</span> &gt;&amp;2  <span class="built_in">exit</span> 1&#125;<span class="comment"># determine node path</span><span class="comment">## determine when this package installed in global</span>NODE_EXE=<span class="string">&quot;<span class="variable">$basedir</span>/node.exe&quot;</span><span class="keyword">if</span> ! [ -x <span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> ]; <span class="keyword">then</span>  NODE_EXE=<span class="string">&quot;<span class="variable">$basedir</span>/node&quot;</span><span class="keyword">fi</span><span class="comment">## fallback to default node</span><span class="keyword">if</span> ! [ -x <span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> ]; <span class="keyword">then</span>  NODE_EXE=node<span class="keyword">fi</span><span class="comment"># determine npx path</span><span class="comment">## this path is passed to node.exe, so it needs to match whatever</span><span class="comment">## kind of paths Node.js thinks it&#x27;s using, typically win32 paths.</span>CLI_BASEDIR=<span class="string">&quot;<span class="subst">$(<span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> -p &#x27;require(<span class="string">&quot;path&quot;</span>)</span>.dirname(process.execPath)&#x27; 2&gt; /dev/null)&quot;</span><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span>  <span class="comment"># this fails under WSL 1 so add an additional message. we also suppress stderr above</span>  <span class="comment"># because the actual error raised is not helpful. in WSL 1 node.exe cannot handle</span>  <span class="comment"># output redirection properly. See https://github.com/microsoft/WSL/issues/2370</span>  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$IS_WSL</span>&quot;</span> == <span class="string">&quot;true&quot;</span> ]; <span class="keyword">then</span>    <span class="built_in">echo</span> <span class="string">&quot;WSL 1 is not supported. Please upgrade to WSL 2 or above.&quot;</span> &gt;&amp;2  <span class="keyword">fi</span>  no_node_dir<span class="keyword">fi</span>NPM_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/node_modules/npm/bin/npm-cli.js&quot;</span><span class="comment">## check is linux symlink</span><span class="comment">## $NPM_CLI_JS on windows found but not in linux</span><span class="comment">## global node_modules located in &lt;node bin&gt;/../lib</span><span class="keyword">if</span> ! [ -f <span class="string">&quot;<span class="variable">$NPM_CLI_JS</span>&quot;</span> ]; <span class="keyword">then</span>  NPM_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/../lib/node_modules/npm/bin/npm-cli.js&quot;</span><span class="keyword">fi</span>NPX_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/node_modules/npm/bin/npx-cli.js&quot;</span><span class="keyword">if</span> ! [ -f <span class="string">&quot;<span class="variable">$NPX_CLI_JS</span>&quot;</span> ]; <span class="keyword">then</span>  NPX_CLI_JS=<span class="string">&quot;<span class="variable">$CLI_BASEDIR</span>/../lib/node_modules/npm/bin/npx-cli.js&quot;</span><span class="keyword">fi</span><span class="comment">## get node home</span>NODE_HOME=`<span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> <span class="string">&quot;<span class="variable">$NPM_CLI_JS</span>&quot;</span> prefix -g`<span class="comment">## throw when not found (node not installed correctly)</span><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span>  no_node_dir<span class="keyword">fi</span><span class="comment"># fix WSL</span>NODE_HOME_NPX_CLI_JS=<span class="string">&quot;<span class="variable">$NODE_HOME</span>/node_modules/npm/bin/npx-cli.js&quot;</span><span class="comment">## a path that will fail -f test on any posix bash</span>NPX_WSL_PATH=<span class="string">&quot;/..&quot;</span><span class="comment">## WSL can run Windows binaries, so we have to give it the win32 path</span><span class="comment">## however, WSL bash tests against posix paths, so we need to construct that</span><span class="comment">## to know if npm is installed globally.</span><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$IS_WSL</span>&quot;</span> == <span class="string">&quot;true&quot;</span> ]; <span class="keyword">then</span>  NPX_WSL_PATH=`wslpath <span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span>`<span class="keyword">fi</span><span class="comment">## overriding $NPX_CLI_JS on WSL</span><span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span> ] || [ -f <span class="string">&quot;<span class="variable">$NPX_WSL_PATH</span>&quot;</span> ]; <span class="keyword">then</span>  NPX_CLI_JS=<span class="string">&quot;<span class="variable">$NPM_PREFIX_NPX_CLI_JS</span>&quot;</span><span class="keyword">fi</span><span class="comment">## SAMPLE CODES</span><span class="comment">### npx lint-staged</span><span class="string">&quot;<span class="variable">$NODE_EXE</span>&quot;</span> <span class="string">&quot;<span class="variable">$NPX_CLI_JS</span>&quot;</span> lint-staged</code></pre>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/programming/">programming</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/javascript/">javascript</category>
      
      <category domain="https://www.webmanajemen.com/tags/bash/">bash</category>
      
      
      <comments>https://www.webmanajemen.com/2023/08/how-to-make-husky-support-for-multiplatform.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>How to remove github workflows logs</title>
      <link>https://www.webmanajemen.com/GitHub/how-to-remove-github-workflows-logs.html</link>
      <guid>https://www.webmanajemen.com/GitHub/how-to-remove-github-workflows-logs.html</guid>
      <pubDate>Sun, 27 Aug 2023 05:50:11 GMT</pubDate>
      
      <description>How to remove github workflows logs each workflow runs creating huge logs in github actions. sometimes you need to clean them to prune repository sizes. below i</description>
      
      
      
      <content:encoded><![CDATA[<p>each workflow runs creating huge logs in github actions. sometimes you need to clean them to prune repository sizes. below is tips &amp; tricks to delete github workflows logs.</p><h2 id="open-repository">open repository</h2><p>open your repository folder or edit on github directly</p><h2 id="create-new-workflow">create new workflow</h2><p>create new workflow <code>.github/workflows/clean-logs.yml</code> and write below scripts</p><pre><code class="highlight yaml"><span class="attr">name:</span> <span class="string">Delete</span> <span class="string">old</span> <span class="string">workflow</span> <span class="string">runs</span><span class="attr">on:</span>  <span class="attr">workflow_dispatch:</span>    <span class="attr">inputs:</span>      <span class="attr">days:</span>        <span class="attr">description:</span> <span class="string">&#x27;Number of days.&#x27;</span>        <span class="attr">required:</span> <span class="literal">true</span>        <span class="attr">default:</span> <span class="number">30</span>      <span class="attr">minimum_runs:</span>        <span class="attr">description:</span> <span class="string">&#x27;The minimum runs to keep for each workflow.&#x27;</span>        <span class="attr">required:</span> <span class="literal">true</span>        <span class="attr">default:</span> <span class="number">6</span>      <span class="attr">delete_workflow_pattern:</span>        <span class="attr">description:</span> <span class="string">&#x27;The name or filename of the workflow. if not set then it will target all workflows.&#x27;</span>        <span class="attr">required:</span> <span class="literal">false</span>      <span class="attr">delete_workflow_by_state_pattern:</span>        <span class="attr">description:</span> <span class="string">&#x27;Remove workflow by state: active, deleted, disabled_fork, disabled_inactivity, disabled_manually&#x27;</span>        <span class="attr">required:</span> <span class="literal">true</span>        <span class="attr">default:</span> <span class="string">&quot;All&quot;</span>        <span class="attr">type:</span> <span class="string">choice</span>        <span class="attr">options:</span>          <span class="bullet">-</span> <span class="string">&quot;All&quot;</span>          <span class="bullet">-</span> <span class="string">active</span>          <span class="bullet">-</span> <span class="string">deleted</span>          <span class="bullet">-</span> <span class="string">disabled_inactivity</span>          <span class="bullet">-</span> <span class="string">disabled_manually</span>      <span class="attr">delete_run_by_conclusion_pattern:</span>        <span class="attr">description:</span> <span class="string">&#x27;Remove workflow by conclusion: action_required, cancelled, failure, skipped, success&#x27;</span>        <span class="attr">required:</span> <span class="literal">true</span>        <span class="attr">default:</span> <span class="string">&quot;All&quot;</span>        <span class="attr">type:</span> <span class="string">choice</span>        <span class="attr">options:</span>          <span class="bullet">-</span> <span class="string">&quot;All&quot;</span>          <span class="bullet">-</span> <span class="string">action_required</span>          <span class="bullet">-</span> <span class="string">cancelled</span>          <span class="bullet">-</span> <span class="string">failure</span>          <span class="bullet">-</span> <span class="string">skipped</span>          <span class="bullet">-</span> <span class="string">success</span>      <span class="attr">dry_run:</span>        <span class="attr">description:</span> <span class="string">&#x27;Only log actions, do not perform any delete operations.&#x27;</span>        <span class="attr">required:</span> <span class="literal">false</span><span class="attr">jobs:</span>  <span class="attr">del_runs:</span>    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span>    <span class="attr">steps:</span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Delete</span> <span class="string">workflow</span> <span class="string">runs</span>        <span class="attr">uses:</span> <span class="string">Mattraks/delete-workflow-runs@v2</span>        <span class="attr">with:</span>          <span class="attr">token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ACCESS_TOKEN</span> <span class="string">&#125;&#125;</span>          <span class="attr">repository:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.repository</span> <span class="string">&#125;&#125;</span>          <span class="attr">retain_days:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.days</span> <span class="string">&#125;&#125;</span>          <span class="attr">keep_minimum_runs:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.minimum_runs</span> <span class="string">&#125;&#125;</span>          <span class="attr">delete_workflow_pattern:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.delete_workflow_pattern</span> <span class="string">&#125;&#125;</span>          <span class="attr">delete_workflow_by_state_pattern:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.delete_workflow_by_state_pattern</span> <span class="string">&#125;&#125;</span>          <span class="attr">delete_run_by_conclusion_pattern:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.delete_run_by_conclusion_pattern</span> <span class="string">&#125;&#125;</span>          <span class="attr">dry_run:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.inputs.dry_run</span> <span class="string">&#125;&#125;</span></code></pre><h2 id="open-repository-actions">open repository actions</h2><p><a href="https://github.com/USERNAME/REPOSITORY/actions">https://github.com/USERNAME/REPOSITORY/actions</a></p><p><img src="https://github.com/dimaslanjaka/source-posts/assets/12471057/58b318de-210b-41fa-8ffc-3f21896b1982" alt=""></p><h2 id="select-delete-old-workflows-run-logs">select delete old workflows run logs</h2><p><img src="https://github.com/dimaslanjaka/source-posts/assets/12471057/7ecef604-2a0c-4032-96bc-3f1aed734248" alt=""></p><h2 id="click-run-workflow">click run workflow</h2><p><img src="https://github.com/dimaslanjaka/source-posts/assets/12471057/13815193-c6db-4538-b6da-31a2b2022316" alt=""><br><img src="https://github.com/dimaslanjaka/source-posts/assets/12471057/0728f88f-6ae5-4174-9bc9-ae6022ddaff8" alt=""></p><h2 id="wait-until-finish">wait until finish</h2><p>after finished your workflows logs should be emptied/cleaned</p><h2 id="conclusion">conclusion</h2><p>below is the result logs of workflows cleaned<br><img src="https://github.com/dimaslanjaka/source-posts/assets/12471057/c5362839-c4fd-49e4-9908-71eaa1d5b90d" alt=""></p>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/programming/">programming</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/github/">github</category>
      
      <category domain="https://www.webmanajemen.com/tags/tips-tricks/">tips &amp; tricks</category>
      
      <category domain="https://www.webmanajemen.com/tags/workflows/">workflows</category>
      
      
      <comments>https://www.webmanajemen.com/GitHub/how-to-remove-github-workflows-logs.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>How to reorder cygwin binary execution files as first priority</title>
      <link>https://www.webmanajemen.com/2023/08/reorder-cygwin-binary-execution-files-as-priority.html</link>
      <guid>https://www.webmanajemen.com/2023/08/reorder-cygwin-binary-execution-files-as-priority.html</guid>
      <pubDate>Thu, 24 Aug 2023 04:00:39 GMT</pubDate>
      
      <description>How to reorder cygwin binary execution files as first priority Script header bash to reorder cygwin binary execution files as priority /usr/bin/env bash install</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Script-header-bash-to-reorder-cygwin-binary-execution-files-as-priority">Script header bash to reorder cygwin binary execution files as priority</h2><pre><code class="highlight bash"><span class="meta">#!/usr/bin/env bash</span><span class="comment"># install variant debug and start activity</span>(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># absolute path script directory</span>SCRIPT_DIR=$( <span class="built_in">cd</span> -- <span class="string">&quot;<span class="subst">$( dirname -- <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">pwd</span> )<span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*)    basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`    <span class="comment"># make cygwin bin as priority</span>    <span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>    ;;<span class="keyword">esac</span><span class="comment"># YOUR CODES</span></code></pre><h2 id="Script-header-bash-to-acquire-sudo-previlege">Script header bash to acquire sudo previlege</h2><pre><code class="highlight bash"><span class="meta">#!/usr/bin/env bash</span><span class="comment"># install variant debug and start activity</span>(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># absolute path script directory</span>SCRIPT_DIR=$( <span class="built_in">cd</span> -- <span class="string">&quot;<span class="subst">$( dirname -- <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">pwd</span> )<span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*)    basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`    <span class="comment"># make cygwin bin as priority</span>    <span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>    ;;<span class="keyword">esac</span>SUDO_CMD=<span class="string">&quot;&quot;</span><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$USER</span>&quot;</span> != <span class="string">&quot;root&quot;</span> ]; <span class="keyword">then</span>  SUDO_CMD=<span class="string">&quot;sudo &quot;</span><span class="keyword">fi</span><span class="variable">$SUDO_CMD</span> <span class="built_in">echo</span> <span class="string">&quot;sudo granted&quot;</span><span class="comment"># YOUR CODES</span></code></pre>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/programming/">programming</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/bash/">bash</category>
      
      
      <comments>https://www.webmanajemen.com/2023/08/reorder-cygwin-binary-execution-files-as-priority.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Common Settings For .bashrc</title>
      <link>https://www.webmanajemen.com/2023/08/common-settings-for-bashrc.html</link>
      <guid>https://www.webmanajemen.com/2023/08/common-settings-for-bashrc.html</guid>
      <pubDate>Wed, 23 Aug 2023 17:00:51 GMT</pubDate>
      
      <description>Common Settings For .bashrc custom NodeJS executable pathsif [ -d /media/dimaslanjaka/DATA/bin/node/linux/bin ] ; then export PATH=PATH:/media/dimaslanjaka/DATA</description>
      
      
      
      <content:encoded><![CDATA[<pre><code class="highlight properties"><span class="comment"># custom NodeJS executable paths</span><span class="attr">if</span> <span class="string">[ -d &quot;/media/dimaslanjaka/DATA/bin/node/linux/bin&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:/media/dimaslanjaka/DATA/bin/node/linux/bin&quot;</span><span class="attr">fi</span><span class="comment"># search executable files &lt;cwd&gt;/bin</span><span class="attr">if</span> <span class="string">[ -d &quot;./bin&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:./bin&quot;</span><span class="attr">fi</span><span class="comment"># search executable files &lt;cwd&gt;/node_modules/.bin</span><span class="attr">if</span> <span class="string">[ -d &quot;./node_modules/.bin&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:./node_modules/.bin&quot;</span><span class="attr">fi</span><span class="comment"># lampp configuration starts</span><span class="attr">if</span> <span class="string">[ -d &quot;/opt/lampp&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:/opt/lampp&quot;</span><span class="attr">fi</span><span class="attr">if</span> <span class="string">[ -d &quot;/opt/lampp/bin&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:/opt/lampp/bin&quot;</span><span class="attr">fi</span><span class="comment"># lampp configuration ends</span><span class="attr">if</span> <span class="string">[ -d &quot;/media/dimaslanjaka/DATA/bin/composer&quot; ] ; then</span>    <span class="attr">export</span> <span class="string">PATH=&quot;$PATH:/media/dimaslanjaka/DATA/bin/composer&quot;</span><span class="attr">fi</span><span class="comment"># android development</span><span class="attr">export</span> <span class="string">ANDROID_HOME=&quot;$HOME/Android/Sdk&quot;</span><span class="attr">export</span> <span class="string">PATH=&quot;$ANDROID_HOME/cmdline-tools/bin:$ANDROID_HOME/platform-tools:$PATH&quot;</span><span class="comment"># android, groovy, gradle development</span><span class="attr">export</span> <span class="string">GRADLE_HOME=&quot;$HOME/.gradle&quot;</span><span class="attr">export</span> <span class="string">GRADLE_USER_HOME=&quot;$GRADLE_HOME&quot;</span><span class="comment"># python development</span><span class="attr">export</span> <span class="string">PYTHON=&quot;/usr/bin/python&quot;</span><span class="comment"># java, kotlin development</span><span class="attr">export</span> <span class="string">JAVA_HOME=&quot;/media/dimaslanjaka/DATA/bin/java/linux/java-11&quot;</span><span class="attr">export</span> <span class="string">PATH=&quot;$PATH:$JAVA_HOME/bin&quot;</span><span class="comment"># search executable files ~/.local/bin</span><span class="attr">export</span> <span class="string">PATH=&quot;$PATH:$HOME/.local/bin&quot;</span><span class="comment"># yarn v1 devekioment</span><span class="attr">export</span> <span class="string">PATH=&quot;$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH&quot;</span></code></pre>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/programming/">programming</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/bash/">bash</category>
      
      
      <comments>https://www.webmanajemen.com/2023/08/common-settings-for-bashrc.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Script java killer</title>
      <link>https://www.webmanajemen.com/Java/kill-java-script.html</link>
      <guid>https://www.webmanajemen.com/Java/kill-java-script.html</guid>
      <pubDate>Wed, 23 Aug 2023 06:32:38 GMT</pubDate>
      
      <description>Script java killer Windows CMD create script with name killjava.cmd or killjava.bat killjava.cmd killjava.bat @echo offtaskkill /f /im jqs.exetaskkill /f /im ja</description>
      
      
      
      <content:encoded><![CDATA[<h2 id="Windows-CMD">Windows CMD</h2><p>create script with name <code>killjava.cmd</code> or <code>killjava.bat</code></p><pre><code class="highlight cmd">@<span class="built_in">echo</span> off<span class="built_in">taskkill</span> /f /im jqs.exe<span class="built_in">taskkill</span> /f /im javaw.exe<span class="built_in">taskkill</span> /f /im java.exe<span class="built_in">taskkill</span> /f /im geckodriver.exe<span class="built_in">taskkill</span> /f /im chromedriver.exe<span class="built_in">taskkill</span> /f /im node.exe</code></pre><h2 id="Windows-Powershell">Windows Powershell</h2><p>create script with name <code>killjava.ps1</code></p><pre><code class="highlight powershell">cmd <span class="string">&quot;/C TASKKILL /IM node.exe /F&quot;</span></code></pre><h2 id="Bash">Bash</h2><p>create script with name <code>kill-process</code></p><pre><code class="highlight bash"><span class="meta">#!/usr/bin/env bash</span><span class="comment"># make cygwin bin as priority</span><span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>;(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># absolute path script directory</span>SCRIPT_DIR=$( <span class="built_in">cd</span> -- <span class="string">&quot;<span class="subst">$( dirname -- <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">pwd</span> )<span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*) basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`;;<span class="keyword">esac</span>ps -W | grep <span class="string">&quot;<span class="variable">$1</span>&quot;</span> | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> | xargs <span class="built_in">kill</span> -f;</code></pre><p>create java killer script with name <code>killjava</code></p><pre><code class="highlight bash"><span class="meta">#!/usr/bin/env bash</span><span class="comment"># make cygwin bin as priority</span><span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:<span class="variable">$PATH</span>&quot;</span>;(<span class="built_in">set</span> -o igncr) 2&gt;/dev/null &amp;&amp; <span class="built_in">set</span> -o igncr; <span class="comment"># cygwin encoding fix</span><span class="comment"># absolute path working directory</span>basecwd=<span class="variable">$&#123;PWD&#125;</span><span class="comment"># base script directory</span>basedir=`<span class="built_in">dirname</span> <span class="string">&quot;<span class="variable">$0</span>&quot;</span>`<span class="comment"># absolute path script directory</span>SCRIPT_DIR=$( <span class="built_in">cd</span> -- <span class="string">&quot;<span class="subst">$( dirname -- <span class="string">&quot;<span class="variable">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&gt; /dev/null &amp;&amp; <span class="built_in">pwd</span> )<span class="keyword">case</span> `<span class="built_in">uname</span>` <span class="keyword">in</span>  *CYGWIN*) basedir=`cygpath -w <span class="string">&quot;<span class="variable">$basedir</span>&quot;</span>`;;<span class="keyword">esac</span><span class="comment">#kill -9 $(ps aux | grep &#x27;\\snode\\s&#x27; | awk &#x27;&#123;print $2&#125;&#x27;)</span><span class="keyword">if</span> ! [ -x <span class="string">&quot;<span class="subst">$(command -v killall)</span>&quot;</span> ]; <span class="keyword">then</span>  kill-process java  kill-process javaw<span class="keyword">else</span>  killall java  killall javaw<span class="keyword">fi</span></code></pre><h2 id="Usage">Usage</h2><ul><li>add parent folder these files into enviroment PATH</li><li>now you can type <code>killjava</code> at terminal to kill java processes</li></ul>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/programming/">programming</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/bash/">bash</category>
      
      <category domain="https://www.webmanajemen.com/tags/cmd/">cmd</category>
      
      <category domain="https://www.webmanajemen.com/tags/java/">java</category>
      
      
      <comments>https://www.webmanajemen.com/Java/kill-java-script.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>How to remove all files from the git history that are not currently present?</title>
      <link>https://www.webmanajemen.com/GitHub/how-to-remove-all-files-from-the-git-history-that-are-not-currently-present.html</link>
      <guid>https://www.webmanajemen.com/GitHub/how-to-remove-all-files-from-the-git-history-that-are-not-currently-present.html</guid>
      <pubDate>Tue, 22 Aug 2023 09:36:12 GMT</pubDate>
      
      <description>How to remove all files from the git history that are not currently present? SummaryIve seen several articles and questions about how to remove a single file fr</description>
      
      
      
      <content:encoded><![CDATA[<details>  <summary>Summary</summary><p>I’ve seen several articles and questions about how to remove a <em>single</em> file from all git history. Example: <a href="https://stackoverflow.com/questions/2100907/how-to-remove-delete-a-large-file-from-commit-history-in-git-repository">How to remove/delete a large file from commit history in Git repository?</a></p><p>What I’d like to do is remove <em>all</em> files that are not <em>currently present</em> at the head of the master branch.</p><p>My use case is that I’m splitting off a smaller repository (call it <code>small</code> ) from a monolithic repository (call it <code>monolith</code> ). I want to preserve the git history when creating <code>small</code> , but only the <em>relevant</em> git history.</p><p>First, I created a new repository <code>small</code> on GitHub. Then, on my laptop, I added it as a remote named <code>origin-small</code> to my local <code>monolith</code> repository, and pushed the current state of the master branch of <code>monolith</code> to <code>origin-small</code> .</p><p>I then removed the remote <code>origin-small</code> from <code>monolith</code> , changed directories, and cloned <code>small</code> from GitHub. Voilà, I had a copy of my original repository, <code>monolith</code> , with its full history.</p><p>But, there are loads of files in the history of <code>small</code> that are no longer relevant, and they are bloating the repo.</p><p>What I’d like to do is:</p><ol><li>Delete all of the unnecessary files from <code>small</code> .</li><li>Run a command to clear the whole git history of the files that I just deleted.</li></ol><p>Is there a way to do this with a single command? Or do I need to run <code>git filter-branch</code> once for every file/directory that I want to remove?</p></details><p>I ended up using <code>git-filter-repo</code> . <strong>WARNING: This approach is NOT able to update tags on the remote, if there are any.</strong></p><ol><li>Install <code>git-filter-repo</code> .</li></ol><p><code>brew install git-filter-repo</code></p><ol start="2"><li>Clone your desired repo, in mirror form.</li></ol><p><code>git clone --mirror &lt;my-repo-url&gt;</code></p><ol start="3"><li>Enter the repo directory.</li></ol><p><code>cd &lt;my-repo-name&gt;</code></p><ol start="4"><li>Analyze the repo to identify all files that are in the history, but no longer exist.</li></ol><p><code>git filter-repo --analyze</code></p><ol start="5"><li><p>In the <code>analysis</code> output directory, there will be a file named <code>path-deleted-sizes.txt</code> that contains a list all files that were committed at some point, and were later deleted, but still exist in the git history.</p><p>Create a new file that lacks the headers and other columns.</p></li></ol><p><code>tail +3 ./filter-repo/analysis/path-deleted-sizes.txt | tr -s ' ' | cut -d ' ' -f 5- &gt; ./filter-repo/analysis/path-deleted.txt</code></p><ol start="6"><li>Clean the git history of all files that no longer exist. This will also clean dirty commits, remove empty commits, and recompress everything for you.</li></ol><p><code>git filter-repo --invert-paths --paths-from-file ./filter-repo/analysis/path-deleted.txt</code></p><ol start="7"><li>Clean up the <code>./filter-repo</code> directory, or you won’t be able to push your changes.</li></ol><p><code>rm -rf ./filter-repo</code></p><ol start="8"><li>Force-push all refs to the origin. It will force-push, even though the command doesn’t indicate it. Also, it will update <em>all</em> branches on the remote, which is convenient. If you have branch protection enabled on some branches in GitHub/Bitbucket/etc., then you will need to allow force-pushes. You can always re-run this command if you find that some refs could not be force-pushed.</li></ol><p><code>git push --force-with-lease</code></p>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/programming/">programming</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/bash/">bash</category>
      
      <category domain="https://www.webmanajemen.com/tags/github/">github</category>
      
      <category domain="https://www.webmanajemen.com/tags/cmd/">cmd</category>
      
      
      <comments>https://www.webmanajemen.com/GitHub/how-to-remove-all-files-from-the-git-history-that-are-not-currently-present.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Monster giant dinbear</title>
      <link>https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear.html</link>
      <guid>https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear.html</guid>
      <pubDate>Sun, 06 Aug 2023 14:00:28 GMT</pubDate>
      
      <description>Monster giant dinbear giant dinbear Information from Chimeraland giant dinbear default maximum attribute GRADE N/A N/A Attack N/A </description>
      
      
      
      <content:encoded><![CDATA[<link  rel="stylesheet"  href="https://rawcdn.githack.com/dimaslanjaka/Web-Manajemen/870a349/css/bootstrap-5-3-0-alpha3-wrapper.css"/><section id="bootstrap-wrapper">  <div data-bs-theme="dark">    <h2>giant dinbear Information from Chimeraland</h2>    <h2 id="attribute"><i>giant dinbear</i> default maximum attribute</h2>    <div class="row">      <div class="col mb-2">        <div class="card">          <div class="card-body">            <table>              <tr>                <th>GRADE</th>                <td>N/A <br />N/A</td>              </tr>              <tr>                <th>Attack</th>                <td>N/A</td>              </tr>              <tr>                <th>Health Point (HP)</th>                <td>N/A</td>              </tr>              <tr>                <th>Defense</th>                <td></td>              </tr>            </table>          </div>        </div>      </div>    </div>    <blockquote class="bd-callout bd-callout-warning">      Note: giant dinbear stat will increase based on their <b>grade</b> and      <b>delicacies/tasty</b>.    </blockquote>    <hr />    <h2 id="delicacies">Delicacies/Tasty for giant dinbear</h2>    <div class="card">      <div class="card-body">        <div class="table-responsive">          <table class="table table-striped">            <thead>              <tr>                <th>Recipe Name</th>                <th>Link</th>              </tr>            </thead>            <tbody></tbody>          </table>        </div>      </div>    </div>    <hr />    <div id="gallery">      <h2>Galleries for giant dinbear</h2>      <div class="row">        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-36-52-84_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-36-52-84_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-36-52-84_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-36-56-30_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-36-56-30_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-36-56-30_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-37-00-52_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-37-00-52_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-37-00-52_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-37-04-50_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-37-04-50_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-37-04-50_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-37-31-36_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-37-31-36_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-37-31-36_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-38-04-16_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-38-04-16_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-38-04-16_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-38-09-67_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-38-09-67_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-38-09-67_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear/Screenshot_2023-08-06-23-38-15-48_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant dinbear Screenshot_2023-08-06-23-38-15-48_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant dinbear</i>              Screenshot_2023-08-06-23-38-15-48_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>      </div>    </div>  </div></section>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/games/">games</category>
      
      <category domain="https://www.webmanajemen.com/categories/games/chimeraland/">chimeraland</category>
      
      <category domain="https://www.webmanajemen.com/categories/games/chimeraland/monsters/">monsters</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/chimeraland/">chimeraland</category>
      
      <category domain="https://www.webmanajemen.com/tags/pet/">pet</category>
      
      <category domain="https://www.webmanajemen.com/tags/monster/">monster</category>
      
      
      <comments>https://www.webmanajemen.com/chimeraland/monsters/giant-dinbear.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Monster giant squid</title>
      <link>https://www.webmanajemen.com/chimeraland/monsters/giant-squid.html</link>
      <guid>https://www.webmanajemen.com/chimeraland/monsters/giant-squid.html</guid>
      <pubDate>Sun, 06 Aug 2023 14:00:28 GMT</pubDate>
      
      <description>Monster giant squid giant squid Information from Chimeraland giant squid default maximum attribute GRADE N/A N/A Attack N/A </description>
      
      
      
      <content:encoded><![CDATA[<link  rel="stylesheet"  href="https://rawcdn.githack.com/dimaslanjaka/Web-Manajemen/870a349/css/bootstrap-5-3-0-alpha3-wrapper.css"/><section id="bootstrap-wrapper">  <div data-bs-theme="dark">    <h2>giant squid Information from Chimeraland</h2>    <h2 id="attribute"><i>giant squid</i> default maximum attribute</h2>    <div class="row">      <div class="col mb-2">        <div class="card">          <div class="card-body">            <table>              <tr>                <th>GRADE</th>                <td>N/A <br />N/A</td>              </tr>              <tr>                <th>Attack</th>                <td>N/A</td>              </tr>              <tr>                <th>Health Point (HP)</th>                <td>N/A</td>              </tr>              <tr>                <th>Defense</th>                <td></td>              </tr>            </table>          </div>        </div>      </div>    </div>    <blockquote class="bd-callout bd-callout-warning">      Note: giant squid stat will increase based on their <b>grade</b> and      <b>delicacies/tasty</b>.    </blockquote>    <hr />    <h2 id="delicacies">Delicacies/Tasty for giant squid</h2>    <div class="card">      <div class="card-body">        <div class="table-responsive">          <table class="table table-striped">            <thead>              <tr>                <th>Recipe Name</th>                <th>Link</th>              </tr>            </thead>            <tbody></tbody>          </table>        </div>      </div>    </div>    <hr />    <div id="gallery">      <h2>Galleries for giant squid</h2>      <div class="row">        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-squid/Screenshot_2023-08-07-01-18-29-71_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant squid Screenshot_2023-08-07-01-18-29-71_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant squid</i>              Screenshot_2023-08-07-01-18-29-71_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-squid/Screenshot_2023-08-07-01-18-33-75_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant squid Screenshot_2023-08-07-01-18-33-75_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant squid</i>              Screenshot_2023-08-07-01-18-33-75_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-squid/Screenshot_2023-08-07-01-18-38-89_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant squid Screenshot_2023-08-07-01-18-38-89_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant squid</i>              Screenshot_2023-08-07-01-18-38-89_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-squid/Screenshot_2023-08-07-01-18-42-81_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant squid Screenshot_2023-08-07-01-18-42-81_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant squid</i>              Screenshot_2023-08-07-01-18-42-81_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-squid/Screenshot_2023-08-07-01-18-49-54_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant squid Screenshot_2023-08-07-01-18-49-54_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant squid</i>              Screenshot_2023-08-07-01-18-49-54_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-squid/Screenshot_2023-08-07-01-18-59-74_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant squid Screenshot_2023-08-07-01-18-59-74_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant squid</i>              Screenshot_2023-08-07-01-18-59-74_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-squid/Screenshot_2023-08-07-01-19-04-34_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant squid Screenshot_2023-08-07-01-19-04-34_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant squid</i>              Screenshot_2023-08-07-01-19-04-34_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>        <div class="col-lg-6 col-12">          <figure>            <img              src="https://www.webmanajemen.com/chimeraland/monsters/giant-squid/Screenshot_2023-08-07-01-19-11-33_f4fc9fb10454fc3a3dacb99dff89b568.webp"              alt="giant squid Screenshot_2023-08-07-01-19-11-33_f4fc9fb10454fc3a3dacb99dff89b568.webp"            />            <figcaption style="word-wrap: break-word">              <i>giant squid</i>              Screenshot_2023-08-07-01-19-11-33_f4fc9fb10454fc3a3dacb99dff89b568.webp.            </figcaption>          </figure>        </div>      </div>    </div>  </div></section>]]></content:encoded>
      
      
      <category domain="https://www.webmanajemen.com/categories/games/">games</category>
      
      <category domain="https://www.webmanajemen.com/categories/games/chimeraland/">chimeraland</category>
      
      <category domain="https://www.webmanajemen.com/categories/games/chimeraland/monsters/">monsters</category>
      
      
      <category domain="https://www.webmanajemen.com/tags/chimeraland/">chimeraland</category>
      
      <category domain="https://www.webmanajemen.com/tags/pet/">pet</category>
      
      <category domain="https://www.webmanajemen.com/tags/monster/">monster</category>
      
      
      <comments>https://www.webmanajemen.com/chimeraland/monsters/giant-squid.html#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
