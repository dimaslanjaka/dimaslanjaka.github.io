import Promise from 'bluebird';
interface TagFunction {
    (args: any[], content: string): string;
}
type RegisterOptions = {
    async?: boolean;
    ends?: boolean;
};
declare class Tag {
    env: any;
    source: any;
    constructor();
    register(name: string, fn: TagFunction): void;
    register(name: string, fn: TagFunction, ends: boolean): void;
    register(name: string, fn: TagFunction, options: RegisterOptions): void;
    unregister(name: any): void;
    render(str: any, options: {
        source?: string;
    }, callback: any): Promise<unknown>;
}
export = Tag;
