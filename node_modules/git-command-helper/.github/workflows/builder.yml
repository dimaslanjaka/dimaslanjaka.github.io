name: Build

on:
  workflow_call:
    inputs:
      node-version:
        required: true
        type: string
        default: 14.x
      os:
        required: false
        type: string
        default: ubuntu-latest
    secrets:
      ACCESS_TOKEN:
        required: true
  workflow_dispatch:

jobs:
  build:
    name: build using ${{ inputs.os }} node ${{ inputs.node-version }}
    env:
      NODE_OPTIONS: '--max_old_space_size=8192' #8192 4096 --expose-gc
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      node-version: ${{ inputs.node-version }}
      YARN_CHECKSUM_BEHAVIOR: update
      YARN_ENABLE_SCRIPTS: true
      YARN_NODE_LINKER: node-modules

    runs-on: ${{ inputs.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: recursive

      - name: Pull & update submodules recursively
        continue-on-error: true
        run: |
          git submodule update --init --recursive
          git submodule update --recursive --remote
          git pull -X theirs
          echo "init submodules"
          git submodule init
          git submodule foreach "git submodule init"
          echo "sync submodules"
          git submodule sync
          git submodule foreach "git submodule sync"
          echo "update submodules"
          mkdir -p bin >/dev/null 2>&1
          curl -L https://github.com/dimaslanjaka/bin/raw/master/bin/submodule-install > bin/submodule-install
          rm -rf .git/modules
          bash ./bin/submodule-install

      - name: download lock file from 'master'
        run: curl -L https://github.com/dimaslanjaka/git-command-helper/raw/master/yarn.lock > yarn.lock
        shell: bash

      - uses: actions/cache@v3
        name: save cache
        with:
          path: |
            **/.yarn
            **/release*
            **/yarn.lock
            **/node_modules
            **/tmp
            **/dist
          key: ${{ runner.os }}-${{ env.node-version }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}
            ${{ runner.os }}-

      - name: initialize Node ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}

      - name: Enable corepack
        run: corepack enable

      - name: Install Global Packages
        run: npm i -g typescript ts-node gulp-cli hexo-cli webpack-cli

      - name: Install
        run: touch yarn.lock && yarn install --inline-builds
        id: install
        shell: bash

      - name: Build
        run: npm run build
      - name: Pack
        run: npm run pack -- --commit
