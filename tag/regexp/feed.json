{
    "version": "https://jsonfeed.org/version/1",
    "title": "Website Management Indonesia • All posts by \"regexp\" tag",
    "description": "External source WMI Github Laboratory",
    "home_page_url": "https://git.webmanajemen.com",
    "items": [
        {
            "id": "https://git.webmanajemen.com/RegExp/RegExp.html",
            "url": "https://git.webmanajemen.com/RegExp/RegExp.html",
            "title": "What is RegExp",
            "date_published": "2021-09-21T17:00:00.000Z",
            "content_html": "<!--https://medium.com/factory-mind/regex-tutorial-a-simple-cheatsheet-by-examples-649dc1c3f285-->\n<h2 id=\"what-is-regular-expression\"><a class=\"markdownIt-Anchor\" href=\"#what-is-regular-expression\"></a> What Is Regular Expression ?</h2>\n<p>Regular Expression (RegExp) a sequence of symbols and characters expressing a string or pattern to be searched for within a longer piece of text. <a href=\"https://en.wikipedia.org/wiki/Regular_expression\">Read More</a></p>\n<h2 id=\"what-can-a-regular-expression-be-used-for\"><a class=\"markdownIt-Anchor\" href=\"#what-can-a-regular-expression-be-used-for\"></a> What can a regular expression be used for ?</h2>\n<p>A regular expression can be a single character, or a more complicated pattern. Regular expressions can be used to perform all types of text search and text replace operations. /w3schools/i is a regular expression.</p>\n<h2 id=\"which-is-the-best-example-of-a-regex\"><a class=\"markdownIt-Anchor\" href=\"#which-is-the-best-example-of-a-regex\"></a> Which is the best example of a regex ?</h2>\n<ul>\n<li>\n<p><strong>Anchors — ^ and $</strong></p>\n<table>\n<thead>\n<tr>\n<th>RegExp</th>\n<th>Explanations</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><b>^</b>Hello</td>\n<td>matches any string that <em>starts with <strong>Hello</strong></em> -&gt;  <a href=\"https://regex101.com/r/cO8lqs/2\">Try it!</a></td>\n</tr>\n<tr>\n<td>world<b>$</b></td>\n<td>matches a string that <em>ends with <strong>world</strong></em></td>\n</tr>\n<tr>\n<td><b>^</b>Hello world<b>$</b></td>\n<td><em>exact string match</em> (starts and ends with <strong>Hello world</strong>)</td>\n</tr>\n<tr>\n<td>Hello</td>\n<td><em>matches any string</em> that has the text <strong>Hello</strong> in it</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p><strong>Quantifiers — * + ? and {}</strong></p>\n<table>\n<thead>\n<tr>\n<th>RegExp</th>\n<th>Explanations</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>abc*</td>\n<td>matches a string that has ab followed by zero or more c -&gt;  <a href=\"https://regex101.com/r/cO8lqs/1\">Try it!</a></td>\n</tr>\n<tr>\n<td>abc+</td>\n<td>matches a string that has ab followed by one or more</td>\n</tr>\n<tr>\n<td>abc<b>?</b></td>\n<td>matches a string that has ab followed by zero or one</td>\n</tr>\n<tr>\n<td>abc<b>{2}</b></td>\n<td>matches a string that has ab followed by 2</td>\n</tr>\n<tr>\n<td>abc<b>{2,}</b></td>\n<td>matches a string that has ab followed by 2 or more</td>\n</tr>\n<tr>\n<td>abc<b>{2,5}</b></td>\n<td>matches a string that has ab followed by 2 up to 5</td>\n</tr>\n<tr>\n<td>ca<b>(bc)*</b></td>\n<td>matches a string that has a followed by zero or more copies of the sequence</td>\n</tr>\n<tr>\n<td>bca<b>(bc){2,5}</b></td>\n<td>matches a string that has a followed by 2 up to 5 copies of the sequence bc</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p><strong>OR operator — | or []</strong></p>\n<table>\n<thead>\n<tr>\n<th>RegExp</th>\n<th>Explanations</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>a(b|c)</td>\n<td>matches a string that has <strong><em>a</em> followed by <em>b</em> or <em>c</em></strong> (and captures <strong><em>b</em> or <em>c</em></strong>) -&gt; <a href=\"https://regex101.com/r/cO8lqs/3\">Try it!</a></td>\n</tr>\n<tr>\n<td>a[bc]</td>\n<td>same as previous, <strong>but without capturing <em>b</em> or <em>c</em></strong></td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p><strong>Character classes — \\d \\w \\s and .</strong></p>\n<table>\n<thead>\n<tr>\n<th>RegExp</th>\n<th>Explanations</th>\n</tr>\n</thead>\n<tbody></tbody>\n</table>\n</li>\n</ul>\n",
            "tags": [
                "RegExp"
            ]
        },
        {
            "id": "https://git.webmanajemen.com/RegExp/badword.html",
            "url": "https://git.webmanajemen.com/RegExp/badword.html",
            "title": "Badword",
            "date_published": "2021-09-21T17:00:00.000Z",
            "content_html": "<!--toc-->\n<h2 id=\"main-expression\"><a class=\"markdownIt-Anchor\" href=\"#main-expression\"></a> Main Expression</h2>\n<figure class=\"highlight plaintext\"><figcaption><span>&#123;#regexp-main&#125;</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^((?!badword).)*$</span><br></pre></td></tr></table></figure>\n<h2 id=\"try-it\"><a class=\"markdownIt-Anchor\" href=\"#try-it\"></a> Try It</h2>\n<p><a href=\"https://www.regextester.com/15\">Click Here</a></p>\n<!-- script /RegExp/RegExp/badwords.js -->",
            "tags": [
                "RegExp"
            ]
        }
    ]
}