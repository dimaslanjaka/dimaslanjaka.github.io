{"version":3,"file":"dev/index.bundle.js","mappings":"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","sources":["webpack://AxiosCacheInterceptor/webpack/universalModuleDefinition","webpack://AxiosCacheInterceptor/webpack/bootstrap","webpack://AxiosCacheInterceptor/webpack/runtime/define property getters","webpack://AxiosCacheInterceptor/webpack/runtime/hasOwnProperty shorthand","webpack://AxiosCacheInterceptor/webpack/runtime/make namespace object","webpack://AxiosCacheInterceptor/./node_modules/.pnpm/cache-parser@1.2.4/node_modules/cache-parser/dist/index.mjs","webpack://AxiosCacheInterceptor/./src/header/headers.ts","webpack://AxiosCacheInterceptor/./src/header/interpreter.ts","webpack://AxiosCacheInterceptor/./node_modules/.pnpm/fast-defer@1.1.7/node_modules/fast-defer/dist/index.mjs","webpack://AxiosCacheInterceptor/./src/interceptors/util.ts","webpack://AxiosCacheInterceptor/./src/interceptors/request.ts","webpack://AxiosCacheInterceptor/./src/util/cache-predicate.ts","webpack://AxiosCacheInterceptor/./src/util/update-cache.ts","webpack://AxiosCacheInterceptor/./src/interceptors/response.ts","webpack://AxiosCacheInterceptor/./src/storage/build.ts","webpack://AxiosCacheInterceptor/./src/storage/memory.ts","webpack://AxiosCacheInterceptor/./node_modules/.pnpm/object-code@1.2.4/node_modules/object-code/dist/index.mjs","webpack://AxiosCacheInterceptor/./src/util/key-generator.ts","webpack://AxiosCacheInterceptor/./src/cache/create.ts","webpack://AxiosCacheInterceptor/./src/storage/web-api.ts","webpack://AxiosCacheInterceptor/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AxiosCacheInterceptor\"] = factory();\n\telse\n\t\troot[\"AxiosCacheInterceptor\"] = factory();\n})(typeof self !== 'undefined' ? self : this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var e=Symbol(\"cache-parser\");function a(e){return(\"string\"==typeof e||\"number\"==typeof e)&&(e=Number(e))>=0&&e<Infinity}function r(e){return!0===e||\"number\"==typeof e||\"string\"==typeof e&&\"false\"!==e}var t=Number;function s(s){var n=Object.defineProperty({},e,{enumerable:!1,value:1});if(!s||\"string\"!=typeof s)return n;var i=function(e){var a={},r=e.toLowerCase().replace(/\\s+/g,\"\").split(\",\");for(var t in r){var s,n=r[t].split(\"=\",2);a[n[0]]=null==(s=n[1])||s}return a}(s),u=i[\"max-age\"],l=i[\"max-stale\"],o=i[\"min-fresh\"],m=i[\"s-maxage\"],p=i[\"stale-if-error\"],h=i[\"stale-while-revalidate\"];return r(i.immutable)&&(n.immutable=!0),a(u)&&(n.maxAge=t(u)),a(l)&&(n.maxStale=t(l)),a(o)&&(n.minFresh=t(o)),r(i[\"must-revalidate\"])&&(n.mustRevalidate=!0),r(i[\"must-understand\"])&&(n.mustUnderstand=!0),r(i[\"no-cache\"])&&(n.noCache=!0),r(i[\"no-store\"])&&(n.noStore=!0),r(i[\"no-transform\"])&&(n.noTransform=!0),r(i[\"only-if-cached\"])&&(n.onlyIfCached=!0),r(i.private)&&(n.private=!0),r(i[\"proxy-revalidate\"])&&(n.proxyRevalidate=!0),r(i.public)&&(n.public=!0),a(m)&&(n.sMaxAge=t(m)),a(p)&&(n.staleIfError=t(p)),a(h)&&(n.staleWhileRevalidate=t(h)),n}function n(e){if(!e||\"object\"!=typeof e)return[];var t=[];return r(e.immutable)&&t.push(\"immutable\"),a(e.maxAge)&&t.push(\"max-age=\"+e.maxAge),a(e.maxStale)&&t.push(\"max-stale=\"+e.maxStale),a(e.minFresh)&&t.push(\"min-fresh=\"+e.minFresh),r(e.mustRevalidate)&&t.push(\"must-revalidate\"),r(e.mustUnderstand)&&t.push(\"must-understand\"),r(e.noCache)&&t.push(\"no-cache\"),r(e.noStore)&&t.push(\"no-store\"),r(e.noTransform)&&t.push(\"no-transform\"),r(e.onlyIfCached)&&t.push(\"only-if-cached\"),r(e.private)&&t.push(\"private\"),r(e.proxyRevalidate)&&t.push(\"proxy-revalidate\"),r(e.public)&&t.push(\"public\"),a(e.sMaxAge)&&t.push(\"s-maxage=\"+e.sMaxAge),a(e.staleIfError)&&t.push(\"stale-if-error=\"+e.staleIfError),a(e.staleWhileRevalidate)&&t.push(\"stale-while-revalidate=\"+e.staleWhileRevalidate),t}function i(a){return!!a&&!!a[e]}export{i as isCacheControl,s as parse,n as tokenize};\n//# sourceMappingURL=index.mjs.map\n","export const Header = Object.freeze({\n    /**\n     * ```txt\n     * If-Modified-Since: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since\n     */\n    IfModifiedSince: 'if-modified-since',\n    /**\n     * ```txt\n     * Last-Modified: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Last-Modified\n     */\n    LastModified: 'last-modified',\n    /**\n     * ```txt\n     * If-None-Match: \"<etag_value>\"\n     * If-None-Match: \"<etag_value>\", \"<etag_value>\", …\n     * If-None-Match: *\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match\n     */\n    IfNoneMatch: 'if-none-match',\n    /**\n     * ```txt\n     * Cache-Control: max-age=604800\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n     */\n    CacheControl: 'cache-control',\n    /**\n     * ```txt\n     * Pragma: no - cache;\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Pragma\n     */\n    Pragma: 'pragma',\n    /**\n     * ```txt\n     * ETag: W / '<etag_value>';\n     * ETag: '<etag_value>';\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag\n     */\n    ETag: 'etag',\n    /**\n     * ```txt\n     * Expires: <http-date>\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expires\n     */\n    Expires: 'expires',\n    /**\n     * ```txt\n     * Age: <delta-seconds>\n     * ```\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Age\n     */\n    Age: 'age',\n    /**\n     * Used internally as metadata to mark the cache item as revalidatable and enabling\n     * stale cache state Contains a string of ASCII characters that can be used as ETag for\n     * `If-Match` header Provided by user using `cache.etag` value.\n     *\n     * ```txt\n     * X-Axios-Cache-Etag: \"<etag_value>\"\n     * ```\n     */\n    XAxiosCacheEtag: 'x-axios-cache-etag',\n    /**\n     * Used internally as metadata to mark the cache item as revalidatable and enabling\n     * stale cache state may contain `'use-cache-timestamp'` if `cache.modifiedSince` is\n     * `true`, otherwise will contain a date from `cache.modifiedSince`. If a date is\n     * provided, it can be used for `If-Modified-Since` header, otherwise the cache\n     * timestamp can be used for `If-Modified-Since` header.\n     *\n     * ```txt\n     * X-Axios-Cache-Last-Modified: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n     * X-Axios-Cache-Last-Modified: use-cache-timestamp\n     * ```\n     */\n    XAxiosCacheLastModified: 'x-axios-cache-last-modified',\n    /**\n     * Used internally as metadata to mark the cache item able to be used if the server\n     * returns an error. The stale-if-error response directive indicates that the cache can\n     * reuse a stale response when any error occurs.\n     *\n     * ```txt\n     * XAxiosCacheStaleIfError: <seconds>\n     * ```\n     */\n    XAxiosCacheStaleIfError: 'x-axios-cache-stale-if-error'\n});\n","import { parse } from 'cache-parser';\nimport { Header } from './headers';\nexport const defaultHeaderInterpreter = (headers) => {\n    if (!headers)\n        return 'not enough headers';\n    const cacheControl = headers[Header.CacheControl];\n    if (cacheControl) {\n        const { noCache, noStore, maxAge, maxStale, immutable, staleWhileRevalidate } = parse(String(cacheControl));\n        // Header told that this response should not be cached.\n        if (noCache || noStore) {\n            return 'dont cache';\n        }\n        if (immutable) {\n            // 1 year is sufficient, as Infinity may cause problems with certain storages.\n            // It might not be the best way, but a year is better than none. Facebook shows\n            // that a browser session stays at the most 1 month.\n            return {\n                cache: 1000 * 60 * 60 * 24 * 365\n            };\n        }\n        if (maxAge !== undefined) {\n            const age = headers[Header.Age];\n            return {\n                cache: age\n                    ? // If age is present, we must subtract it from maxAge\n                        (maxAge - Number(age)) * 1000\n                    : maxAge * 1000,\n                // Already out of date, must be requested again\n                stale: \n                // I couldn't find any documentation about who should be used, as they\n                // are not meant to overlap each other. But, as we cannot request in the\n                // background, as the stale-while-revalidate says, and we just increase\n                // its staleTtl when its present, max-stale is being preferred over\n                // stale-while-revalidate.\n                maxStale !== undefined\n                    ? maxStale * 1000\n                    : staleWhileRevalidate !== undefined\n                        ? staleWhileRevalidate * 1000\n                        : undefined\n            };\n        }\n    }\n    const expires = headers[Header.Expires];\n    if (expires) {\n        const milliseconds = Date.parse(String(expires)) - Date.now();\n        return milliseconds >= 0 ? { cache: milliseconds } : 'dont cache';\n    }\n    return 'not enough headers';\n};\n","var r=Symbol();function e(){var e,n,o=new Promise(function(r,o){e=r,n=o});return o.resolve=e,o.reject=n,o[r]=1,o}function n(e){return!!e&&!!e[r]}export{e as deferred,n as isDeferred};\n//# sourceMappingURL=index.mjs.map\n","import { Header } from '../header/headers';\n/**\n * Creates a new validateStatus function that will use the one already used and also\n * accept status code 304.\n */\nexport function createValidateStatus(oldValidate) {\n    return oldValidate\n        ? (status) => oldValidate(status) || status === 304\n        : (status) => (status >= 200 && status < 300) || status === 304;\n}\n/** Checks if the given method is in the methods array */\nexport function isMethodIn(requestMethod = 'get', methodList = []) {\n    requestMethod = requestMethod.toLowerCase();\n    return methodList.some((method) => method === requestMethod);\n}\n/**\n * This function updates the cache when the request is stale. So, the next request to the\n * server will be made with proper header / settings.\n */\nexport function updateStaleRequest(cache, config) {\n    var _a;\n    config.headers || (config.headers = {});\n    const { etag, modifiedSince } = config.cache;\n    if (etag) {\n        const etagValue = etag === true ? (_a = cache.data) === null || _a === void 0 ? void 0 : _a.headers[Header.ETag] : etag;\n        if (etagValue) {\n            config.headers[Header.IfNoneMatch] = etagValue;\n        }\n    }\n    if (modifiedSince) {\n        config.headers[Header.IfModifiedSince] =\n            modifiedSince === true\n                ? // If last-modified is not present, use the createdAt timestamp\n                    cache.data.headers[Header.LastModified] ||\n                        new Date(cache.createdAt).toUTCString()\n                : modifiedSince.toUTCString();\n    }\n}\n/**\n * Creates the new date to the cache by the provided response. Also handles possible 304\n * Not Modified by updating response properties.\n */\nexport function createCacheResponse(response, previousCache) {\n    if (response.status === 304 && previousCache) {\n        // Set the cache information into the response object\n        response.cached = true;\n        response.data = previousCache.data;\n        response.status = previousCache.status;\n        response.statusText = previousCache.statusText;\n        // Update possible new headers\n        response.headers = Object.assign(Object.assign({}, previousCache.headers), response.headers);\n        // return the old cache\n        return previousCache;\n    }\n    // New Response\n    return {\n        data: response.data,\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers\n    };\n}\n","import { deferred } from 'fast-defer';\nimport { Header } from '../header/headers';\nimport { createValidateStatus, isMethodIn, updateStaleRequest } from './util';\nexport function defaultRequestInterceptor(axios) {\n    const onFulfilled = async (config) => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n        var _t, _u, _v, _w, _x, _y;\n        const id = (config.id = axios.generateKey(config));\n        if (config.cache === false) {\n            if (__ACI_DEV__) {\n                (_a = axios.debug) === null || _a === void 0 ? void 0 : _a.call(axios, {\n                    msg: 'Ignoring cache because config.cache === false',\n                    data: config\n                });\n            }\n            return config;\n        }\n        // merge defaults with per request configuration\n        config.cache = Object.assign(Object.assign({}, axios.defaults.cache), config.cache);\n        // Applies sufficient headers to prevent other cache systems to work along with this one\n        //\n        // Its currently used before isMethodIn because if the isMethodIn returns false, the request\n        // shouldn't be cached an therefore neither in the browser.\n        if (config.cache.cacheTakeover) {\n            (_b = (_t = config.headers)[_u = Header.CacheControl]) !== null && _b !== void 0 ? _b : (_t[_u] = 'no-cache');\n            (_c = (_v = config.headers)[_w = Header.Pragma]) !== null && _c !== void 0 ? _c : (_v[_w] = 'no-cache');\n            (_d = (_x = config.headers)[_y = Header.Expires]) !== null && _d !== void 0 ? _d : (_x[_y] = '0');\n        }\n        if (!isMethodIn(config.method, config.cache.methods)) {\n            if (__ACI_DEV__) {\n                (_e = axios.debug) === null || _e === void 0 ? void 0 : _e.call(axios, {\n                    msg: `Ignored because method (${config.method}) is not in cache.methods (${config.cache.methods})`\n                });\n            }\n            return config;\n        }\n        // Assumes that the storage handled staled responses\n        let cache = await axios.storage.get(id, config);\n        const overrideCache = config.cache.override;\n        // Not cached, continue the request, and mark it as fetching\n        ignoreAndRequest: if (cache.state === 'empty' ||\n            cache.state === 'stale' ||\n            overrideCache) {\n            /**\n             * This checks for simultaneous access to a new key. The js event loop jumps on the\n             * first await statement, so the second (asynchronous call) request may have already\n             * started executing.\n             */\n            if (axios.waiting[id] && !overrideCache) {\n                cache = (await axios.storage.get(id, config));\n                /**\n                 * This check is required when a request has it own cache deleted manually, lets\n                 * say by a `axios.storage.delete(key)` and has a concurrent loading request.\n                 * Because in this case, the cache will be empty and may still has a pending key\n                 * on waiting map.\n                 */\n                //@ts-expect-error read above\n                if (cache.state !== 'empty') {\n                    if (__ACI_DEV__) {\n                        (_f = axios.debug) === null || _f === void 0 ? void 0 : _f.call(axios, {\n                            id,\n                            msg: 'Waiting list had an deferred for this key, waiting for it to finish'\n                        });\n                    }\n                    break ignoreAndRequest;\n                }\n            }\n            // Create a deferred to resolve other requests for the same key when it's completed\n            axios.waiting[id] = deferred();\n            /**\n             * Adds a default reject handler to catch when the request gets aborted without\n             * others waiting for it.\n             */\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            axios.waiting[id].catch(() => undefined);\n            await axios.storage.set(id, {\n                state: 'loading',\n                previous: overrideCache\n                    ? // Simply determine if the request is stale or not\n                        // based if it had previous data or not\n                        cache.data\n                            ? 'stale'\n                            : 'empty'\n                    : // Typescript doesn't know that cache.state here can only be 'empty' or 'stale'\n                        cache.state,\n                // Eslint complains a lot :)\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n                data: cache.data,\n                // If the cache is empty and asked to override it, use the current timestamp\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                createdAt: \n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                overrideCache && !cache.createdAt ? Date.now() : cache.createdAt\n            }, config);\n            if (cache.state === 'stale') {\n                updateStaleRequest(cache, config);\n                if (__ACI_DEV__) {\n                    (_g = axios.debug) === null || _g === void 0 ? void 0 : _g.call(axios, {\n                        id,\n                        msg: 'Updated stale request'\n                    });\n                }\n            }\n            config.validateStatus = createValidateStatus(config.validateStatus);\n            if (__ACI_DEV__) {\n                (_h = axios.debug) === null || _h === void 0 ? void 0 : _h.call(axios, {\n                    id,\n                    msg: 'Sending request, waiting for response',\n                    data: {\n                        overrideCache,\n                        state: cache.state\n                    }\n                });\n            }\n            // Hydrates any UI temporarily, if cache is available\n            if (cache.state === 'stale' || cache.data) {\n                await ((_k = (_j = config.cache).hydrate) === null || _k === void 0 ? void 0 : _k.call(_j, cache));\n            }\n            return config;\n        }\n        let cachedResponse;\n        if (cache.state === 'loading') {\n            const deferred = axios.waiting[id];\n            // Just in case, the deferred doesn't exists.\n            /* istanbul ignore if 'really hard to test' */\n            if (!deferred) {\n                await axios.storage.remove(id, config);\n                // Hydrates any UI temporarily, if cache is available\n                if (cache.data) {\n                    await ((_m = (_l = config.cache).hydrate) === null || _m === void 0 ? void 0 : _m.call(_l, cache));\n                }\n                return config;\n            }\n            if (__ACI_DEV__) {\n                (_o = axios.debug) === null || _o === void 0 ? void 0 : _o.call(axios, {\n                    id,\n                    msg: 'Detected concurrent request, waiting for it to finish'\n                });\n            }\n            try {\n                cachedResponse = await deferred;\n            }\n            catch (err) {\n                if (__ACI_DEV__) {\n                    (_p = axios.debug) === null || _p === void 0 ? void 0 : _p.call(axios, {\n                        id,\n                        msg: 'Deferred rejected, requesting again',\n                        data: err\n                    });\n                }\n                // Hydrates any UI temporarily, if cache is available\n                /* istanbul ignore if 'really hard to test' */\n                if (cache.data) {\n                    await ((_r = (_q = config.cache).hydrate) === null || _r === void 0 ? void 0 : _r.call(_q, cache));\n                }\n                // The deferred is rejected when the request that we are waiting rejected cache.\n                return config;\n            }\n        }\n        else {\n            cachedResponse = cache.data;\n        }\n        // Even though the response interceptor receives this one from here,\n        // it has been configured to ignore cached responses = true\n        config.adapter = () => Promise.resolve({\n            config,\n            data: cachedResponse.data,\n            headers: cachedResponse.headers,\n            status: cachedResponse.status,\n            statusText: cachedResponse.statusText,\n            cached: true,\n            id\n        });\n        if (__ACI_DEV__) {\n            (_s = axios.debug) === null || _s === void 0 ? void 0 : _s.call(axios, {\n                id,\n                msg: 'Returning cached response'\n            });\n        }\n        return config;\n    };\n    return {\n        onFulfilled,\n        apply: () => axios.interceptors.request.use(onFulfilled)\n    };\n}\n","/** Tests an response against a {@link CachePredicateObject}. */\nexport async function testCachePredicate(response, predicate) {\n    var _a;\n    if (typeof predicate === 'function') {\n        return predicate(response);\n    }\n    const { statusCheck, responseMatch, containsHeaders } = predicate;\n    if ((statusCheck && !(await statusCheck(response.status))) ||\n        (responseMatch && !(await responseMatch(response)))) {\n        return false;\n    }\n    if (containsHeaders) {\n        for (const [header, predicate] of Object.entries(containsHeaders)) {\n            if (!(await predicate(\n            // Avoid bugs in case the header is not in lower case\n            (_a = response.headers[header.toLowerCase()]) !== null && _a !== void 0 ? _a : response.headers[header]))) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n","/** Function to update all caches, from CacheProperties.update, with the new data. */\nexport async function updateCache(storage, data, cacheUpdater) {\n    // Global cache update function.\n    if (typeof cacheUpdater === `function`) {\n        return cacheUpdater(data);\n    }\n    for (const [cacheKey, updater] of Object.entries(cacheUpdater)) {\n        if (updater === 'delete') {\n            await storage.remove(cacheKey, data.config);\n            continue;\n        }\n        const value = await storage.get(cacheKey, data.config);\n        if (value.state === 'loading') {\n            continue;\n        }\n        const newValue = await updater(value, data);\n        if (newValue === 'delete') {\n            await storage.remove(cacheKey, data.config);\n            continue;\n        }\n        if (newValue !== 'ignore') {\n            await storage.set(cacheKey, newValue, data.config);\n        }\n    }\n}\n","import { parse } from 'cache-parser';\nimport { Header } from '../header/headers';\nimport { testCachePredicate } from '../util/cache-predicate';\nimport { updateCache } from '../util/update-cache';\nimport { createCacheResponse, isMethodIn } from './util';\nexport function defaultResponseInterceptor(axios) {\n    /**\n     * Rejects cache for an response response.\n     *\n     * Also update the waiting list for this key by rejecting it.\n     */\n    const rejectResponse = async (responseId, config) => {\n        var _a;\n        // Updates the cache to empty to prevent infinite loading state\n        await axios.storage.remove(responseId, config);\n        // Rejects the deferred, if present\n        (_a = axios.waiting[responseId]) === null || _a === void 0 ? void 0 : _a.reject();\n        delete axios.waiting[responseId];\n    };\n    const onFulfilled = async (response) => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        var _o;\n        // When response.config is not present, the response is indeed a error.\n        if (!response.config) {\n            if (__ACI_DEV__) {\n                (_a = axios.debug) === null || _a === void 0 ? void 0 : _a.call(axios, {\n                    msg: 'Response interceptor received an unknown response.',\n                    data: response\n                });\n                throw response;\n            }\n        }\n        const id = (response.id = (_b = (_o = response.config).id) !== null && _b !== void 0 ? _b : (_o.id = axios.generateKey(response.config)));\n        (_c = response.cached) !== null && _c !== void 0 ? _c : (response.cached = false);\n        // Response is already cached\n        if (response.cached) {\n            if (__ACI_DEV__) {\n                (_d = axios.debug) === null || _d === void 0 ? void 0 : _d.call(axios, {\n                    id,\n                    msg: 'Returned cached response'\n                });\n            }\n            return response;\n        }\n        const config = response.config;\n        // Request interceptor merges defaults with per request configuration\n        const cacheConfig = config.cache;\n        // Skip cache: either false or weird behavior\n        // config.cache should always exists, at least from global config merge.\n        if (!cacheConfig) {\n            if (__ACI_DEV__) {\n                (_e = axios.debug) === null || _e === void 0 ? void 0 : _e.call(axios, {\n                    id,\n                    msg: 'Response with config.cache falsy',\n                    data: response\n                });\n            }\n            return Object.assign(Object.assign({}, response), { cached: false });\n        }\n        // Update other entries before updating himself\n        if (cacheConfig.update) {\n            await updateCache(axios.storage, response, cacheConfig.update);\n        }\n        if (!isMethodIn(config.method, cacheConfig.methods)) {\n            if (__ACI_DEV__) {\n                (_f = axios.debug) === null || _f === void 0 ? void 0 : _f.call(axios, {\n                    id,\n                    msg: `Ignored because method (${config.method}) is not in cache.methods (${cacheConfig.methods})`,\n                    data: { config, cacheConfig }\n                });\n            }\n            return response;\n        }\n        const cache = await axios.storage.get(id, config);\n        if (\n        // If the request interceptor had a problem or it wasn't cached\n        cache.state !== 'loading') {\n            if (__ACI_DEV__) {\n                (_g = axios.debug) === null || _g === void 0 ? void 0 : _g.call(axios, {\n                    id,\n                    msg: \"Response not cached and storage isn't loading\",\n                    data: { cache, response }\n                });\n            }\n            return response;\n        }\n        // Config told that this response should be cached.\n        if (\n        // For 'loading' values (previous: stale), this check already ran in the past.\n        !cache.data &&\n            !(await testCachePredicate(response, cacheConfig.cachePredicate))) {\n            await rejectResponse(id, config);\n            if (__ACI_DEV__) {\n                (_h = axios.debug) === null || _h === void 0 ? void 0 : _h.call(axios, {\n                    id,\n                    msg: 'Cache predicate rejected this response'\n                });\n            }\n            return response;\n        }\n        // Avoid remnant headers from remote server to break implementation\n        for (const header of Object.keys(response.headers)) {\n            if (header.startsWith('x-axios-cache')) {\n                delete response.headers[header];\n            }\n        }\n        if (cacheConfig.etag && cacheConfig.etag !== true) {\n            response.headers[Header.XAxiosCacheEtag] = cacheConfig.etag;\n        }\n        if (cacheConfig.modifiedSince) {\n            response.headers[Header.XAxiosCacheLastModified] =\n                cacheConfig.modifiedSince === true\n                    ? 'use-cache-timestamp'\n                    : cacheConfig.modifiedSince.toUTCString();\n        }\n        let ttl = cacheConfig.ttl || -1; // always set from global config\n        let staleTtl;\n        if (cacheConfig.interpretHeader) {\n            const expirationTime = axios.headerInterpreter(response.headers);\n            // Cache should not be used\n            if (expirationTime === 'dont cache') {\n                await rejectResponse(id, config);\n                if (__ACI_DEV__) {\n                    (_j = axios.debug) === null || _j === void 0 ? void 0 : _j.call(axios, {\n                        id,\n                        msg: `Cache header interpreted as 'dont cache'`,\n                        data: { cache, response, expirationTime }\n                    });\n                }\n                return response;\n            }\n            if (expirationTime !== 'not enough headers') {\n                if (typeof expirationTime === 'number') {\n                    ttl = expirationTime;\n                }\n                else {\n                    ttl = expirationTime.cache;\n                    staleTtl = expirationTime.stale;\n                }\n            }\n        }\n        const data = createCacheResponse(response, cache.data);\n        if (typeof ttl === 'function') {\n            ttl = await ttl(response);\n        }\n        if (cacheConfig.staleIfError) {\n            response.headers[Header.XAxiosCacheStaleIfError] = String(ttl);\n        }\n        if (__ACI_DEV__) {\n            (_k = axios.debug) === null || _k === void 0 ? void 0 : _k.call(axios, {\n                id,\n                msg: 'Useful response configuration found',\n                data: { cacheConfig, cacheResponse: data }\n            });\n        }\n        const newCache = {\n            state: 'cached',\n            ttl,\n            staleTtl,\n            createdAt: Date.now(),\n            data\n        };\n        // Resolve all other requests waiting for this response\n        const waiting = axios.waiting[id];\n        if (waiting) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            waiting.resolve(newCache.data);\n            delete axios.waiting[id];\n            if (__ACI_DEV__) {\n                (_l = axios.debug) === null || _l === void 0 ? void 0 : _l.call(axios, {\n                    id,\n                    msg: 'Found waiting deferred(s) and resolved them'\n                });\n            }\n        }\n        // Define this key as cache on the storage\n        await axios.storage.set(id, newCache, config);\n        if (__ACI_DEV__) {\n            (_m = axios.debug) === null || _m === void 0 ? void 0 : _m.call(axios, {\n                id,\n                msg: 'Response cached',\n                data: { cache: newCache, response }\n            });\n        }\n        // Return the response with cached as false, because it was not cached at all\n        return response;\n    };\n    const onRejected = async (error) => {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const config = error.config;\n        const id = config.id;\n        const cacheConfig = config.cache;\n        const response = error.response;\n        // config.cache should always exist, at least from global config merge.\n        if (!cacheConfig || !id) {\n            if (__ACI_DEV__) {\n                (_a = axios.debug) === null || _a === void 0 ? void 0 : _a.call(axios, {\n                    msg: 'Web request returned an error but cache handling is not enabled',\n                    data: { error }\n                });\n            }\n            throw error;\n        }\n        if (!isMethodIn(config.method, cacheConfig.methods)) {\n            if (__ACI_DEV__) {\n                (_b = axios.debug) === null || _b === void 0 ? void 0 : _b.call(axios, {\n                    id,\n                    msg: `Ignored because method (${config.method}) is not in cache.methods (${cacheConfig.methods})`,\n                    data: { config, cacheConfig }\n                });\n            }\n            throw error;\n        }\n        const cache = await axios.storage.get(id, config);\n        if (\n        // This will only not be loading if the interceptor broke\n        cache.state !== 'loading' ||\n            cache.previous !== 'stale') {\n            await rejectResponse(id, config);\n            if (__ACI_DEV__) {\n                (_c = axios.debug) === null || _c === void 0 ? void 0 : _c.call(axios, {\n                    id,\n                    msg: 'Caught an error in the request interceptor',\n                    data: { cache, error, config }\n                });\n            }\n            throw error;\n        }\n        if (cacheConfig.staleIfError) {\n            const cacheControl = String(response === null || response === void 0 ? void 0 : response.headers[Header.CacheControl]);\n            const staleHeader = cacheControl && parse(cacheControl).staleIfError;\n            const staleIfError = typeof cacheConfig.staleIfError === 'function'\n                ? await cacheConfig.staleIfError(response, cache, error)\n                : cacheConfig.staleIfError === true && staleHeader\n                    ? staleHeader * 1000 //staleIfError is in seconds\n                    : cacheConfig.staleIfError;\n            if (__ACI_DEV__) {\n                (_d = axios.debug) === null || _d === void 0 ? void 0 : _d.call(axios, {\n                    id,\n                    msg: 'Found cache if stale config for rejected response',\n                    data: { error, config, staleIfError }\n                });\n            }\n            if (staleIfError === true ||\n                // staleIfError is the number of seconds that stale is allowed to be used\n                (typeof staleIfError === 'number' && cache.createdAt + staleIfError > Date.now())) {\n                // Resolve all other requests waiting for this response\n                (_e = axios.waiting[id]) === null || _e === void 0 ? void 0 : _e.resolve(cache.data);\n                delete axios.waiting[id];\n                // re-mark the cache as stale\n                await axios.storage.set(id, {\n                    state: 'stale',\n                    createdAt: Date.now(),\n                    data: cache.data\n                }, config);\n                if (__ACI_DEV__) {\n                    (_f = axios.debug) === null || _f === void 0 ? void 0 : _f.call(axios, {\n                        id,\n                        msg: 'staleIfError resolved this response with cached data',\n                        data: { error, config, cache }\n                    });\n                }\n                return {\n                    cached: true,\n                    config,\n                    id,\n                    data: cache.data.data,\n                    headers: cache.data.headers,\n                    status: cache.data.status,\n                    statusText: cache.data.statusText\n                };\n            }\n        }\n        if (__ACI_DEV__) {\n            (_g = axios.debug) === null || _g === void 0 ? void 0 : _g.call(axios, {\n                id,\n                msg: 'Received an unknown error that could not be handled',\n                data: { error, config }\n            });\n        }\n        throw error;\n    };\n    return {\n        onFulfilled,\n        onRejected,\n        apply: () => axios.interceptors.response.use(onFulfilled, onRejected)\n    };\n}\n","import { Header } from '../header/headers';\n/** Returns true if the provided object was created from {@link buildStorage} function. */\nexport const isStorage = (obj) => !!obj && !!obj['is-storage'];\nfunction hasUniqueIdentifierHeader(value) {\n    const headers = value.data.headers;\n    return (Header.ETag in headers ||\n        Header.LastModified in headers ||\n        Header.XAxiosCacheEtag in headers ||\n        Header.XAxiosCacheLastModified in headers);\n}\n/** Returns true if this has sufficient properties to stale instead of expire. */\nexport function canStale(value) {\n    // Must revalidate is a special case and should not be staled\n    if (String(value.data.headers[Header.CacheControl])\n        // We could use cache-control's parse function, but this is way faster and simpler\n        .includes('must-revalidate')) {\n        return false;\n    }\n    if (hasUniqueIdentifierHeader(value)) {\n        return true;\n    }\n    return (value.state === 'cached' &&\n        value.staleTtl !== undefined &&\n        // Only allow stale values after the ttl is already in the past and the staleTtl is in the future.\n        // In cases that just createdAt + ttl > Date.now(), isn't enough because the staleTtl could be <= 0.\n        // This logic only returns true when Date.now() is between the (createdAt + ttl) and (createdAt + ttl + staleTtl).\n        // Following the example below:\n        // |--createdAt--:--ttl--:---staleTtl--->\n        // [        past        ][now is in here]\n        Math.abs(Date.now() - (value.createdAt + value.ttl)) <= value.staleTtl);\n}\n/**\n * Checks if the provided cache is expired. You should also check if the cache\n * {@link canStale}\n */\nexport function isExpired(value) {\n    return value.ttl !== undefined && value.createdAt + value.ttl <= Date.now();\n}\n/**\n * All integrated storages are wrappers around the `buildStorage` function. External\n * libraries use it and if you want to build your own, `buildStorage` is the way to go!\n *\n * The exported `buildStorage` function abstracts the storage interface and requires a\n * super simple object to build the storage.\n *\n * **Note**: You can only create an custom storage with this function.\n *\n * @example\n *\n * ```js\n * const myStorage = buildStorage({\n *   find: () => {...},\n *   set: () => {...},\n *   remove: () => {...}\n * });\n *\n * const axios = setupCache(axios, { storage: myStorage });\n * ```\n *\n * @see https://axios-cache-interceptor.js.org/guide/storages#buildstorage\n */\nexport function buildStorage({ set, find, remove }) {\n    return {\n        //@ts-expect-error - we don't want to expose this\n        ['is-storage']: 1,\n        set,\n        remove,\n        get: async (key, config) => {\n            let value = await find(key, config);\n            if (!value) {\n                return { state: 'empty' };\n            }\n            if (value.state === 'empty' || value.state === 'loading') {\n                return value;\n            }\n            // Handle cached values\n            if (value.state === 'cached') {\n                if (!isExpired(value)) {\n                    return value;\n                }\n                // Tries to stale expired value\n                if (!canStale(value)) {\n                    await remove(key, config);\n                    return { state: 'empty' };\n                }\n                value = {\n                    state: 'stale',\n                    createdAt: value.createdAt,\n                    data: value.data,\n                    ttl: value.staleTtl !== undefined ? value.staleTtl + value.ttl : undefined\n                };\n                await set(key, value, config);\n            }\n            // A second check in case the new stale value was created already expired.\n            if (!isExpired(value)) {\n                return value;\n            }\n            if (hasUniqueIdentifierHeader(value)) {\n                return value;\n            }\n            await remove(key, config);\n            return { state: 'empty' };\n        }\n    };\n}\n","import { buildStorage, canStale, isExpired } from './build';\n/**\n * Creates a simple in-memory storage. This means that if you need to persist data between\n * page or server reloads, this will not help.\n *\n * This is the storage used by default.\n *\n * If you need to modify it's data, you can do by the `data` property.\n *\n * @example\n *\n * ```js\n * const memoryStorage = buildMemoryStorage();\n *\n * setupCache(axios, { storage: memoryStorage });\n *\n * // Simple example to force delete the request cache\n *\n * const { id } = axios.get('url');\n *\n * delete memoryStorage.data[id];\n * ```\n *\n * @param {boolean} cloneData If the data returned by `find()` should be cloned to avoid\n *   mutating the original data outside the `set()` method.\n * @param {number | false} cleanupInterval The interval in milliseconds to run a\n *   setInterval job of cleaning old entries. If false, the job will not be created.\n *   Disabled is default\n * @param {number | false} maxEntries The maximum number of entries to keep in the\n *   storage. Its hard to determine the size of the entries, so a smart FIFO order is used\n *   to determine eviction. If false, no check will be done and you may grow up memory\n *   usage. Disabled is default\n */\nexport function buildMemoryStorage(cloneData = false, cleanupInterval = false, maxEntries = false) {\n    const storage = buildStorage({\n        set: (key, value) => {\n            if (maxEntries) {\n                let keys = Object.keys(storage.data);\n                // Tries to cleanup first\n                if (keys.length >= maxEntries) {\n                    storage.cleanup();\n                    // Recalculates the keys\n                    keys = Object.keys(storage.data);\n                    // Keeps deleting until there's space\n                    while (keys.length >= maxEntries) {\n                        // There's always at least one key here, otherwise it would not be\n                        // in the loop.\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        delete storage.data[keys.shift()];\n                    }\n                }\n            }\n            storage.data[key] = value;\n        },\n        remove: (key) => {\n            delete storage.data[key];\n        },\n        find: (key) => {\n            const value = storage.data[key];\n            /* istanbul ignore if 'only available on super recent browsers' */\n            if (cloneData && value !== undefined) {\n                if (typeof structuredClone === 'function') {\n                    return structuredClone(value);\n                }\n                return JSON.parse(JSON.stringify(value));\n            }\n            return value;\n        }\n    });\n    storage.data = Object.create(null);\n    // When this program gets running for more than the specified interval, there's a good\n    // chance of it being a long-running process or at least have a lot of entries. Therefore,\n    // \"faster\" loop is more important than code readability.\n    storage.cleanup = () => {\n        const keys = Object.keys(storage.data);\n        let i = -1, value, key;\n        // Looping forward, as older entries are more likely to be expired\n        // than newer ones.\n        while (++i < keys.length) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            (key = keys[i]), (value = storage.data[key]);\n            if (value.state === 'empty') {\n                // this storage returns void.\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                storage.remove(key);\n                continue;\n            }\n            // If the value is expired and can't be stale, remove it\n            if (value.state === 'cached' && isExpired(value) && !canStale(value)) {\n                // this storage returns void.\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                storage.remove(key);\n            }\n        }\n    };\n    if (cleanupInterval) {\n        storage.cleaner = setInterval(storage.cleanup, cleanupInterval);\n    }\n    return storage;\n}\n","function r(t){var n=typeof t;if(t&&\"object\"===n&&!(t instanceof Date||t instanceof RegExp)){for(var e=Array.isArray(t)?[]:{},o=Object.keys(t).sort(function(r,t){return r>t?1:-1}),i=o.length;i--;){var a=o[i];e[a]=r(t[a])}return String(t.constructor)+JSON.stringify(e,o)}return n+String(t)}function t(t){t=r(t);for(var n=5381,e=0;e<t.length;)n=33*n^t.charCodeAt(e++);return n}export{t as hash,r as serialize};\n//# sourceMappingURL=index.mjs.map\n","import { hash } from 'object-code';\n// Remove first and last '/' char, if present\nconst SLASHES_REGEX = /^\\/|\\/$/g;\n/**\n * Builds an generator that receives a {@link CacheRequestConfig} and returns a value\n * hashed by {@link hash}.\n *\n * The value is hashed into a signed integer when the returned value from the provided\n * generator is not a `string` or a `number`.\n *\n * You can return any type of data structure.\n *\n * @example\n *\n * ```js\n * // This generator will return a hash code.\n * // The code will only be the same if url, method and data are the same.\n * const generator = buildKeyGenerator(({ url, method, data }) => ({\n *   url,\n *   method,\n *   data\n * }));\n * ```\n */\nexport function buildKeyGenerator(generator) {\n    return (request) => {\n        if (request.id) {\n            return request.id;\n        }\n        const key = generator(request);\n        if (typeof key === 'string' || typeof key === 'number') {\n            return `${key}`;\n        }\n        return `${hash(key)}`;\n    };\n}\nexport const defaultKeyGenerator = buildKeyGenerator(({ baseURL = '', url = '', method = 'get', params, data }) => {\n    // Remove trailing slashes to avoid generating different keys for the \"same\" final url.\n    baseURL && (baseURL = baseURL.replace(SLASHES_REGEX, ''));\n    url && (url = url.replace(SLASHES_REGEX, ''));\n    // lowercase method\n    method && (method = method.toLowerCase());\n    return {\n        url: baseURL + (baseURL && url ? '/' : '') + url,\n        params: params,\n        method,\n        data\n    };\n});\n","import { defaultHeaderInterpreter } from '../header/interpreter';\nimport { defaultRequestInterceptor } from '../interceptors/request';\nimport { defaultResponseInterceptor } from '../interceptors/response';\nimport { isStorage } from '../storage/build';\nimport { buildMemoryStorage } from '../storage/memory';\nimport { defaultKeyGenerator } from '../util/key-generator';\n/**\n * Apply the caching interceptors for a already created axios instance.\n *\n * ```ts\n * const axios = setupCache(axios, OPTIONS);\n * ```\n *\n * The `setupCache` function receives global options and all [request\n * specifics](https://axios-cache-interceptor.js.org/config/request-specifics) ones too.\n * This way, you can customize the defaults for all requests.\n *\n * @param axios The already created axios instance\n * @param config The config for the caching interceptors\n * @returns The same instance with extended typescript types.\n * @see https://axios-cache-interceptor.js.org/config\n */\nexport function setupCache(axios, options = {}) {\n    var _a, _b, _c, _d, _e, _f;\n    const axiosCache = axios;\n    if (axiosCache.defaults.cache) {\n        throw new Error('setupCache() should be called only once');\n    }\n    axiosCache.storage = options.storage || buildMemoryStorage();\n    if (!isStorage(axiosCache.storage)) {\n        throw new Error('Use buildStorage() function');\n    }\n    axiosCache.waiting = options.waiting || {};\n    axiosCache.generateKey = options.generateKey || defaultKeyGenerator;\n    axiosCache.headerInterpreter = options.headerInterpreter || defaultHeaderInterpreter;\n    axiosCache.requestInterceptor =\n        options.requestInterceptor || defaultRequestInterceptor(axiosCache);\n    axiosCache.responseInterceptor =\n        options.responseInterceptor || defaultResponseInterceptor(axiosCache);\n    axiosCache.debug = options.debug;\n    // CacheRequestConfig values\n    axiosCache.defaults.cache = {\n        update: options.update || {},\n        ttl: (_a = options.ttl) !== null && _a !== void 0 ? _a : 1000 * 60 * 5,\n        // Although RFC 7231 also marks POST as cacheable, most users don't know that\n        // and may have problems about why their \"create X\" route not working.\n        methods: options.methods || ['get', 'head'],\n        cachePredicate: options.cachePredicate || {\n            // All cacheable status codes defined in RFC 7231\n            statusCheck: (status) => [200, 203, 300, 301, 302, 404, 405, 410, 414, 501].includes(status)\n        },\n        etag: (_b = options.etag) !== null && _b !== void 0 ? _b : true,\n        // This option is going to be ignored by servers when ETag is enabled\n        // Checks strict equality to false to avoid undefined-ish values\n        modifiedSince: (_c = options.modifiedSince) !== null && _c !== void 0 ? _c : options.etag === false,\n        interpretHeader: (_d = options.interpretHeader) !== null && _d !== void 0 ? _d : true,\n        cacheTakeover: (_e = options.cacheTakeover) !== null && _e !== void 0 ? _e : true,\n        staleIfError: (_f = options.staleIfError) !== null && _f !== void 0 ? _f : true,\n        override: false,\n        hydrate: undefined\n    };\n    // Apply interceptors\n    axiosCache.requestInterceptor.apply();\n    axiosCache.responseInterceptor.apply();\n    return axiosCache;\n}\n","import { buildStorage, canStale, isExpired } from './build';\n/**\n * Creates a simple storage. You can persist his data by using `sessionStorage` or\n * `localStorage` with it.\n *\n * **ImplNote**: Without polyfill, this storage only works on browser environments.\n *\n * @example\n *\n * ```js\n * const fromLocalStorage = buildWebStorage(localStorage);\n * const fromSessionStorage = buildWebStorage(sessionStorage);\n *\n * const myStorage = new Storage();\n * const fromMyStorage = buildWebStorage(myStorage);\n * ```\n *\n * @param storage The type of web storage to use. localStorage or sessionStorage.\n * @param prefix The prefix to index the storage. Useful to prevent collision between\n *   multiple places using the same storage.\n */\nexport function buildWebStorage(storage, prefix = 'axios-cache-') {\n    return buildStorage({\n        find: (key) => {\n            const json = storage.getItem(prefix + key);\n            return json ? JSON.parse(json) : undefined;\n        },\n        remove: (key) => {\n            storage.removeItem(prefix + key);\n        },\n        set: (key, value) => {\n            const save = () => storage.setItem(prefix + key, JSON.stringify(value));\n            try {\n                return save();\n            }\n            catch (error) {\n                const allValues = Object.entries(storage)\n                    .filter((item) => item[0].startsWith(prefix))\n                    .map((item) => [item[0], JSON.parse(item[1])]);\n                // Remove all expired values\n                for (const value of allValues) {\n                    if (value[1].state === 'cached' && isExpired(value[1]) && !canStale(value[1])) {\n                        storage.removeItem(value[0]);\n                    }\n                }\n                // Try save again after removing expired values\n                try {\n                    return save();\n                }\n                catch (_a) {\n                    // Storage still full, try removing the oldest value until it can be saved\n                    // Descending sort by createdAt\n                    const sortedItems = allValues.sort((a, b) => (a[1].createdAt || 0) - (b[1].createdAt || 0));\n                    for (const item of sortedItems) {\n                        storage.removeItem(item[0]);\n                        try {\n                            return save();\n                        }\n                        catch (_b) {\n                            // This key didn't free all the required space\n                        }\n                    }\n                }\n                // Clear the cache for the specified key\n                storage.removeItem(prefix + key);\n            }\n        }\n    });\n}\n","export * from './cache/axios';\nexport * from './cache/cache';\nexport * from './cache/create';\nexport * from './header/headers';\nexport * from './header/interpreter';\nexport * from './header/types';\nexport * from './interceptors/build';\nexport * from './interceptors/request';\nexport * from './interceptors/response';\nexport * from './interceptors/util';\nexport * from './storage/build';\nexport * from './storage/memory';\nexport * from './storage/types';\nexport * from './storage/web-api';\nexport * from './util/cache-predicate';\nexport * from './util/key-generator';\nexport * from './util/types';\nexport * from './util/update-cache';\nif (__ACI_DEV__) {\n    console.error('You are using a development build. Make sure to use the correct build in production\\nhttps://axios-cache-interceptor.js.org/guide/getting-started\\n\\n');\n}\n"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","e","a","Number","Infinity","r","t","s","n","i","toLowerCase","replace","split","u","l","m","p","h","immutable","maxAge","maxStale","minFresh","mustRevalidate","mustUnderstand","noCache","noStore","noTransform","onlyIfCached","private","proxyRevalidate","public","sMaxAge","staleIfError","staleWhileRevalidate","Header","freeze","IfModifiedSince","LastModified","IfNoneMatch","CacheControl","Pragma","ETag","Expires","Age","XAxiosCacheEtag","XAxiosCacheLastModified","XAxiosCacheStaleIfError","defaultHeaderInterpreter","headers","cacheControl","String","cache","undefined","age","stale","expires","milliseconds","Date","parse","now","createValidateStatus","oldValidate","status","isMethodIn","requestMethod","methodList","some","method","updateStaleRequest","config","_a","etag","modifiedSince","etagValue","data","createdAt","toUTCString","createCacheResponse","response","previousCache","cached","statusText","assign","defaultRequestInterceptor","axios","onFulfilled","async","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","id","generateKey","debug","msg","defaults","cacheTakeover","methods","storage","overrideCache","override","ignoreAndRequest","state","waiting","Promise","resolve","reject","catch","set","previous","validateStatus","hydrate","cachedResponse","deferred","remove","err","adapter","apply","interceptors","request","use","testCachePredicate","predicate","statusCheck","responseMatch","containsHeaders","header","entries","updateCache","cacheUpdater","cacheKey","updater","newValue","defaultResponseInterceptor","rejectResponse","responseId","cacheConfig","update","cachePredicate","keys","startsWith","staleTtl","ttl","interpretHeader","expirationTime","headerInterpreter","cacheResponse","newCache","onRejected","error","staleHeader","isStorage","hasUniqueIdentifierHeader","canStale","includes","Math","abs","isExpired","buildStorage","find","buildMemoryStorage","cloneData","cleanupInterval","maxEntries","length","cleanup","shift","structuredClone","JSON","stringify","create","cleaner","setInterval","RegExp","Array","isArray","sort","constructor","charCodeAt","SLASHES_REGEX","buildKeyGenerator","generator","defaultKeyGenerator","baseURL","url","params","setupCache","options","axiosCache","Error","requestInterceptor","responseInterceptor","buildWebStorage","prefix","json","getItem","removeItem","save","setItem","allValues","filter","item","map","sortedItems","b","console"],"sourceRoot":""}