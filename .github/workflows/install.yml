name: 🚀 Install & Deploy GitHub Pages Site

on:
  push:
    branches: ["master", "gh-pages"]
    paths:
      - "**/*.html"
      - "**/*.css"
      - "**/*.js"
      - "**/*.json"
      - ".github/workflows/install.yml"

  workflow_dispatch:
    inputs:
      ref:
        description: "checkout branch or commit"
        required: true
        default: "master"

permissions: write-all

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: "github-pages"
      url: ${{ steps.deployment.outputs.page_url }}
    env:
      NODE_OPTIONS: "--max_old_space_size=8192" #8192 4096 --expose-gc
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN || secrets.GITHUB_TOKEN || github.token }}
      node-version: 20.x
      YARN_CHECKSUM_BEHAVIOR: update
    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref }}
          token: ${{ env.ACCESS_TOKEN }}
          submodules: recursive

      - name: 🛠️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node-version }}

      - name: ⬇️ Download .yarnrc.yml Template
        run: |
          curl -L https://raw.githubusercontent.com/dimaslanjaka/nodejs-package-types/refs/heads/main/.yarnrc-template.yml -o .yarnrc.yml

      - name: ⚙️ Enable Corepack & Update NPM
        run: |
          corepack enable
          npm install -g npm@latest

      - name: 🧪 Install GitHub Actions Validator (Try Once)
        id: install_validator
        run: |
          yarn install || (
            echo "Validator install failed. Retrying with clean install..."
            : > yarn.lock
            yarn cache clean --all
            rm -rf node_modules
            yarn install
          )
        working-directory: github-actions

      - name: 🔧 Configure Git & Normalize Line Endings
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git config core.eol lf
          git config core.autocrlf input
          git checkout-index --force --all

      - name: 📝 Normalize File Names (Casing)
        shell: bash
        run: |
          # Remove everything from index
          git rm -r --cached .

          # Re-add everything
          git add --all

          # Explicitly re-add submodules (they won't be re-added by --all if just their ref changed)
          submodules=$(git config --file .gitmodules --get-regexp path | awk '{ print $2 }')
          for sm in $submodules; do
            git add "$sm" || true
          done

          # Commit if there are any staged changes
          if [ "$(git diff --cached --quiet || echo changed)" = "changed" ]; then
            git commit -m "fix: file name casing"
          fi

      - name: 🔄 Update Git Submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive
          yarn dlx -y rimraf .git/modules
          yarn dlx -y binary-collections@https://raw.githubusercontent.com/dimaslanjaka/bin/master/releases/bin.tgz submodule-install

      - name: 🧹 Clean & Reinstall Production Dependencies
        shell: bash
        run: |
          bash -e scripts/setup.sh

      - name: ✅ Validate Paths & Structure
        id: validate
        run: node github-actions/index.js

      - name: 🗑️ Cleanup Unused & Temporary Files
        run: |
          rm -rf github-actions .devcontainer .npmrc .gitmodules github-actions-validator.config.yml
          find . -type d \( -name '.github' -o -name '.vscode' -o -name 'tmp' \) -exec rm -rf '{}' +

      - name: 📄 Setup GitHub Pages
        if: steps.validate.outcome == 'success'
        uses: actions/configure-pages@v5

      - name: ⬆️ Upload Pages Artifact
        if: steps.validate.outcome == 'success'
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."
          name: "github-pages"

      - name: 🚀 Deploy to GitHub Pages
        if: steps.validate.outcome == 'success'
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ env.ACCESS_TOKEN }}
          artifact_name: "github-pages"
