/*!
 * Axios Cache Interceptor 1.8.0
 * (c) 2021-present Arthur Fiorette & Contributors
 * Released under the MIT License.
 */
import type { CacheAxiosResponse } from '../cache/axios.mjs';
import type { CachePredicate } from './types.mjs';
/** Tests an response against a {@link CachePredicateObject}. */
export declare function testCachePredicate<R = unknown, D = unknown>(response: CacheAxiosResponse<R, D>, predicate: CachePredicate<R, D>): Promise<boolean>;
/**
 * Determines whether a given URL matches a specified pattern, which can be either a string or a regular expression.
 *
 * @param matchPattern - The pattern to match against
 *   - If it's a regular expression, it will be reset to ensure consistent behavior for stateful regular expressions.
 *   - If it's a string, the function checks if the URL contains the string.
 * @param configUrl - The URL to test against the provided pattern; normally `config.url`.
 * @returns `true` if the `configUrl` matches the `matchPattern`
 */
export declare function regexOrStringMatch(matchPattern: string | RegExp, configUrl: string): boolean;
//# sourceMappingURL=cache-predicate.d.ts.map