{"version":3,"file":"index.modern.js","sources":["../src/header/headers.ts","../src/header/interpreter.ts","../src/interceptors/util.ts","../src/interceptors/request.ts","../src/util/cache-predicate.ts","../src/util/update-cache.ts","../src/interceptors/response.ts","../src/storage/build.ts","../src/storage/memory.ts","../src/util/key-generator.ts","../src/cache/create.ts","../src/storage/web-api.ts"],"sourcesContent":["export const Header = Object.freeze({\n  /**\n   * ```txt\n   * If-Modified-Since: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since\n   */\n  IfModifiedSince: 'if-modified-since',\n\n  /**\n   * ```txt\n   * Last-Modified: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Last-Modified\n   */\n  LastModified: 'last-modified',\n\n  /**\n   * ```txt\n   * If-None-Match: \"<etag_value>\"\n   * If-None-Match: \"<etag_value>\", \"<etag_value>\", â€¦\n   * If-None-Match: *\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match\n   */\n  IfNoneMatch: 'if-none-match',\n\n  /**\n   * ```txt\n   * Cache-Control: max-age=604800\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\n   */\n  CacheControl: 'cache-control',\n\n  /**\n   * ```txt\n   * Pragma: no - cache;\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Pragma\n   */\n  Pragma: 'pragma',\n\n  /**\n   * ```txt\n   * ETag: W / '<etag_value>';\n   * ETag: '<etag_value>';\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag\n   */\n  ETag: 'etag',\n\n  /**\n   * ```txt\n   * Expires: <http-date>\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expires\n   */\n  Expires: 'expires',\n\n  /**\n   * ```txt\n   * Age: <delta-seconds>\n   * ```\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Age\n   */\n  Age: 'age',\n\n  /**\n   * Used internally as metadata to mark the cache item as revalidatable and enabling\n   * stale cache state Contains a string of ASCII characters that can be used as ETag for\n   * `If-Match` header Provided by user using `cache.etag` value.\n   *\n   * ```txt\n   * X-Axios-Cache-Etag: \"<etag_value>\"\n   * ```\n   */\n  XAxiosCacheEtag: 'x-axios-cache-etag',\n\n  /**\n   * Used internally as metadata to mark the cache item as revalidatable and enabling\n   * stale cache state may contain `'use-cache-timestamp'` if `cache.modifiedSince` is\n   * `true`, otherwise will contain a date from `cache.modifiedSince`. If a date is\n   * provided, it can be used for `If-Modified-Since` header, otherwise the cache\n   * timestamp can be used for `If-Modified-Since` header.\n   *\n   * ```txt\n   * X-Axios-Cache-Last-Modified: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n   * X-Axios-Cache-Last-Modified: use-cache-timestamp\n   * ```\n   */\n  XAxiosCacheLastModified: 'x-axios-cache-last-modified',\n\n  /**\n   * Used internally as metadata to mark the cache item able to be used if the server\n   * returns an error. The stale-if-error response directive indicates that the cache can\n   * reuse a stale response when any error occurs.\n   *\n   * ```txt\n   * XAxiosCacheStaleIfError: <seconds>\n   * ```\n   */\n  XAxiosCacheStaleIfError: 'x-axios-cache-stale-if-error'\n});\n","import { parse } from 'cache-parser';\nimport { Header } from './headers.js';\nimport type { HeaderInterpreter } from './types.js';\n\nexport const defaultHeaderInterpreter: HeaderInterpreter = (headers, location) => {\n  if (!headers) return 'not enough headers';\n\n  const cacheControl: unknown = headers[Header.CacheControl];\n\n  if (cacheControl) {\n    const cc = parse(String(cacheControl));\n\n    if (\n      // Header told that this response should not be cached.\n      cc.noCache ||\n      cc.noStore ||\n      // Server side handling private data\n      (location === 'server' && cc.private)\n    ) {\n      return 'dont cache';\n    }\n\n    if (cc.immutable) {\n      // 1 year is sufficient, as Infinity may cause problems with certain storages.\n      // It might not be the best way, but a year is better than none. Facebook shows\n      // that a browser session stays at the most 1 month.\n      return {\n        cache: 1000 * 60 * 60 * 24 * 365\n      };\n    }\n\n    if (cc.maxAge !== undefined) {\n      const age: unknown = headers[Header.Age];\n\n      return {\n        cache: age\n          ? // If age is present, we must subtract it from maxAge\n            (cc.maxAge - Number(age)) * 1000\n          : cc.maxAge * 1000,\n        // Already out of date, must be requested again\n        stale:\n          // I couldn't find any documentation about who should be used, as they\n          // are not meant to overlap each other. But, as we cannot request in the\n          // background, as the stale-while-revalidate says, and we just increase\n          // its staleTtl when its present, max-stale is being preferred over\n          // stale-while-revalidate.\n          cc.maxStale !== undefined\n            ? cc.maxStale * 1000\n            : cc.staleWhileRevalidate !== undefined\n              ? cc.staleWhileRevalidate * 1000\n              : undefined\n      };\n    }\n  }\n\n  const expires: unknown = headers[Header.Expires];\n\n  if (expires) {\n    const milliseconds = Date.parse(String(expires)) - Date.now();\n    return milliseconds >= 0 ? { cache: milliseconds } : 'dont cache';\n  }\n\n  return 'not enough headers';\n};\n","import type { Method } from 'axios';\nimport type { CacheAxiosResponse, CacheRequestConfig } from '../cache/axios.js';\nimport type { CacheProperties } from '../cache/cache.js';\nimport { Header } from '../header/headers.js';\nimport type {\n  CachedResponse,\n  MustRevalidateStorageValue,\n  StaleStorageValue\n} from '../storage/types.js';\n\n/**\n * Creates a new validateStatus function that will use the one already used and also\n * accept status code 304.\n */\nexport function createValidateStatus(\n  oldValidate?: CacheRequestConfig['validateStatus']\n): (status: number) => boolean {\n  return oldValidate\n    ? (status) => oldValidate(status) || status === 304\n    : (status) => (status >= 200 && status < 300) || status === 304;\n}\n\n/** Checks if the given method is in the methods array */\nexport function isMethodIn(\n  requestMethod: Method | string = 'get',\n  methodList: Method[] = []\n): boolean {\n  requestMethod = requestMethod.toLowerCase() as Lowercase<Method>;\n  return methodList.some((method) => method === requestMethod);\n}\n\nexport interface ConfigWithCache<D> extends CacheRequestConfig<unknown, D> {\n  cache: Partial<CacheProperties<unknown, D>>;\n}\n\n/**\n * This function updates the cache when the request is stale. So, the next request to the\n * server will be made with proper header / settings.\n */\nexport function updateStaleRequest<D>(\n  cache: StaleStorageValue | MustRevalidateStorageValue,\n  config: ConfigWithCache<D>\n): void {\n  config.headers ||= {};\n\n  const { etag, modifiedSince } = config.cache;\n\n  if (etag) {\n    const etagValue = etag === true ? (cache.data?.headers[Header.ETag] as unknown) : etag;\n\n    if (etagValue) {\n      config.headers[Header.IfNoneMatch] = etagValue;\n    }\n  }\n\n  if (modifiedSince) {\n    config.headers[Header.IfModifiedSince] =\n      modifiedSince === true\n        ? // If last-modified is not present, use the createdAt timestamp\n          (cache.data.headers[Header.LastModified] as unknown) ||\n          new Date(cache.createdAt).toUTCString()\n        : modifiedSince.toUTCString();\n  }\n}\n\n/**\n * Creates the new date to the cache by the provided response. Also handles possible 304\n * Not Modified by updating response properties.\n */\nexport function createCacheResponse<R, D>(\n  response: CacheAxiosResponse<R, D>,\n  previousCache?: CachedResponse\n): CachedResponse {\n  if (response.status === 304 && previousCache) {\n    // Set the cache information into the response object\n    response.cached = true;\n    response.data = previousCache.data as R;\n    response.status = previousCache.status;\n    response.statusText = previousCache.statusText;\n\n    // Update possible new headers\n    response.headers = {\n      ...previousCache.headers,\n      ...response.headers\n    };\n\n    // return the old cache\n    return previousCache;\n  }\n\n  // New Response\n  return {\n    data: response.data,\n    status: response.status,\n    statusText: response.statusText,\n    headers: response.headers\n  };\n}\n","import { deferred } from 'fast-defer';\nimport type { AxiosCacheInstance, CacheAxiosResponse } from '../cache/axios.js';\nimport { Header } from '../header/headers.js';\nimport type { CachedResponse, CachedStorageValue, LoadingStorageValue } from '../storage/types.js';\nimport type { RequestInterceptor } from './build.js';\nimport {\n  type ConfigWithCache,\n  createValidateStatus,\n  isMethodIn,\n  updateStaleRequest\n} from './util.js';\n\nexport function defaultRequestInterceptor(axios: AxiosCacheInstance): RequestInterceptor {\n  const onFulfilled: RequestInterceptor['onFulfilled'] = async (config) => {\n    config.id = axios.generateKey(config);\n\n    if (config.cache === false) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: config.id,\n          msg: 'Ignoring cache because config.cache === false',\n          data: config\n        });\n      }\n\n      return config;\n    }\n\n    // merge defaults with per request configuration\n    config.cache = { ...axios.defaults.cache, ...config.cache };\n\n    if (\n      typeof config.cache.cachePredicate === 'object' &&\n      config.cache.cachePredicate.ignoreUrls &&\n      config.url\n    ) {\n      for (const url of config.cache.cachePredicate.ignoreUrls) {\n        if (\n          url instanceof RegExp\n            ? // Handles stateful regexes\n              // biome-ignore lint: reduces the number of checks\n              ((url.lastIndex = 0), url.test(config.url))\n            : config.url.includes(url)\n        ) {\n          if (__ACI_DEV__) {\n            axios.debug({\n              id: config.id,\n              msg: `Ignored because url (${config.url}) matches ignoreUrls (${config.cache.cachePredicate.ignoreUrls})`,\n              data: {\n                url: config.url,\n                cachePredicate: config.cache.cachePredicate\n              }\n            });\n          }\n\n          return config;\n        }\n      }\n    }\n\n    // Applies sufficient headers to prevent other cache systems to work along with this one\n    //\n    // Its currently used before isMethodIn because if the isMethodIn returns false, the request\n    // shouldn't be cached an therefore neither in the browser.\n    if (config.cache.cacheTakeover) {\n      config.headers[Header.CacheControl] ??= 'no-cache';\n      config.headers[Header.Pragma] ??= 'no-cache';\n      config.headers[Header.Expires] ??= '0';\n    }\n\n    if (!isMethodIn(config.method, config.cache.methods)) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: config.id,\n          msg: `Ignored because method (${config.method}) is not in cache.methods (${config.cache.methods})`\n        });\n      }\n\n      return config;\n    }\n\n    // Assumes that the storage handled staled responses\n    let cache = await axios.storage.get(config.id, config);\n    const overrideCache = config.cache.override;\n\n    // Not cached, continue the request, and mark it as fetching\n    // biome-ignore lint/suspicious/noConfusingLabels: required to break condition in simultaneous accesses\n    ignoreAndRequest: if (\n      cache.state === 'empty' ||\n      cache.state === 'stale' ||\n      cache.state === 'must-revalidate' ||\n      overrideCache\n    ) {\n      // This checks for simultaneous access to a new key. The js event loop jumps on the\n      // first await statement, so the second (asynchronous call) request may have already\n      // started executing.\n      if (axios.waiting.has(config.id) && !overrideCache) {\n        cache = (await axios.storage.get(config.id, config)) as\n          | CachedStorageValue\n          | LoadingStorageValue;\n\n        // @ts-expect-error This check is required when a request has it own cache deleted manually, lets\n        // say by a `axios.storage.delete(key)` and has a concurrent loading request.\n        // Because in this case, the cache will be empty and may still has a pending key\n        // on waiting map.\n        if (cache.state !== 'empty' && cache.state !== 'must-revalidate') {\n          if (__ACI_DEV__) {\n            axios.debug({\n              id: config.id,\n              msg: 'Waiting list had an deferred for this key, waiting for it to finish'\n            });\n          }\n\n          break ignoreAndRequest;\n        }\n      }\n\n      // Create a deferred to resolve other requests for the same key when it's completed\n      const def = deferred<void>();\n      axios.waiting.set(config.id, def);\n\n      // Adds a default reject handler to catch when the request gets aborted without\n      // others waiting for it.\n      def.catch(() => undefined);\n\n      await axios.storage.set(\n        config.id,\n        {\n          state: 'loading',\n          previous: overrideCache\n            ? // Simply determine if the request is stale or not\n              // based if it had previous data or not\n              cache.data\n              ? 'stale'\n              : 'empty'\n            : // Typescript doesn't know that cache.state here can only be 'empty' or 'stale'\n              (cache.state as 'stale' | 'must-revalidate'),\n\n          data: cache.data as any,\n\n          // If the cache is empty and asked to override it, use the current timestamp\n          createdAt: overrideCache && !cache.createdAt ? Date.now() : (cache.createdAt as any)\n        },\n        config\n      );\n\n      if (cache.state === 'stale' || cache.state === 'must-revalidate') {\n        updateStaleRequest(cache, config as ConfigWithCache<unknown>);\n\n        if (__ACI_DEV__) {\n          axios.debug({\n            id: config.id,\n            msg: 'Updated stale request'\n          });\n        }\n      }\n\n      config.validateStatus = createValidateStatus(config.validateStatus);\n\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: config.id,\n          msg: 'Sending request, waiting for response',\n          data: {\n            overrideCache,\n            state: cache.state\n          }\n        });\n      }\n\n      // Hydrates any UI temporarily, if cache is available\n      if (cache.state === 'stale' || (cache.data && cache.state !== 'must-revalidate')) {\n        await config.cache.hydrate?.(cache);\n      }\n\n      return config;\n    }\n\n    let cachedResponse: CachedResponse;\n\n    if (cache.state === 'loading') {\n      const deferred = axios.waiting.get(config.id);\n\n      // The deferred may not exists when the process is using a persistent\n      // storage and cancelled  in the middle of a request, this would result in\n      // a pending loading state in the storage but no current promises to resolve\n      if (!deferred) {\n        // Hydrates any UI temporarily, if cache is available\n        if (cache.data) {\n          await config.cache.hydrate?.(cache);\n        }\n\n        return config;\n      }\n\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: config.id,\n          msg: 'Detected concurrent request, waiting for it to finish'\n        });\n      }\n\n      try {\n        // Deferred can't reuse the value because the user's storage might clone\n        // or mutate the value, so we need to ask it again.\n        // For example with memoryStorage + cloneData\n        await deferred;\n        const state = await axios.storage.get(config.id, config);\n\n        // This is a cache mismatch and should never happen, but in case it does,\n        // we need to redo the request all over again.\n        /* c8 ignore start */\n        if (!state.data) {\n          if (__ACI_DEV__) {\n            axios.debug({\n              id: config.id,\n              msg: 'Deferred resolved, but no data was found, requesting again'\n            });\n          }\n\n          return onFulfilled!(config);\n        }\n        /* c8 ignore end */\n\n        cachedResponse = state.data;\n      } catch (err) {\n        if (__ACI_DEV__) {\n          axios.debug({\n            id: config.id,\n            msg: 'Deferred rejected, requesting again',\n            data: err\n          });\n        }\n\n        // Hydrates any UI temporarily, if cache is available\n        /* c8 ignore start */\n        if (cache.data) {\n          await config.cache.hydrate?.(cache);\n        }\n        /* c8 ignore end */\n\n        // The deferred is rejected when the request that we are waiting rejects its cache.\n        // In this case, we need to redo the request all over again.\n        return onFulfilled!(config);\n      }\n    } else {\n      cachedResponse = cache.data;\n    }\n\n    // The cached data is already transformed after receiving the response from the server.\n    // Reapplying the transformation on the transformed data will have an unintended effect.\n    // Since the cached data is already in the desired format, there is no need to apply the transformation function again.\n    config.transformResponse = undefined;\n\n    // Even though the response interceptor receives this one from here,\n    // it has been configured to ignore cached responses = true\n    config.adapter = function cachedAdapter(): Promise<CacheAxiosResponse> {\n      return Promise.resolve({\n        config,\n        data: cachedResponse.data,\n        headers: cachedResponse.headers,\n        status: cachedResponse.status,\n        statusText: cachedResponse.statusText,\n        cached: true,\n        stale: (cache as LoadingStorageValue).previous === 'stale',\n\n        id: config.id!\n      });\n    };\n\n    if (__ACI_DEV__) {\n      axios.debug({\n        id: config.id,\n        msg: 'Returning cached response'\n      });\n    }\n\n    return config;\n  };\n\n  return {\n    onFulfilled\n  };\n}\n","import type { CacheAxiosResponse } from '../cache/axios.js';\n\nimport type { CachePredicate, CachePredicateObject } from './types.js';\n\n/** Tests an response against a {@link CachePredicateObject}. */\nexport async function testCachePredicate<R = unknown, D = unknown>(\n  response: CacheAxiosResponse<R, D>,\n  predicate: CachePredicate<R, D>\n): Promise<boolean> {\n  if (typeof predicate === 'function') {\n    return predicate(response);\n  }\n\n  const { statusCheck, responseMatch, containsHeaders } = predicate;\n\n  if (\n    (statusCheck && !(await statusCheck(response.status))) ||\n    (responseMatch && !(await responseMatch(response)))\n  ) {\n    return false;\n  }\n\n  if (containsHeaders) {\n    for (const [header, predicate] of Object.entries(containsHeaders)) {\n      if (\n        !(await predicate(\n          // Avoid bugs in case the header is not in lower case\n          response.headers[header.toLowerCase()] ?? response.headers[header]\n        ))\n      ) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import type { CacheAxiosResponse } from '../cache/axios.js';\nimport type { AxiosStorage } from '../storage/types.js';\nimport type { CacheUpdater } from './types.js';\n\n/** Function to update all caches, from CacheProperties.update, with the new data. */\nexport async function updateCache<R, D>(\n  storage: AxiosStorage,\n  data: CacheAxiosResponse<R, D>,\n  cacheUpdater: CacheUpdater<R, D>\n): Promise<void> {\n  // Global cache update function.\n  if (typeof cacheUpdater === 'function') {\n    return cacheUpdater(data);\n  }\n\n  for (const [cacheKey, updater] of Object.entries(cacheUpdater)) {\n    if (updater === 'delete') {\n      await storage.remove(cacheKey, data.config);\n      continue;\n    }\n\n    const value = await storage.get(cacheKey, data.config);\n\n    if (value.state === 'loading') {\n      continue;\n    }\n\n    const newValue = await updater(value, data);\n\n    if (newValue === 'delete') {\n      await storage.remove(cacheKey, data.config);\n      continue;\n    }\n\n    if (newValue !== 'ignore') {\n      await storage.set(cacheKey, newValue, data.config);\n    }\n  }\n}\n","import type { AxiosResponseHeaders } from 'axios';\nimport { parse } from 'cache-parser';\nimport type { AxiosCacheInstance, CacheAxiosResponse, CacheRequestConfig } from '../cache/axios.js';\nimport type { CacheProperties } from '../cache/cache.js';\nimport { Header } from '../header/headers.js';\nimport type { CachedStorageValue } from '../storage/types.js';\nimport { testCachePredicate } from '../util/cache-predicate.js';\nimport { updateCache } from '../util/update-cache.js';\nimport type { ResponseInterceptor } from './build.js';\nimport { createCacheResponse, isMethodIn } from './util.js';\n\nexport function defaultResponseInterceptor(axios: AxiosCacheInstance): ResponseInterceptor {\n  /**\n   * Rejects cache for an response response.\n   *\n   * Also update the waiting list for this key by rejecting it.\n   */\n  const rejectResponse = async (\n    responseId: string,\n    config: CacheRequestConfig,\n    clearCache: boolean\n  ) => {\n    // Updates the cache to empty to prevent infinite loading state\n    if (clearCache) {\n      await axios.storage.remove(responseId, config);\n    }\n\n    // Rejects the deferred, if present\n    const deferred = axios.waiting.get(responseId);\n\n    if (deferred) {\n      deferred.reject();\n      axios.waiting.delete(responseId);\n    }\n  };\n\n  const onFulfilled: ResponseInterceptor['onFulfilled'] = async (response) => {\n    // When response.config is not present, the response is indeed a error.\n    if (!response?.config) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          msg: 'Response interceptor received an unknown response.',\n          data: response\n        });\n      }\n\n      // Re-throws the error\n      throw response;\n    }\n\n    response.id = response.config.id!;\n    response.cached ??= false;\n\n    const config = response.config;\n    // Request interceptor merges defaults with per request configuration\n    const cacheConfig = config.cache as CacheProperties;\n\n    // Response is already cached\n    if (response.cached) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: 'Returned cached response'\n        });\n      }\n\n      return response;\n    }\n\n    // Skip cache: either false or weird behavior\n    // config.cache should always exists, at least from global config merge.\n    if (!cacheConfig) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: 'Response with config.cache falsy',\n          data: response\n        });\n      }\n\n      response.cached = false;\n      return response;\n    }\n\n    // Update other entries before updating himself\n    if (cacheConfig.update) {\n      await updateCache(axios.storage, response, cacheConfig.update);\n    }\n\n    if (!isMethodIn(config.method, cacheConfig.methods)) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: `Ignored because method (${config.method}) is not in cache.methods (${cacheConfig.methods})`,\n          data: { config, cacheConfig }\n        });\n      }\n\n      return response;\n    }\n\n    const cache = await axios.storage.get(response.id, config);\n\n    if (\n      // If the request interceptor had a problem or it wasn't cached\n      cache.state !== 'loading'\n    ) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: \"Response not cached and storage isn't loading\",\n          data: { cache, response }\n        });\n      }\n\n      return response;\n    }\n\n    // Config told that this response should be cached.\n    if (\n      // For 'loading' values (previous: stale), this check already ran in the past.\n      !cache.data &&\n      !(await testCachePredicate(response, cacheConfig.cachePredicate))\n    ) {\n      await rejectResponse(response.id, config, true);\n\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: 'Cache predicate rejected this response'\n        });\n      }\n\n      return response;\n    }\n\n    // Avoid remnant headers from remote server to break implementation\n    for (const header of Object.keys(response.headers)) {\n      if (header.startsWith('x-axios-cache')) {\n        delete response.headers[header];\n      }\n    }\n\n    if (cacheConfig.etag && cacheConfig.etag !== true) {\n      response.headers[Header.XAxiosCacheEtag] = cacheConfig.etag;\n    }\n\n    if (cacheConfig.modifiedSince) {\n      response.headers[Header.XAxiosCacheLastModified] =\n        cacheConfig.modifiedSince === true\n          ? 'use-cache-timestamp'\n          : cacheConfig.modifiedSince.toUTCString();\n    }\n\n    let ttl = cacheConfig.ttl || -1; // always set from global config\n    let staleTtl: number | undefined;\n\n    if (cacheConfig.interpretHeader) {\n      const expirationTime = axios.headerInterpreter(response.headers, axios.location);\n\n      // Cache should not be used\n      if (expirationTime === 'dont cache') {\n        await rejectResponse(response.id, config, true);\n\n        if (__ACI_DEV__) {\n          axios.debug({\n            id: response.id,\n            msg: `Cache header interpreted as 'dont cache'`,\n            data: { cache, response, expirationTime }\n          });\n        }\n\n        return response;\n      }\n\n      if (expirationTime !== 'not enough headers') {\n        if (typeof expirationTime === 'number') {\n          ttl = expirationTime;\n        } else {\n          ttl = expirationTime.cache;\n          staleTtl = expirationTime.stale;\n        }\n      }\n    }\n\n    const data = createCacheResponse(response, cache.data);\n\n    if (typeof ttl === 'function') {\n      ttl = await ttl(response);\n    }\n\n    if (cacheConfig.staleIfError) {\n      response.headers[Header.XAxiosCacheStaleIfError] = String(ttl);\n    }\n\n    if (__ACI_DEV__) {\n      axios.debug({\n        id: response.id,\n        msg: 'Useful response configuration found',\n        data: { cacheConfig, cacheResponse: data }\n      });\n    }\n\n    const newCache: CachedStorageValue = {\n      state: 'cached',\n      ttl,\n      staleTtl,\n      createdAt: Date.now(),\n      data\n    };\n\n    // Define this key as cache on the storage\n    await axios.storage.set(response.id, newCache, config);\n\n    // Resolve all other requests waiting for this response\n    const waiting = axios.waiting.get(response.id);\n\n    if (waiting) {\n      waiting.resolve();\n      axios.waiting.delete(response.id);\n\n      if (__ACI_DEV__) {\n        axios.debug({\n          id: response.id,\n          msg: 'Found waiting deferred(s) and resolved them'\n        });\n      }\n    }\n\n    if (__ACI_DEV__) {\n      axios.debug({\n        id: response.id,\n        msg: 'Response cached',\n        data: { cache: newCache, response }\n      });\n    }\n\n    // Return the response with cached as false, because it was not cached at all\n    return response;\n  };\n\n  const onRejected: ResponseInterceptor['onRejected'] = async (error) => {\n    // When response.config is not present, the response is indeed a error.\n    if (!error.isAxiosError || !error.config) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          msg: 'FATAL: Received an non axios error in the rejected response interceptor, ignoring.',\n          data: error\n        });\n      }\n\n      // We should probably re-request the response to avoid an infinite loading state here\n      // but, since this is an unknown error, we cannot figure out what request ID to use.\n      // And the only solution is to let the storage actively reject the current loading state.\n      throw error;\n    }\n\n    const config = error.config as CacheRequestConfig & { headers: AxiosResponseHeaders };\n    const id = config.id;\n    const cacheConfig = config.cache as CacheProperties;\n    const response = error.response as CacheAxiosResponse | undefined;\n\n    // config.cache should always exist, at least from global config merge.\n    if (!cacheConfig || !id) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          msg: 'Web request returned an error but cache handling is not enabled',\n          data: { error }\n        });\n      }\n\n      throw error;\n    }\n\n    if (!isMethodIn(config.method, cacheConfig.methods)) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id,\n          msg: `Ignored because method (${config.method}) is not in cache.methods (${cacheConfig.methods})`,\n          data: { config, cacheConfig }\n        });\n      }\n\n      // Rejects all other requests waiting for this response\n      await rejectResponse(id, config, true);\n\n      throw error;\n    }\n\n    const cache = await axios.storage.get(id, config);\n\n    if (\n      // This will only not be loading if the interceptor broke\n      cache.state !== 'loading' ||\n      cache.previous !== 'stale'\n    ) {\n      if (__ACI_DEV__) {\n        axios.debug({\n          id,\n          msg: 'Caught an error in the request interceptor',\n          data: { cache, error, config }\n        });\n      }\n\n      // Rejects all other requests waiting for this response\n      await rejectResponse(\n        id,\n        config,\n        // Do not clear cache if this request is cached, but the request was cancelled before returning the cached response\n        error.code !== 'ERR_CANCELED' || (error.code === 'ERR_CANCELED' && cache.state !== 'cached')\n      );\n\n      throw error;\n    }\n\n    if (cacheConfig.staleIfError) {\n      const cacheControl = String(response?.headers[Header.CacheControl]);\n      const staleHeader = cacheControl && parse(cacheControl).staleIfError;\n\n      const staleIfError =\n        typeof cacheConfig.staleIfError === 'function'\n          ? await cacheConfig.staleIfError(response, cache, error)\n          : cacheConfig.staleIfError === true && staleHeader\n            ? staleHeader * 1000 //staleIfError is in seconds\n            : cacheConfig.staleIfError;\n\n      if (__ACI_DEV__) {\n        axios.debug({\n          id,\n          msg: 'Found cache if stale config for rejected response',\n          data: { error, config, staleIfError }\n        });\n      }\n\n      if (\n        staleIfError === true ||\n        // staleIfError is the number of seconds that stale is allowed to be used\n        (typeof staleIfError === 'number' && cache.createdAt + staleIfError > Date.now())\n      ) {\n        // re-mark the cache as stale\n        await axios.storage.set(\n          id,\n          {\n            state: 'stale',\n            createdAt: Date.now(),\n            data: cache.data\n          },\n          config\n        );\n        // Resolve all other requests waiting for this response\n        const waiting = axios.waiting.get(id);\n\n        if (waiting) {\n          waiting.resolve();\n          axios.waiting.delete(id);\n\n          if (__ACI_DEV__) {\n            axios.debug({\n              id,\n              msg: 'Found waiting deferred(s) and resolved them'\n            });\n          }\n        }\n\n        if (__ACI_DEV__) {\n          axios.debug({\n            id,\n            msg: 'staleIfError resolved this response with cached data',\n            data: { error, config, cache }\n          });\n        }\n\n        return {\n          cached: true,\n          stale: true,\n          config,\n          id,\n          data: cache.data.data,\n          headers: cache.data.headers,\n          status: cache.data.status,\n          statusText: cache.data.statusText\n        };\n      }\n    }\n\n    if (__ACI_DEV__) {\n      axios.debug({\n        id,\n        msg: 'Received an unknown error that could not be handled',\n        data: { error, config }\n      });\n    }\n\n    // Rejects all other requests waiting for this response\n    await rejectResponse(id, config, true);\n\n    throw error;\n  };\n\n  return {\n    onFulfilled,\n    onRejected\n  };\n}\n","import type { CacheRequestConfig } from '../cache/axios.js';\nimport { Header } from '../header/headers.js';\nimport type { MaybePromise } from '../util/types.js';\nimport type { AxiosStorage, CachedStorageValue, StaleStorageValue, StorageValue } from './types.js';\n\n/** Returns true if the provided object was created from {@link buildStorage} function. */\nexport const isStorage = (obj: unknown): obj is AxiosStorage =>\n  !!obj && !!(obj as Record<string, boolean>)['is-storage'];\n\nfunction hasUniqueIdentifierHeader(value: CachedStorageValue | StaleStorageValue): boolean {\n  const headers = value.data.headers;\n\n  return (\n    Header.ETag in headers ||\n    Header.LastModified in headers ||\n    Header.XAxiosCacheEtag in headers ||\n    Header.XAxiosCacheLastModified in headers\n  );\n}\n\n/** Returns true if value must be revalidated */\nexport function mustRevalidate(value: CachedStorageValue | StaleStorageValue): boolean {\n  // Must revalidate is a special case and should not serve stale values\n  // We could use cache-control's parse function, but this is way faster and simpler\n  return String(value.data.headers[Header.CacheControl]).includes('must-revalidate');\n}\n\n/** Returns true if this has sufficient properties to stale instead of expire. */\nexport function canStale(value: CachedStorageValue): boolean {\n  if (hasUniqueIdentifierHeader(value)) {\n    return true;\n  }\n\n  return (\n    value.state === 'cached' &&\n    value.staleTtl !== undefined &&\n    // Only allow stale values after the ttl is already in the past and the staleTtl is in the future.\n    // In cases that just createdAt + ttl > Date.now(), isn't enough because the staleTtl could be <= 0.\n    // This logic only returns true when Date.now() is between the (createdAt + ttl) and (createdAt + ttl + staleTtl).\n    // Following the example below:\n    // |--createdAt--:--ttl--:---staleTtl--->\n    // [        past        ][now is in here]\n    Math.abs(Date.now() - (value.createdAt + value.ttl)) <= value.staleTtl\n  );\n}\n\n/**\n * Checks if the provided cache is expired. You should also check if the cache\n * {@link canStale} and {@link mayUseStale}\n */\nexport function isExpired(value: CachedStorageValue | StaleStorageValue): boolean {\n  return value.ttl !== undefined && value.createdAt + value.ttl <= Date.now();\n}\n\nexport interface BuildStorage extends Omit<AxiosStorage, 'get'> {\n  /**\n   * Returns the value for the given key. This method does not have to make checks for\n   * cache invalidation or anything. It just returns what was previous saved, if present.\n   *\n   * @param key The key to look for\n   * @param currentRequest The current {@link CacheRequestConfig}, if any\n   * @see https://axios-cache-interceptor.js.org/guide/storages#buildstorage\n   */\n  find: (\n    key: string,\n    currentRequest?: CacheRequestConfig\n  ) => MaybePromise<StorageValue | undefined>;\n}\n\n/**\n * All integrated storages are wrappers around the `buildStorage` function. External\n * libraries use it and if you want to build your own, `buildStorage` is the way to go!\n *\n * The exported `buildStorage` function abstracts the storage interface and requires a\n * super simple object to build the storage.\n *\n * **Note**: You can only create an custom storage with this function.\n *\n * @example\n *\n * ```js\n * const myStorage = buildStorage({\n *   find: () => {...},\n *   set: () => {...},\n *   remove: () => {...},\n *   clear: () => {...}\n * });\n *\n * const axios = setupCache(axios, { storage: myStorage });\n * ```\n *\n * @see https://axios-cache-interceptor.js.org/guide/storages#buildstorage\n */\nexport function buildStorage({ set, find, remove, clear }: BuildStorage): AxiosStorage {\n  return {\n    //@ts-expect-error - we don't want to expose this\n    'is-storage': 1,\n    set,\n    remove,\n    clear,\n    get: async (key, config) => {\n      let value = await find(key, config);\n\n      if (!value) {\n        return { state: 'empty' };\n      }\n\n      if (\n        value.state === 'empty' ||\n        value.state === 'loading' ||\n        value.state === 'must-revalidate'\n      ) {\n        return value;\n      }\n\n      // Handle cached values\n      if (value.state === 'cached') {\n        if (!isExpired(value)) {\n          return value;\n        }\n\n        // Tries to stale expired value\n        if (!canStale(value)) {\n          await remove(key, config);\n          return { state: 'empty' };\n        }\n\n        value = {\n          state: 'stale',\n          createdAt: value.createdAt,\n          data: value.data,\n          ttl: value.staleTtl !== undefined ? value.staleTtl + value.ttl : undefined\n        };\n\n        await set(key, value, config);\n\n        // Must revalidate is a special case and should not serve stale values\n        if (mustRevalidate(value)) {\n          return { ...value, state: 'must-revalidate' };\n        }\n      }\n\n      // A second check in case the new stale value was created already expired.\n      if (!isExpired(value)) {\n        return value;\n      }\n\n      if (hasUniqueIdentifierHeader(value)) {\n        return value;\n      }\n\n      await remove(key, config);\n      return { state: 'empty' };\n    }\n  };\n}\n","import { buildStorage, canStale, isExpired } from './build.js';\nimport type { AxiosStorage, StorageValue } from './types.js';\n\n/* c8 ignore start */\n/**\n * Clones an object using the structured clone algorithm if available, otherwise\n * it uses JSON.parse(JSON.stringify(value)).\n */\nconst clone: <T>(value: T) => T =\n  // https://caniuse.com/mdn-api_structuredclone (10/18/2023 92.51%)\n  typeof structuredClone === 'function'\n    ? structuredClone\n    : (value) => JSON.parse(JSON.stringify(value));\n/* c8 ignore stop */\n\n/**\n * Creates a simple in-memory storage. This means that if you need to persist data between\n * page or server reloads, this will not help.\n *\n * This is the storage used by default.\n *\n * If you need to modify it's data, you can do by the `data` property.\n *\n * @example\n *\n * ```js\n * const memoryStorage = buildMemoryStorage();\n *\n * setupCache(axios, { storage: memoryStorage });\n *\n * // Simple example to force delete the request cache\n *\n * const { id } = axios.get('url');\n *\n * delete memoryStorage.data[id];\n * ```\n *\n * @param {boolean | 'double'} cloneData Use `true` if the data returned by `find()`\n *   should be cloned to avoid mutating the original data outside the `set()` method. Use\n *   `'double'` to also clone before saving value in storage using `set()`. Disabled is\n *   default\n * @param {number | false} cleanupInterval The interval in milliseconds to run a\n *   setInterval job of cleaning old entries. If false, the job will not be created.\n *   Disabled is default\n * @param {number | false} maxEntries The maximum number of entries to keep in the\n *   storage. Its hard to determine the size of the entries, so a smart FIFO order is used\n *   to determine eviction. If false, no check will be done and you may grow up memory\n *   usage. Disabled is default\n */\nexport function buildMemoryStorage(\n  cloneData: boolean | 'double' = false,\n  cleanupInterval: number | false = false,\n  maxEntries: number | false = false\n) {\n  const storage = buildStorage({\n    set: (key, value) => {\n      if (maxEntries) {\n        let keys = Object.keys(storage.data);\n\n        // Tries to cleanup first\n        if (keys.length >= maxEntries) {\n          storage.cleanup();\n\n          // Recalculates the keys\n          keys = Object.keys(storage.data);\n\n          // Keeps deleting until there's space\n          while (keys.length >= maxEntries) {\n            // There's always at least one key here, otherwise it would not be\n            // in the loop.\n\n            delete storage.data[keys.shift()!];\n          }\n        }\n      }\n\n      // Clone the value before storing to prevent future mutations\n      // from affecting cached data.\n      storage.data[key] = cloneData === 'double' ? clone(value) : value;\n    },\n\n    remove: (key) => {\n      delete storage.data[key];\n    },\n\n    find: (key) => {\n      const value = storage.data[key];\n\n      return cloneData && value !== undefined ? clone(value) : value;\n    },\n\n    clear: () => {\n      storage.data = Object.create(null);\n    }\n  }) as MemoryStorage;\n\n  storage.data = Object.create(null) as Record<string, StorageValue>;\n\n  // When this program gets running for more than the specified interval, there's a good\n  // chance of it being a long-running process or at least have a lot of entries. Therefore,\n  // \"faster\" loop is more important than code readability.\n  storage.cleanup = () => {\n    const keys = Object.keys(storage.data);\n\n    let i = -1;\n    let value: StorageValue;\n    let key: string;\n\n    // Looping forward, as older entries are more likely to be expired\n    // than newer ones.\n    while (++i < keys.length) {\n      key = keys[i]!;\n      value = storage.data[key]!;\n\n      if (value.state === 'empty') {\n        storage.remove(key);\n        continue;\n      }\n\n      // If the value is expired and can't be stale, remove it\n      if (value.state === 'cached' && isExpired(value) && !canStale(value)) {\n        // this storage returns void.\n\n        storage.remove(key);\n      }\n    }\n  };\n\n  if (cleanupInterval) {\n    storage.cleaner = setInterval(storage.cleanup, cleanupInterval);\n  }\n\n  return storage;\n}\n\nexport interface MemoryStorage extends AxiosStorage {\n  data: Record<string, StorageValue>;\n  /** The job responsible to cleaning old entries */\n  cleaner: ReturnType<typeof setInterval>;\n  /** Tries to remove any invalid entry from the memory */\n  cleanup: () => void;\n}\n","import type { Method } from 'axios';\nimport { hash } from 'object-code';\nimport type { CacheRequestConfig } from '../cache/axios.js';\nimport type { KeyGenerator } from './types.js';\n\n// Remove first and last '/' char, if present\nconst SLASHES_REGEX = /^\\/|\\/$/g;\n\n/**\n * Builds an generator that receives a {@link CacheRequestConfig} and returns a value\n * hashed by {@link hash}.\n *\n * The value is hashed into a signed integer when the returned value from the provided\n * generator is not a `string` or a `number`.\n *\n * You can return any type of data structure.\n *\n * @example\n *\n * ```js\n * // This generator will return a hash code.\n * // The code will only be the same if url, method and data are the same.\n * const generator = buildKeyGenerator(({ url, method, data }) => ({\n *   url,\n *   method,\n *   data\n * }));\n * ```\n */\nexport function buildKeyGenerator<R = unknown, D = unknown>(\n  generator: (request: CacheRequestConfig<R, D>) => unknown\n): KeyGenerator<R, D> {\n  return (request) => {\n    if (request.id) {\n      return request.id;\n    }\n\n    const key = generator(request);\n\n    if (typeof key === 'string' || typeof key === 'number') {\n      return `${key}`;\n    }\n\n    return `${hash(key)}`;\n  };\n}\n\nexport const defaultKeyGenerator = buildKeyGenerator(({ baseURL, url, method, params, data }) => {\n  // Remove trailing slashes to avoid generating different keys for the \"same\" final url.\n  if (baseURL !== undefined) {\n    baseURL = baseURL.replace(SLASHES_REGEX, '');\n  } else {\n    // just to have a consistent hash\n    baseURL = '';\n  }\n\n  if (url !== undefined) {\n    url = url.replace(SLASHES_REGEX, '');\n  } else {\n    // just to have a consistent hash\n    url = '';\n  }\n\n  if (method !== undefined) {\n    method = method.toLowerCase() as Method;\n  } else {\n    // just to have a consistent hash\n    method = 'get';\n  }\n\n  return {\n    url: baseURL + (baseURL && url ? '/' : '') + url,\n    params: params,\n    method: method,\n    data: data\n  };\n});\n","import type { AxiosInstance } from 'axios';\nimport { defaultHeaderInterpreter } from '../header/interpreter.js';\nimport { defaultRequestInterceptor } from '../interceptors/request.js';\nimport { defaultResponseInterceptor } from '../interceptors/response.js';\nimport { isStorage } from '../storage/build.js';\nimport { buildMemoryStorage } from '../storage/memory.js';\nimport { defaultKeyGenerator } from '../util/key-generator.js';\nimport type { AxiosCacheInstance } from './axios.js';\nimport type { CacheInstance, CacheProperties } from './cache.js';\n\nexport interface CacheOptions extends Partial<CacheInstance>, Partial<CacheProperties> {}\n\n/**\n * Apply the caching interceptors for a already created axios instance.\n *\n * ```ts\n * const axios = setupCache(axios, OPTIONS);\n * ```\n *\n * The `setupCache` function receives global options and all [request\n * specifics](https://axios-cache-interceptor.js.org/config/request-specifics) ones too.\n * This way, you can customize the defaults for all requests.\n *\n * @param axios The already created axios instance\n * @param config The config for the caching interceptors\n * @returns The same instance with extended typescript types.\n * @see https://axios-cache-interceptor.js.org/config\n */\nexport function setupCache(axios: AxiosInstance, options: CacheOptions = {}): AxiosCacheInstance {\n  const axiosCache = axios as AxiosCacheInstance;\n\n  if (axiosCache.defaults.cache) {\n    throw new Error('setupCache() should be called only once');\n  }\n\n  axiosCache.location = typeof window === 'undefined' ? 'server' : 'client';\n\n  axiosCache.storage = options.storage || buildMemoryStorage();\n\n  if (!isStorage(axiosCache.storage)) {\n    throw new Error('Use buildStorage() function');\n  }\n\n  axiosCache.waiting = options.waiting || new Map();\n\n  axiosCache.generateKey = options.generateKey || defaultKeyGenerator;\n\n  axiosCache.headerInterpreter = options.headerInterpreter || defaultHeaderInterpreter;\n\n  axiosCache.requestInterceptor =\n    options.requestInterceptor || defaultRequestInterceptor(axiosCache);\n\n  axiosCache.responseInterceptor =\n    options.responseInterceptor || defaultResponseInterceptor(axiosCache);\n\n  axiosCache.debug = options.debug || function noop() {};\n\n  // CacheRequestConfig values\n  axiosCache.defaults.cache = {\n    update: options.update || {},\n\n    ttl: options.ttl ?? 1000 * 60 * 5,\n\n    // Although RFC 7231 also marks POST as cacheable, most users don't know that\n    // and may have problems about why their \"create X\" route not working.\n    methods: options.methods || ['get', 'head'],\n\n    cachePredicate: options.cachePredicate || {\n      // All cacheable status codes defined in RFC 7231\n      statusCheck: (status) => [200, 203, 300, 301, 302, 404, 405, 410, 414, 501].includes(status)\n    },\n\n    etag: options.etag ?? true,\n\n    // This option is going to be ignored by servers when ETag is enabled\n    // Checks strict equality to false to avoid undefined-ish values\n    modifiedSince: options.modifiedSince ?? options.etag === false,\n\n    interpretHeader: options.interpretHeader ?? true,\n\n    cacheTakeover: options.cacheTakeover ?? true,\n\n    staleIfError: options.staleIfError ?? true,\n\n    override: options.override ?? false,\n\n    hydrate: options.hydrate ?? undefined\n  };\n\n  // Apply interceptors\n  axiosCache.interceptors.request.use(\n    axiosCache.requestInterceptor.onFulfilled,\n    axiosCache.requestInterceptor.onRejected\n  );\n  axiosCache.interceptors.response.use(\n    axiosCache.responseInterceptor.onFulfilled,\n    axiosCache.responseInterceptor.onRejected\n  );\n\n  return axiosCache;\n}\n","import { buildStorage, canStale, isExpired } from './build.js';\nimport type { StorageValue } from './types.js';\n\n/**\n * Creates a simple storage. You can persist his data by using `sessionStorage` or\n * `localStorage` with it.\n *\n * **ImplNote**: Without polyfill, this storage only works on browser environments.\n *\n * @example\n *\n * ```js\n * const fromLocalStorage = buildWebStorage(localStorage);\n * const fromSessionStorage = buildWebStorage(sessionStorage);\n *\n * const myStorage = new Storage();\n * const fromMyStorage = buildWebStorage(myStorage);\n * ```\n *\n * @param storage The type of web storage to use. localStorage or sessionStorage.\n * @param prefix The prefix to index the storage. Useful to prevent collision between\n *   multiple places using the same storage.\n */\nexport function buildWebStorage(storage: Storage, prefix = 'axios-cache-') {\n  return buildStorage({\n    clear: () => {\n      for (const key in storage) {\n        if (key.startsWith(prefix)) {\n          storage.removeItem(key);\n        }\n      }\n    },\n\n    find: (key) => {\n      const json = storage.getItem(prefix + key);\n      return json ? (JSON.parse(json) as StorageValue) : undefined;\n    },\n\n    remove: (key) => {\n      storage.removeItem(prefix + key);\n    },\n\n    set: (key, value) => {\n      const save = () => storage.setItem(prefix + key, JSON.stringify(value));\n\n      try {\n        return save();\n      } catch (error) {\n        const allValues: [string, StorageValue][] = Object.entries(\n          storage as Record<string, string>\n        )\n          .filter((item) => item[0].startsWith(prefix))\n          .map((item) => [item[0], JSON.parse(item[1]) as StorageValue]);\n\n        // Remove all expired values\n        for (const value of allValues) {\n          if (value[1].state === 'cached' && isExpired(value[1]) && !canStale(value[1])) {\n            storage.removeItem(value[0]);\n          }\n        }\n\n        // Try save again after removing expired values\n        try {\n          return save();\n        } catch {\n          // Storage still full, try removing the oldest value until it can be saved\n\n          // Descending sort by createdAt\n          const sortedItems = allValues.sort(\n            (a, b) => (a[1].createdAt || 0) - (b[1].createdAt || 0)\n          );\n\n          for (const item of sortedItems) {\n            storage.removeItem(item[0]);\n\n            try {\n              return save();\n            } catch {\n              // This key didn't free all the required space\n            }\n          }\n        }\n\n        // Clear the cache for the specified key\n        storage.removeItem(prefix + key);\n      }\n    }\n  });\n}\n"],"names":["Header","Object","freeze","IfModifiedSince","LastModified","IfNoneMatch","CacheControl","Pragma","ETag","Expires","Age","XAxiosCacheEtag","XAxiosCacheLastModified","XAxiosCacheStaleIfError","defaultHeaderInterpreter","headers","location","cacheControl","cc","parse","String","noCache","noStore","private","immutable","cache","maxAge","undefined","age","Number","stale","maxStale","staleWhileRevalidate","expires","milliseconds","Date","now","createValidateStatus","oldValidate","status","isMethodIn","requestMethod","methodList","toLowerCase","some","method","updateStaleRequest","config","etag","modifiedSince","_cache$data","etagValue","data","createdAt","toUTCString","createCacheResponse","response","previousCache","cached","statusText","_extends","defaultRequestInterceptor","axios","onFulfilled","id","generateKey","defaults","cachePredicate","ignoreUrls","url","RegExp","lastIndex","test","includes","cacheTakeover","_config$headers","_Header$CacheControl","_config$headers$_Head","_config$headers2","_Header$Pragma","_config$headers2$_Hea","_config$headers3","_Header$Expires","_config$headers3$_Hea","methods","storage","get","overrideCache","override","ignoreAndRequest","state","waiting","has","def","deferred","set","catch","previous","validateStatus","hydrate","cachedResponse","err","transformResponse","adapter","cachedAdapter","Promise","resolve","testCachePredicate","predicate","statusCheck","responseMatch","containsHeaders","header","entries","_response$headers$hea","updateCache","cacheUpdater","cacheKey","updater","remove","value","newValue","defaultResponseInterceptor","rejectResponse","responseId","clearCache","reject","delete","_response$cached","cacheConfig","update","keys","startsWith","ttl","staleTtl","interpretHeader","expirationTime","headerInterpreter","staleIfError","newCache","onRejected","error","isAxiosError","code","staleHeader","isStorage","obj","hasUniqueIdentifierHeader","mustRevalidate","canStale","Math","abs","isExpired","buildStorage","find","clear","key","clone","structuredClone","JSON","stringify","buildMemoryStorage","cloneData","cleanupInterval","maxEntries","length","cleanup","shift","create","i","cleaner","setInterval","SLASHES_REGEX","buildKeyGenerator","generator","request","hash","defaultKeyGenerator","baseURL","params","replace","setupCache","options","_options$ttl","_options$etag","_options$modifiedSinc","_options$interpretHea","_options$cacheTakeove","_options$staleIfError","_options$override","_options$hydrate","axiosCache","Error","window","Map","requestInterceptor","responseInterceptor","debug","noop","interceptors","use","buildWebStorage","prefix","removeItem","json","getItem","save","setItem","allValues","filter","item","map","_unused","sortedItems","sort","a","b","_unused2"],"mappings":"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"}